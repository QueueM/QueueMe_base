{"swagger": "2.0", "info": {"title": "QueueMe API", "description": "REST API for QueueMe", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "support@queueme.net"}, "license": {"name": "BSD License"}, "version": "v1"}, "host": "api.queueme.net", "schemes": ["https"], "basePath": "/api", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/v1/": {"get": {"operationId": "v1_list", "summary": "The Queue Me Platform API root.", "description": "This endpoint provides links to all major API endpoints.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/analytics/anomalies/": {"get": {"operationId": "v1_analytics_anomalies_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "entity_type", "in": "query", "description": "entity_type", "required": false, "type": "string", "enum": ["shop", "specialist", "service", "platform"]}, {"name": "entity_type__in", "in": "query", "description": "entity_type__in", "required": false, "type": "string"}, {"name": "entity_id", "in": "query", "description": "entity_id", "required": false, "type": "string"}, {"name": "metric_type", "in": "query", "description": "metric_type", "required": false, "type": "string", "enum": ["booking_volume", "revenue", "cancellation_rate", "no_show_rate", "rating", "wait_time", "utilization", "other"]}, {"name": "metric_type__in", "in": "query", "description": "metric_type__in", "required": false, "type": "string"}, {"name": "severity", "in": "query", "description": "severity", "required": false, "type": "string", "enum": ["low", "medium", "high"]}, {"name": "severity__in", "in": "query", "description": "severity__in", "required": false, "type": "string"}, {"name": "detection_date", "in": "query", "description": "detection_date", "required": false, "type": "string"}, {"name": "is_acknowledged", "in": "query", "description": "is_acknowledged", "required": false, "type": "string"}, {"name": "acknowledged_by", "in": "query", "description": "acknowledged_by", "required": false, "type": "string"}, {"name": "detected_after", "in": "query", "description": "detected_after", "required": false, "type": "string"}, {"name": "detected_before", "in": "query", "description": "detected_before", "required": false, "type": "string"}, {"name": "acknowledged_only", "in": "query", "description": "acknowledged_only", "required": false, "type": "string"}, {"name": "unacknowledged_only", "in": "query", "description": "unacknowledged_only", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/AnomalyDetection"}}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/analytics/anomalies/{id}/": {"get": {"operationId": "v1_analytics_anomalies_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AnomalyDetection"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Anomaly Detection.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/analytics/anomalies/{id}/acknowledge/": {"post": {"operationId": "v1_analytics_anomalies_acknowledge", "description": "Anomaly detection API endpoints", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnomalyDetection"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AnomalyDetection"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Anomaly Detection.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/analytics/dashboard/platform_metrics/": {"get": {"operationId": "v1_analytics_dashboard_platform_metrics", "description": "Dashboard API endpoints for analytics dashboards", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/analytics/dashboard/shop_metrics/": {"get": {"operationId": "v1_analytics_dashboard_shop_metrics", "description": "Dashboard API endpoints for analytics dashboards", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/analytics/dashboard/specialist_metrics/": {"get": {"operationId": "v1_analytics_dashboard_specialist_metrics", "description": "Dashboard API endpoints for analytics dashboards", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/analytics/report-executions/": {"get": {"operationId": "v1_analytics_report-executions_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "report_type", "in": "query", "description": "report_type", "required": false, "type": "string"}, {"name": "report_type__in", "in": "query", "description": "report_type__in", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "status", "required": false, "type": "string", "enum": ["pending", "running", "completed", "failed"]}, {"name": "status__in", "in": "query", "description": "status__in", "required": false, "type": "string"}, {"name": "created_by", "in": "query", "description": "created_by", "required": false, "type": "string"}, {"name": "scheduled_report", "in": "query", "description": "scheduled_report", "required": false, "type": "string"}, {"name": "scheduled_report__isnull", "in": "query", "description": "scheduled_report__isnull", "required": false, "type": "string"}, {"name": "created_after", "in": "query", "description": "created_after", "required": false, "type": "string"}, {"name": "created_before", "in": "query", "description": "created_before", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ReportExecution"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_analytics_report-executions_create", "description": "Report execution API endpoints", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportExecution"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReportExecution"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/analytics/report-executions/{id}/": {"get": {"operationId": "v1_analytics_report-executions_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReportExecution"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_analytics_report-executions_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Report Execution.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/analytics/report-executions/{id}/download/": {"get": {"operationId": "v1_analytics_report-executions_download", "description": "Report execution API endpoints", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReportExecution"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Report Execution.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/analytics/scheduled-reports/": {"get": {"operationId": "v1_analytics_scheduled-reports_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "report_type", "in": "query", "description": "report_type", "required": false, "type": "string", "enum": ["shop_performance", "specialist_performance", "bookings_summary", "revenue_summary", "custom"]}, {"name": "report_type__in", "in": "query", "description": "report_type__in", "required": false, "type": "string"}, {"name": "frequency", "in": "query", "description": "frequency", "required": false, "type": "string", "enum": ["daily", "weekly", "monthly", "quarterly"]}, {"name": "frequency__in", "in": "query", "description": "frequency__in", "required": false, "type": "string"}, {"name": "is_active", "in": "query", "description": "is_active", "required": false, "type": "string"}, {"name": "created_by", "in": "query", "description": "created_by", "required": false, "type": "string"}, {"name": "recipient_type", "in": "query", "description": "recipient_type", "required": false, "type": "string", "enum": ["user", "shop", "email"]}, {"name": "recipient_user", "in": "query", "description": "recipient_user", "required": false, "type": "string"}, {"name": "recipient_shop", "in": "query", "description": "recipient_shop", "required": false, "type": "string"}, {"name": "created_after", "in": "query", "description": "created_after", "required": false, "type": "string"}, {"name": "created_before", "in": "query", "description": "created_before", "required": false, "type": "string"}, {"name": "next_run_before", "in": "query", "description": "next_run_before", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ReportAnalyticsApp_ScheduledReportSerializer"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_analytics_scheduled-reports_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportAnalyticsApp_ScheduledReportSerializer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReportAnalyticsApp_ScheduledReportSerializer"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/analytics/scheduled-reports/{id}/": {"get": {"operationId": "v1_analytics_scheduled-reports_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReportAnalyticsApp_ScheduledReportSerializer"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_analytics_scheduled-reports_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportAnalyticsApp_ScheduledReportSerializer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReportAnalyticsApp_ScheduledReportSerializer"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_analytics_scheduled-reports_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportAnalyticsApp_ScheduledReportSerializer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReportAnalyticsApp_ScheduledReportSerializer"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_analytics_scheduled-reports_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Scheduled Report.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/analytics/scheduled-reports/{id}/run_now/": {"post": {"operationId": "v1_analytics_scheduled-reports_run_now", "description": "Scheduled report API endpoints", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReportAnalyticsApp_ScheduledReportSerializer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReportAnalyticsApp_ScheduledReportSerializer"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Scheduled Report.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/analytics/shop-analytics/": {"get": {"operationId": "v1_analytics_shop-analytics_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "date", "in": "query", "description": "date", "required": false, "type": "string"}, {"name": "date__year", "in": "query", "description": "date__year", "required": false, "type": "string"}, {"name": "date__month", "in": "query", "description": "date__month", "required": false, "type": "string"}, {"name": "total_bookings", "in": "query", "description": "total_bookings", "required": false, "type": "string"}, {"name": "total_bookings__lt", "in": "query", "description": "total_bookings__lt", "required": false, "type": "string"}, {"name": "total_bookings__gt", "in": "query", "description": "total_bookings__gt", "required": false, "type": "string"}, {"name": "bookings_completed", "in": "query", "description": "bookings_completed", "required": false, "type": "string"}, {"name": "bookings_completed__lt", "in": "query", "description": "bookings_completed__lt", "required": false, "type": "string"}, {"name": "bookings_completed__gt", "in": "query", "description": "bookings_completed__gt", "required": false, "type": "string"}, {"name": "total_revenue", "in": "query", "description": "total_revenue", "required": false, "type": "string"}, {"name": "total_revenue__lt", "in": "query", "description": "total_revenue__lt", "required": false, "type": "string"}, {"name": "total_revenue__gt", "in": "query", "description": "total_revenue__gt", "required": false, "type": "string"}, {"name": "customer_ratings", "in": "query", "description": "customer_ratings", "required": false, "type": "string"}, {"name": "customer_ratings__lt", "in": "query", "description": "customer_ratings__lt", "required": false, "type": "string"}, {"name": "customer_ratings__gt", "in": "query", "description": "customer_ratings__gt", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "min_bookings", "in": "query", "description": "min_bookings", "required": false, "type": "string"}, {"name": "min_revenue", "in": "query", "description": "min_revenue", "required": false, "type": "string"}, {"name": "min_rating", "in": "query", "description": "min_rating", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ShopAnalytics"}}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/analytics/shop-analytics/booking_trends/": {"get": {"operationId": "v1_analytics_shop-analytics_booking_trends", "description": "Shop analytics API endpoints for Queue Me platform", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "date", "in": "query", "description": "date", "required": false, "type": "string"}, {"name": "date__year", "in": "query", "description": "date__year", "required": false, "type": "string"}, {"name": "date__month", "in": "query", "description": "date__month", "required": false, "type": "string"}, {"name": "total_bookings", "in": "query", "description": "total_bookings", "required": false, "type": "string"}, {"name": "total_bookings__lt", "in": "query", "description": "total_bookings__lt", "required": false, "type": "string"}, {"name": "total_bookings__gt", "in": "query", "description": "total_bookings__gt", "required": false, "type": "string"}, {"name": "bookings_completed", "in": "query", "description": "bookings_completed", "required": false, "type": "string"}, {"name": "bookings_completed__lt", "in": "query", "description": "bookings_completed__lt", "required": false, "type": "string"}, {"name": "bookings_completed__gt", "in": "query", "description": "bookings_completed__gt", "required": false, "type": "string"}, {"name": "total_revenue", "in": "query", "description": "total_revenue", "required": false, "type": "string"}, {"name": "total_revenue__lt", "in": "query", "description": "total_revenue__lt", "required": false, "type": "string"}, {"name": "total_revenue__gt", "in": "query", "description": "total_revenue__gt", "required": false, "type": "string"}, {"name": "customer_ratings", "in": "query", "description": "customer_ratings", "required": false, "type": "string"}, {"name": "customer_ratings__lt", "in": "query", "description": "customer_ratings__lt", "required": false, "type": "string"}, {"name": "customer_ratings__gt", "in": "query", "description": "customer_ratings__gt", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "min_bookings", "in": "query", "description": "min_bookings", "required": false, "type": "string"}, {"name": "min_revenue", "in": "query", "description": "min_revenue", "required": false, "type": "string"}, {"name": "min_rating", "in": "query", "description": "min_rating", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ShopAnalytics"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/analytics/shop-analytics/revenue_summary/": {"get": {"operationId": "v1_analytics_shop-analytics_revenue_summary", "description": "Shop analytics API endpoints for Queue Me platform", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "date", "in": "query", "description": "date", "required": false, "type": "string"}, {"name": "date__year", "in": "query", "description": "date__year", "required": false, "type": "string"}, {"name": "date__month", "in": "query", "description": "date__month", "required": false, "type": "string"}, {"name": "total_bookings", "in": "query", "description": "total_bookings", "required": false, "type": "string"}, {"name": "total_bookings__lt", "in": "query", "description": "total_bookings__lt", "required": false, "type": "string"}, {"name": "total_bookings__gt", "in": "query", "description": "total_bookings__gt", "required": false, "type": "string"}, {"name": "bookings_completed", "in": "query", "description": "bookings_completed", "required": false, "type": "string"}, {"name": "bookings_completed__lt", "in": "query", "description": "bookings_completed__lt", "required": false, "type": "string"}, {"name": "bookings_completed__gt", "in": "query", "description": "bookings_completed__gt", "required": false, "type": "string"}, {"name": "total_revenue", "in": "query", "description": "total_revenue", "required": false, "type": "string"}, {"name": "total_revenue__lt", "in": "query", "description": "total_revenue__lt", "required": false, "type": "string"}, {"name": "total_revenue__gt", "in": "query", "description": "total_revenue__gt", "required": false, "type": "string"}, {"name": "customer_ratings", "in": "query", "description": "customer_ratings", "required": false, "type": "string"}, {"name": "customer_ratings__lt", "in": "query", "description": "customer_ratings__lt", "required": false, "type": "string"}, {"name": "customer_ratings__gt", "in": "query", "description": "customer_ratings__gt", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "min_bookings", "in": "query", "description": "min_bookings", "required": false, "type": "string"}, {"name": "min_revenue", "in": "query", "description": "min_revenue", "required": false, "type": "string"}, {"name": "min_rating", "in": "query", "description": "min_rating", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ShopAnalytics"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/analytics/shop-analytics/{id}/": {"get": {"operationId": "v1_analytics_shop-analytics_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopAnalytics"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop Analytics.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/analytics/specialist-analytics/": {"get": {"operationId": "v1_analytics_specialist-analytics_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "specialist", "in": "query", "description": "specialist", "required": false, "type": "string"}, {"name": "date", "in": "query", "description": "date", "required": false, "type": "string"}, {"name": "date__year", "in": "query", "description": "date__year", "required": false, "type": "string"}, {"name": "date__month", "in": "query", "description": "date__month", "required": false, "type": "string"}, {"name": "total_bookings", "in": "query", "description": "total_bookings", "required": false, "type": "string"}, {"name": "total_bookings__lt", "in": "query", "description": "total_bookings__lt", "required": false, "type": "string"}, {"name": "total_bookings__gt", "in": "query", "description": "total_bookings__gt", "required": false, "type": "string"}, {"name": "bookings_completed", "in": "query", "description": "bookings_completed", "required": false, "type": "string"}, {"name": "bookings_completed__lt", "in": "query", "description": "bookings_completed__lt", "required": false, "type": "string"}, {"name": "bookings_completed__gt", "in": "query", "description": "bookings_completed__gt", "required": false, "type": "string"}, {"name": "customer_ratings", "in": "query", "description": "customer_ratings", "required": false, "type": "string"}, {"name": "customer_ratings__lt", "in": "query", "description": "customer_ratings__lt", "required": false, "type": "string"}, {"name": "customer_ratings__gt", "in": "query", "description": "customer_ratings__gt", "required": false, "type": "string"}, {"name": "utilization_rate", "in": "query", "description": "utilization_rate", "required": false, "type": "string"}, {"name": "utilization_rate__lt", "in": "query", "description": "utilization_rate__lt", "required": false, "type": "string"}, {"name": "utilization_rate__gt", "in": "query", "description": "utilization_rate__gt", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "min_bookings", "in": "query", "description": "min_bookings", "required": false, "type": "string"}, {"name": "min_rating", "in": "query", "description": "min_rating", "required": false, "type": "string"}, {"name": "shop", "in": "query", "description": "Shop ID", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SpecialistAnalytics"}}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/analytics/specialist-analytics/performance_comparison/": {"get": {"operationId": "v1_analytics_specialist-analytics_performance_comparison", "description": "Specialist analytics API endpoints", "parameters": [{"name": "specialist", "in": "query", "description": "specialist", "required": false, "type": "string"}, {"name": "date", "in": "query", "description": "date", "required": false, "type": "string"}, {"name": "date__year", "in": "query", "description": "date__year", "required": false, "type": "string"}, {"name": "date__month", "in": "query", "description": "date__month", "required": false, "type": "string"}, {"name": "total_bookings", "in": "query", "description": "total_bookings", "required": false, "type": "string"}, {"name": "total_bookings__lt", "in": "query", "description": "total_bookings__lt", "required": false, "type": "string"}, {"name": "total_bookings__gt", "in": "query", "description": "total_bookings__gt", "required": false, "type": "string"}, {"name": "bookings_completed", "in": "query", "description": "bookings_completed", "required": false, "type": "string"}, {"name": "bookings_completed__lt", "in": "query", "description": "bookings_completed__lt", "required": false, "type": "string"}, {"name": "bookings_completed__gt", "in": "query", "description": "bookings_completed__gt", "required": false, "type": "string"}, {"name": "customer_ratings", "in": "query", "description": "customer_ratings", "required": false, "type": "string"}, {"name": "customer_ratings__lt", "in": "query", "description": "customer_ratings__lt", "required": false, "type": "string"}, {"name": "customer_ratings__gt", "in": "query", "description": "customer_ratings__gt", "required": false, "type": "string"}, {"name": "utilization_rate", "in": "query", "description": "utilization_rate", "required": false, "type": "string"}, {"name": "utilization_rate__lt", "in": "query", "description": "utilization_rate__lt", "required": false, "type": "string"}, {"name": "utilization_rate__gt", "in": "query", "description": "utilization_rate__gt", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "min_bookings", "in": "query", "description": "min_bookings", "required": false, "type": "string"}, {"name": "min_rating", "in": "query", "description": "min_rating", "required": false, "type": "string"}, {"name": "shop", "in": "query", "description": "Shop ID", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SpecialistAnalytics"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/analytics/specialist-analytics/{id}/": {"get": {"operationId": "v1_analytics_specialist-analytics_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SpecialistAnalytics"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Specialist Analytics.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/appointments/": {"get": {"operationId": "v1_appointments_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "status", "in": "query", "description": "status", "required": false, "type": "string"}, {"name": "payment_status", "in": "query", "description": "payment_status", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "customer", "in": "query", "description": "customer", "required": false, "type": "string"}, {"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "service", "in": "query", "description": "service", "required": false, "type": "string"}, {"name": "specialist", "in": "query", "description": "specialist", "required": false, "type": "string"}, {"name": "today", "in": "query", "description": "today", "required": false, "type": "string"}, {"name": "upcoming", "in": "query", "description": "upcoming", "required": false, "type": "string"}, {"name": "past", "in": "query", "description": "past", "required": false, "type": "string"}, {"name": "this_week", "in": "query", "description": "this_week", "required": false, "type": "string"}, {"name": "this_month", "in": "query", "description": "this_month", "required": false, "type": "string"}, {"name": "statuses", "in": "query", "description": "statuses", "required": false, "type": "string", "enum": ["scheduled", "confirmed", "in_progress", "completed", "cancelled", "no_show"]}, {"name": "phone_number", "in": "query", "description": "phone_number", "required": false, "type": "string"}, {"name": "shop_name", "in": "query", "description": "shop_name", "required": false, "type": "string"}, {"name": "service_name", "in": "query", "description": "service_name", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Appointment"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_appointments_create", "summary": "Create an appointment", "description": "Book a new appointment with JSON schema validation", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"201": {"description": "Created - Appointment booked successfully"}, "400": {"description": "Bad Request - Invalid data or validation error"}, "500": {"description": "Internal Server Error - Unexpected error"}}, "tags": ["Bookings", "Appointments"]}, "parameters": []}, "/v1/appointments/availability/": {"get": {"operationId": "v1_appointments_availability", "summary": "Check service availability", "description": "Get available time slots for a service on a specific date", "parameters": [{"name": "status", "in": "query", "description": "status", "required": false, "type": "string"}, {"name": "payment_status", "in": "query", "description": "payment_status", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "customer", "in": "query", "description": "customer", "required": false, "type": "string"}, {"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "service", "in": "query", "description": "service", "required": false, "type": "string"}, {"name": "specialist", "in": "query", "description": "specialist", "required": false, "type": "string"}, {"name": "today", "in": "query", "description": "today", "required": false, "type": "string"}, {"name": "upcoming", "in": "query", "description": "upcoming", "required": false, "type": "string"}, {"name": "past", "in": "query", "description": "past", "required": false, "type": "string"}, {"name": "this_week", "in": "query", "description": "this_week", "required": false, "type": "string"}, {"name": "this_month", "in": "query", "description": "this_month", "required": false, "type": "string"}, {"name": "statuses", "in": "query", "description": "statuses", "required": false, "type": "string", "enum": ["scheduled", "confirmed", "in_progress", "completed", "cancelled", "no_show"]}, {"name": "phone_number", "in": "query", "description": "phone_number", "required": false, "type": "string"}, {"name": "shop_name", "in": "query", "description": "shop_name", "required": false, "type": "string"}, {"name": "service_name", "in": "query", "description": "service_name", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "service_id", "in": "query", "description": "Service ID to check availability for", "required": true, "type": "string"}, {"name": "date", "in": "query", "description": "Date to check availability for (YYYY-MM-DD)", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns available time slots"}, "400": {"description": "Bad Request - Missing parameters or invalid date"}}, "tags": ["Bookings", "Availability"]}, "parameters": []}, "/v1/appointments/recommend_specialist/": {"post": {"operationId": "v1_appointments_recommend_specialist", "summary": "Recommend a specialist", "description": "Get recommended specialist for a service and time slot based on preferences and availability", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"200": {"description": "Success - Returns recommended specialist"}, "400": {"description": "Bad Request - Invalid data"}, "404": {"description": "Not Found - No specialists available"}}, "tags": ["Bookings", "Specialists", "Recommendations"]}, "parameters": []}, "/v1/appointments/specialists/": {"get": {"operationId": "v1_appointments_specialists", "summary": "Get available specialists", "description": "Find specialists available for a specific service, date and time range", "parameters": [{"name": "status", "in": "query", "description": "status", "required": false, "type": "string"}, {"name": "payment_status", "in": "query", "description": "payment_status", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "customer", "in": "query", "description": "customer", "required": false, "type": "string"}, {"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "service", "in": "query", "description": "service", "required": false, "type": "string"}, {"name": "specialist", "in": "query", "description": "specialist", "required": false, "type": "string"}, {"name": "today", "in": "query", "description": "today", "required": false, "type": "string"}, {"name": "upcoming", "in": "query", "description": "upcoming", "required": false, "type": "string"}, {"name": "past", "in": "query", "description": "past", "required": false, "type": "string"}, {"name": "this_week", "in": "query", "description": "this_week", "required": false, "type": "string"}, {"name": "this_month", "in": "query", "description": "this_month", "required": false, "type": "string"}, {"name": "statuses", "in": "query", "description": "statuses", "required": false, "type": "string", "enum": ["scheduled", "confirmed", "in_progress", "completed", "cancelled", "no_show"]}, {"name": "phone_number", "in": "query", "description": "phone_number", "required": false, "type": "string"}, {"name": "shop_name", "in": "query", "description": "shop_name", "required": false, "type": "string"}, {"name": "service_name", "in": "query", "description": "service_name", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "service_id", "in": "query", "description": "Service ID to find specialists for", "required": true, "type": "string"}, {"name": "date", "in": "query", "description": "Date to check availability for (YYYY-MM-DD)", "required": true, "type": "string"}, {"name": "start_time", "in": "query", "description": "Start time (HH:MM)", "required": true, "type": "string"}, {"name": "end_time", "in": "query", "description": "End time (HH:MM)", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of available specialists"}, "400": {"description": "Bad Request - Missing parameters or invalid date/time"}}, "tags": ["Bookings", "Specialists", "Availability"]}, "parameters": []}, "/v1/appointments/{id}/": {"get": {"operationId": "v1_appointments_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_appointments_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_appointments_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_appointments_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Appointment.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/appointments/{id}/add_note/": {"post": {"operationId": "v1_appointments_add_note", "summary": "Add a note to an appointment", "description": "Add a note or comment to an existing appointment", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}, {"name": "pk", "in": "path", "description": "Appointment ID", "required": true, "type": "string"}], "responses": {"201": {"description": "Created - Note added successfully"}, "400": {"description": "Bad Request - Invalid data"}, "404": {"description": "Not Found - Appointment not found"}}, "tags": ["Bookings", "Appointments", "Notes"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Appointment.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/appointments/{id}/cancel/": {"post": {"operationId": "v1_appointments_cancel", "summary": "Cancel an appointment", "description": "Cancel an existing appointment with an optional reason", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}, {"name": "pk", "in": "path", "description": "Appointment ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Appointment cancelled successfully"}, "400": {"description": "Bad Request - Invalid data or cannot cancel"}, "404": {"description": "Not Found - Appointment not found"}}, "tags": ["Bookings", "Appointments"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Appointment.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/appointments/{id}/reschedule/": {"post": {"operationId": "v1_appointments_reschedule", "summary": "Reschedule an appointment", "description": "Change the date, time, or specialist for an existing appointment", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}, {"name": "pk", "in": "path", "description": "Appointment ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Appointment rescheduled successfully"}, "400": {"description": "Bad Request - Invalid data or cannot reschedule"}, "404": {"description": "Not Found - Appointment not found"}}, "tags": ["Bookings", "Appointments"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Appointment.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/auth/admin/users/": {"get": {"operationId": "v1_auth_admin_users_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_auth_admin_users_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/auth/admin/users/{id}/": {"get": {"operationId": "v1_auth_admin_users_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_auth_admin_users_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_auth_admin_users_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_auth_admin_users_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this User.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/auth/admin/users/{id}/activate/": {"post": {"operationId": "v1_auth_admin_users_activate", "summary": "Activate User", "description": "Activate a user account", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "User activated successfully"}, "404": {"description": "User not found"}, "403": {"description": "Permission denied"}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this User.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/auth/admin/users/{id}/deactivate/": {"post": {"operationId": "v1_auth_admin_users_deactivate", "summary": "Deactivate User", "description": "Deactivate a user account", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "User deactivated successfully"}, "404": {"description": "User not found"}, "403": {"description": "Permission denied"}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this User.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/auth/change-language/": {"post": {"operationId": "v1_auth_change_language", "summary": "Change Language Preference", "description": "Update the user's language preference", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ChangeLanguage"}}], "responses": {"200": {"description": "Language preference updated successfully"}, "400": {"description": "Invalid language code"}, "401": {"description": "Authentication required"}}, "tags": ["v1"]}, "parameters": []}, "/v1/auth/profile/": {"get": {"operationId": "v1_auth_get_profile", "summary": "Get User Profile", "description": "Get the authenticated user's profile information", "parameters": [], "responses": {"200": {"description": "User profile retrieved successfully"}, "401": {"description": "Authentication required"}}, "tags": ["v1"]}, "parameters": []}, "/v1/auth/refresh-token/": {"post": {"operationId": "v1_auth_refresh_token", "summary": "Refresh Token", "description": "Refresh authentication tokens using a valid refresh token", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"200": {"description": "Tokens refreshed successfully"}, "401": {"description": "Invalid or expired refresh token"}}, "tags": ["v1"]}, "parameters": []}, "/v1/auth/request-otp/": {"post": {"operationId": "v1_auth_request_otp", "summary": "Request OTP", "description": "Request a one-time password to be sent to the provided phone number", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/OTPRequest"}}], "responses": {"200": {"description": "OTP sent successfully"}, "400": {"description": "Invalid phone number format"}, "429": {"description": "Too many requests, please try again later"}}, "tags": ["v1"]}, "parameters": []}, "/v1/auth/token/refresh/": {"post": {"operationId": "v1_auth_token_refresh_token", "summary": "Refresh Token", "description": "Refresh authentication tokens using a valid refresh token", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"200": {"description": "Tokens refreshed successfully"}, "401": {"description": "Invalid or expired refresh token"}}, "tags": ["v1"]}, "parameters": []}, "/v1/auth/verify-otp/": {"post": {"operationId": "v1_auth_verify_otp", "summary": "Verify OTP", "description": "Verify OTP code and authenticate user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/OTPVerify"}}], "responses": {"200": {"description": "OTP verified successfully, returns authentication tokens"}, "400": {"description": "Invalid OTP code or phone number"}, "401": {"description": "OTP verification failed"}, "429": {"description": "Too many failed attempts, please try again later"}}, "tags": ["v1"]}, "parameters": []}, "/v1/availability/best-specialist/": {"get": {"operationId": "v1_availability_best-specialist_list", "description": "Get the best specialist for a specific time slot", "parameters": [{"name": "service_id", "in": "query", "description": "Service UUID", "required": true, "type": "string", "format": "uuid"}, {"name": "date", "in": "query", "description": "Date in YYYY-MM-DD format", "required": false, "type": "string", "format": "date"}, {"name": "time_slot", "in": "query", "description": "Time slot in HH:MM format", "required": true, "type": "string"}], "responses": {"200": {"description": "Best specialist information", "schema": {"type": "object", "properties": {"specialist_id": {"description": "Specialist UUID", "type": "string"}, "specialist_name": {"description": "Specialist name", "type": "string"}, "optimization_score": {"description": "Optimization score", "type": "number"}, "alternative_specialists": {"description": "Alternative specialist IDs", "type": "array", "items": {"type": "string"}}}}}, "400": {"description": "Bad request"}, "404": {"description": "No specialist available for this slot"}}, "tags": ["v1"]}, "parameters": []}, "/v1/availability/dynamic/": {"get": {"operationId": "v1_availability_dynamic_list", "description": "Get optimized time slots for a service using intelligent scheduling algorithm", "parameters": [{"name": "service_id", "in": "query", "description": "Service UUID", "required": true, "type": "string", "format": "uuid"}, {"name": "date", "in": "query", "description": "Date in YYYY-MM-DD format", "required": false, "type": "string", "format": "date"}, {"name": "specialist_id", "in": "query", "description": "Specialist UUID (optional)", "required": false, "type": "string", "format": "uuid"}, {"name": "personalize", "in": "query", "description": "Whether to personalize results based on customer preferences", "required": false, "type": "boolean", "default": true}], "responses": {"200": {"description": "List of optimized time slots", "schema": {"type": "array", "items": {"type": "object", "properties": {"start": {"description": "Start time (HH:MM)", "type": "string"}, "end": {"description": "End time (HH:MM)", "type": "string"}, "duration": {"description": "Duration in minutes", "type": "integer"}, "specialist_id": {"description": "Optimal specialist ID", "type": "string"}, "specialist_name": {"description": "Specialist name", "type": "string"}, "popularity": {"description": "Time slot popularity (0-1)", "type": "number"}, "optimization_score": {"description": "Overall optimization score", "type": "number"}}}}}, "400": {"description": "Bad request"}, "404": {"description": "Service not found"}}, "tags": ["v1"]}, "parameters": []}, "/v1/availability/popular-slots/": {"get": {"operationId": "v1_availability_popular-slots_list", "description": "Get the most popular time slots for a service", "parameters": [{"name": "service_id", "in": "query", "description": "Service UUID", "required": true, "type": "string", "format": "uuid"}, {"name": "date", "in": "query", "description": "Date in YYYY-MM-DD format", "required": false, "type": "string", "format": "date"}, {"name": "limit", "in": "query", "description": "Maximum number of slots to return", "required": false, "type": "integer", "default": 3}], "responses": {"200": {"description": "List of popular time slots", "schema": {"type": "array", "items": {"type": "object", "properties": {"start": {"description": "Start time (HH:MM)", "type": "string"}, "end": {"description": "End time (HH:MM)", "type": "string"}, "popularity": {"description": "Popularity score (0-1)", "type": "number"}}}}}, "400": {"description": "Bad request"}}, "tags": ["v1"]}, "parameters": []}, "/v1/availability/quiet-slots/": {"get": {"operationId": "v1_availability_quiet-slots_list", "description": "Get the least busy time slots for a service", "parameters": [{"name": "service_id", "in": "query", "description": "Service UUID", "required": true, "type": "string", "format": "uuid"}, {"name": "date", "in": "query", "description": "Date in YYYY-MM-DD format", "required": false, "type": "string", "format": "date"}, {"name": "limit", "in": "query", "description": "Maximum number of slots to return", "required": false, "type": "integer", "default": 3}], "responses": {"200": {"description": "List of quiet time slots", "schema": {"type": "array", "items": {"type": "object", "properties": {"start": {"description": "Start time (HH:MM)", "type": "string"}, "end": {"description": "End time (HH:MM)", "type": "string"}, "popularity": {"description": "Popularity score (0-1)", "type": "number"}}}}}, "400": {"description": "Bad request"}}, "tags": ["v1"]}, "parameters": []}, "/v1/availability/service/": {"get": {"operationId": "v1_availability_service_list", "description": "Get available time slots for a service on a specific date", "parameters": [{"name": "service_id", "in": "query", "description": "Service UUID", "required": true, "type": "string", "format": "uuid"}, {"name": "date", "in": "query", "description": "Date in YYYY-MM-DD format", "required": false, "type": "string", "format": "date"}], "responses": {"200": {"description": "List of available time slots", "schema": {"type": "array", "items": {"type": "object", "properties": {"start": {"description": "Start time (HH:MM)", "type": "string"}, "end": {"description": "End time (HH:MM)", "type": "string"}, "duration": {"description": "Duration in minutes", "type": "integer"}, "specialist_id": {"description": "Available specialist ID", "type": "string"}}}}}, "400": {"description": "Bad request"}, "404": {"description": "Service not found"}}, "tags": ["v1"]}, "parameters": []}, "/v1/bookings/appointments/": {"get": {"operationId": "v1_bookings_appointments_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "status", "in": "query", "description": "status", "required": false, "type": "string"}, {"name": "payment_status", "in": "query", "description": "payment_status", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "customer", "in": "query", "description": "customer", "required": false, "type": "string"}, {"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "service", "in": "query", "description": "service", "required": false, "type": "string"}, {"name": "specialist", "in": "query", "description": "specialist", "required": false, "type": "string"}, {"name": "today", "in": "query", "description": "today", "required": false, "type": "string"}, {"name": "upcoming", "in": "query", "description": "upcoming", "required": false, "type": "string"}, {"name": "past", "in": "query", "description": "past", "required": false, "type": "string"}, {"name": "this_week", "in": "query", "description": "this_week", "required": false, "type": "string"}, {"name": "this_month", "in": "query", "description": "this_month", "required": false, "type": "string"}, {"name": "statuses", "in": "query", "description": "statuses", "required": false, "type": "string", "enum": ["scheduled", "confirmed", "in_progress", "completed", "cancelled", "no_show"]}, {"name": "phone_number", "in": "query", "description": "phone_number", "required": false, "type": "string"}, {"name": "shop_name", "in": "query", "description": "shop_name", "required": false, "type": "string"}, {"name": "service_name", "in": "query", "description": "service_name", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Appointment"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_bookings_appointments_create", "summary": "Create an appointment", "description": "Book a new appointment with JSON schema validation", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"201": {"description": "Created - Appointment booked successfully"}, "400": {"description": "Bad Request - Invalid data or validation error"}, "500": {"description": "Internal Server Error - Unexpected error"}}, "tags": ["Bookings", "Appointments"]}, "parameters": []}, "/v1/bookings/appointments/availability/": {"get": {"operationId": "v1_bookings_appointments_availability", "summary": "Check service availability", "description": "Get available time slots for a service on a specific date", "parameters": [{"name": "status", "in": "query", "description": "status", "required": false, "type": "string"}, {"name": "payment_status", "in": "query", "description": "payment_status", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "customer", "in": "query", "description": "customer", "required": false, "type": "string"}, {"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "service", "in": "query", "description": "service", "required": false, "type": "string"}, {"name": "specialist", "in": "query", "description": "specialist", "required": false, "type": "string"}, {"name": "today", "in": "query", "description": "today", "required": false, "type": "string"}, {"name": "upcoming", "in": "query", "description": "upcoming", "required": false, "type": "string"}, {"name": "past", "in": "query", "description": "past", "required": false, "type": "string"}, {"name": "this_week", "in": "query", "description": "this_week", "required": false, "type": "string"}, {"name": "this_month", "in": "query", "description": "this_month", "required": false, "type": "string"}, {"name": "statuses", "in": "query", "description": "statuses", "required": false, "type": "string", "enum": ["scheduled", "confirmed", "in_progress", "completed", "cancelled", "no_show"]}, {"name": "phone_number", "in": "query", "description": "phone_number", "required": false, "type": "string"}, {"name": "shop_name", "in": "query", "description": "shop_name", "required": false, "type": "string"}, {"name": "service_name", "in": "query", "description": "service_name", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "service_id", "in": "query", "description": "Service ID to check availability for", "required": true, "type": "string"}, {"name": "date", "in": "query", "description": "Date to check availability for (YYYY-MM-DD)", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns available time slots"}, "400": {"description": "Bad Request - Missing parameters or invalid date"}}, "tags": ["Bookings", "Availability"]}, "parameters": []}, "/v1/bookings/appointments/recommend_specialist/": {"post": {"operationId": "v1_bookings_appointments_recommend_specialist", "summary": "Recommend a specialist", "description": "Get recommended specialist for a service and time slot based on preferences and availability", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"200": {"description": "Success - Returns recommended specialist"}, "400": {"description": "Bad Request - Invalid data"}, "404": {"description": "Not Found - No specialists available"}}, "tags": ["Bookings", "Specialists", "Recommendations"]}, "parameters": []}, "/v1/bookings/appointments/specialists/": {"get": {"operationId": "v1_bookings_appointments_specialists", "summary": "Get available specialists", "description": "Find specialists available for a specific service, date and time range", "parameters": [{"name": "status", "in": "query", "description": "status", "required": false, "type": "string"}, {"name": "payment_status", "in": "query", "description": "payment_status", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "customer", "in": "query", "description": "customer", "required": false, "type": "string"}, {"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "service", "in": "query", "description": "service", "required": false, "type": "string"}, {"name": "specialist", "in": "query", "description": "specialist", "required": false, "type": "string"}, {"name": "today", "in": "query", "description": "today", "required": false, "type": "string"}, {"name": "upcoming", "in": "query", "description": "upcoming", "required": false, "type": "string"}, {"name": "past", "in": "query", "description": "past", "required": false, "type": "string"}, {"name": "this_week", "in": "query", "description": "this_week", "required": false, "type": "string"}, {"name": "this_month", "in": "query", "description": "this_month", "required": false, "type": "string"}, {"name": "statuses", "in": "query", "description": "statuses", "required": false, "type": "string", "enum": ["scheduled", "confirmed", "in_progress", "completed", "cancelled", "no_show"]}, {"name": "phone_number", "in": "query", "description": "phone_number", "required": false, "type": "string"}, {"name": "shop_name", "in": "query", "description": "shop_name", "required": false, "type": "string"}, {"name": "service_name", "in": "query", "description": "service_name", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "service_id", "in": "query", "description": "Service ID to find specialists for", "required": true, "type": "string"}, {"name": "date", "in": "query", "description": "Date to check availability for (YYYY-MM-DD)", "required": true, "type": "string"}, {"name": "start_time", "in": "query", "description": "Start time (HH:MM)", "required": true, "type": "string"}, {"name": "end_time", "in": "query", "description": "End time (HH:MM)", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of available specialists"}, "400": {"description": "Bad Request - Missing parameters or invalid date/time"}}, "tags": ["Bookings", "Specialists", "Availability"]}, "parameters": []}, "/v1/bookings/appointments/{id}/": {"get": {"operationId": "v1_bookings_appointments_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_bookings_appointments_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_bookings_appointments_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Appointment"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_bookings_appointments_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Appointment.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/bookings/appointments/{id}/add_note/": {"post": {"operationId": "v1_bookings_appointments_add_note", "summary": "Add a note to an appointment", "description": "Add a note or comment to an existing appointment", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}, {"name": "pk", "in": "path", "description": "Appointment ID", "required": true, "type": "string"}], "responses": {"201": {"description": "Created - Note added successfully"}, "400": {"description": "Bad Request - Invalid data"}, "404": {"description": "Not Found - Appointment not found"}}, "tags": ["Bookings", "Appointments", "Notes"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Appointment.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/bookings/appointments/{id}/cancel/": {"post": {"operationId": "v1_bookings_appointments_cancel", "summary": "Cancel an appointment", "description": "Cancel an existing appointment with an optional reason", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}, {"name": "pk", "in": "path", "description": "Appointment ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Appointment cancelled successfully"}, "400": {"description": "Bad Request - Invalid data or cannot cancel"}, "404": {"description": "Not Found - Appointment not found"}}, "tags": ["Bookings", "Appointments"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Appointment.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/bookings/appointments/{id}/reschedule/": {"post": {"operationId": "v1_bookings_appointments_reschedule", "summary": "Reschedule an appointment", "description": "Change the date, time, or specialist for an existing appointment", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Appointment"}}, {"name": "pk", "in": "path", "description": "Appointment ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Appointment rescheduled successfully"}, "400": {"description": "Bad Request - Invalid data or cannot reschedule"}, "404": {"description": "Not Found - Appointment not found"}}, "tags": ["Bookings", "Appointments"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Appointment.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/bookings/multi-service-bookings/": {"get": {"operationId": "v1_bookings_multi-service-bookings_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "customer", "in": "query", "description": "customer", "required": false, "type": "string"}, {"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "payment_status", "in": "query", "description": "payment_status", "required": false, "type": "string"}, {"name": "start_date", "in": "query", "description": "start_date", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "end_date", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/MultiServiceBooking"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_bookings_multi-service-bookings_create", "summary": "Create a multi-service booking", "description": "Book multiple services in a single transaction", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MultiServiceBooking"}}], "responses": {"201": {"description": "Created - Multi-service booking created successfully"}, "400": {"description": "Bad Request - Invalid data"}}, "tags": ["Bookings", "Multi-Service"]}, "parameters": []}, "/v1/bookings/multi-service-bookings/suggest_sequence/": {"post": {"operationId": "v1_bookings_multi-service-bookings_suggest_sequence", "summary": "Suggest optimal sequence", "description": "Suggest optimal sequence for multiple services based on availability", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MultiServiceBooking"}}], "responses": {"200": {"description": "Success - Returns suggested booking sequence"}, "400": {"description": "Bad Request - Missing parameters or invalid data"}, "404": {"description": "Not Found - Could not find suitable slots"}}, "tags": ["Bookings", "Multi-Service", "Recommendations"]}, "parameters": []}, "/v1/bookings/multi-service-bookings/{id}/": {"get": {"operationId": "v1_bookings_multi-service-bookings_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MultiServiceBooking"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Multi-Service Booking.", "required": true, "type": "integer"}]}, "/v1/categories/": {"get": {"operationId": "v1_categories_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CategoryList"}}}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_categories_create", "summary": "Create a new category using the CategoryService", "description": "Validates and creates a new category with the provided data.\nUses the service layer for business logic validation.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CategoryCreateUpdate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CategoryCreateUpdate"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/categories/check_integrity/": {"get": {"operationId": "v1_categories_check_integrity", "summary": "Check category hierarchy integrity", "description": "Validates the category hierarchy for issues like circular references,\norphaned categories, and other integrity problems.\n\nAdmin-only endpoint.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Category"}}}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/categories/featured/": {"get": {"operationId": "v1_categories_featured", "summary": "Get featured categories", "description": "Returns categories marked as featured, which are typically\nhighlighted in the UI and receive special promotion.\n\nQuery parameters:\n    limit: Maximum number of categories to return (default: 10)", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Category"}}}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/categories/flat_hierarchy/": {"get": {"operationId": "v1_categories_flat_hierarchy", "summary": "Get a flattened representation of the category hierarchy", "description": "Returns the category tree in a flat list with indentation information,\nuseful for dropdown selects with proper visual hierarchy.\n\nQuery parameters:\n    parent: Filter by parent category ID (optional)\n    include_inactive: Include inactive categories (default: false)", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Category"}}}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/categories/hierarchy/": {"get": {"operationId": "v1_categories_hierarchy", "summary": "Get complete category hierarchy as a nested structure", "description": "Returns the full category tree with parent-child relationships\nrepresented as nested objects. Useful for building category\nnavigation menus.\n\nQuery parameters:\n    include_inactive: Include inactive categories (default: false)", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CategoryHierarchy"}}}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/categories/parent_categories/": {"get": {"operationId": "v1_categories_parent_categories", "summary": "Get all parent categories (categories without a parent)", "description": "Returns all top-level categories in the hierarchy, which can be used\nas starting points for navigating the category tree.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Category"}}}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/categories/popular/": {"get": {"operationId": "v1_categories_popular", "summary": "Get popular categories based on service count and interactions", "description": "Returns categories that have the most services and user interactions,\nwhich are useful for highlighting trending categories.\n\nQuery parameters:\n    limit: Maximum number of categories to return (default: 10)", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Category"}}}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/categories/reorder/": {"post": {"operationId": "v1_categories_reorder", "summary": "Reorder categories by updating position values", "description": "Updates the position values of multiple categories at once,\nallowing for bulk reordering of categories.\n\nRequest body:\n    [\n        {\"id\": \"category_id\", \"position\": integer},\n        {\"id\": \"category_id\", \"position\": integer},\n        ...\n    ]", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Category"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Category"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/categories/statistics/": {"get": {"operationId": "v1_categories_statistics", "summary": "Get statistics about the category structure", "description": "Returns aggregate statistics about the category structure,\nincluding counts of categories at different levels, average\nchildren per parent, etc.\n\nAdmin-only endpoint.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Category"}}}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/categories/{id}/": {"get": {"operationId": "v1_categories_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Category"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_categories_update", "summary": "Update a category using the CategoryService", "description": "Validates and updates an existing category with the provided data.\nUses the service layer for business logic validation.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CategoryCreateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CategoryCreateUpdate"}}}, "tags": ["v1"]}, "patch": {"operationId": "v1_categories_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CategoryCreateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CategoryCreateUpdate"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_categories_delete", "summary": "Delete a category using the CategoryService", "description": "Deletes a category and handles any cleanup required,\nsuch as reassigning child categories.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Category.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/categories/{id}/breadcrumbs/": {"get": {"operationId": "v1_categories_breadcrumbs", "summary": "Get breadcrumb navigation data for a category", "description": "Returns the path from the root category to the specified category,\nuseful for creating breadcrumb navigation in the UI.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Category"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Category.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/categories/{id}/children/": {"get": {"operationId": "v1_categories_children", "summary": "Get all child categories for a parent category", "description": "Returns all immediate children of the specified category.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Category"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Category.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/categories/{id}/move/": {"post": {"operationId": "v1_categories_move", "summary": "Move a category to a new parent", "description": "Changes the parent of a category, effectively moving it in the hierarchy.\nValidates that the move won't create circular references.\n\nRequest body:\n    {\n        \"parent\": \"parent_id\" or null (for root level)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Category"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Category"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Category.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/categories/{id}/related/": {"get": {"operationId": "v1_categories_related", "summary": "Get categories related to the current category", "description": "Returns categories that have a relationship with the specified category,\noptionally filtered by relationship type.\n\nQuery parameters:\n    type: Relationship type (optional)\n    limit: Maximum number of categories to return (default: 5)", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Category"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Category.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/chat/conversations/": {"get": {"operationId": "v1_chat_conversations_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Conversation"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_chat_conversations_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateConversation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CreateConversation"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/chat/conversations/unread_count/": {"get": {"operationId": "v1_chat_conversations_unread_count", "summary": "Get total unread message count across all conversations", "description": "Returns the total number of unread messages for the current user\nacross all their conversations.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Conversation"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/chat/conversations/{id}/": {"get": {"operationId": "v1_chat_conversations_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_chat_conversations_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_chat_conversations_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_chat_conversations_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/chat/conversations/{id}/mark_read/": {"post": {"operationId": "v1_chat_conversations_mark_read", "summary": "Mark all messages in conversation as read", "description": "Marks all unread messages in the conversation as read for the current user.\nFor customers, this marks shop messages as read.\nFor employees, this marks customer messages as read.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/chat/conversations/{id}/messages/": {"get": {"operationId": "v1_chat_conversations_messages", "summary": "Get messages for a conversation", "description": "Retrieves messages for the specified conversation with pagination.\nAutomatically marks messages as read if the current user is not the sender.\nUpdates user presence and provides suggested responses for employees.\n\nQuery parameters:\n    page (int): Page number for pagination (default: 1)\n    page_size (int): Number of messages per page (default: 20)", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/chat/conversations/{id}/presence/": {"get": {"operationId": "v1_chat_conversations_presence", "summary": "Get presence information for all users in a conversation", "description": "Returns online status and last seen time for all users in the conversation.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/chat/conversations/{id}/send_message/": {"post": {"operationId": "v1_chat_conversations_send_message", "summary": "Send a message in a conversation", "description": "Creates a new message in the specified conversation.\n\nRequest body:\n    {\n        \"content\": \"Message text\", (required)\n        \"message_type\": \"text|image|file\", (optional, default: \"text\")\n        \"media_url\": \"https://example.com/file.jpg\", (optional, for non-text messages)\n        \"employee_id\": \"uuid\" (optional, for shop messages from specific employee)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/chat/conversations/{id}/typing_status/": {"post": {"operationId": "v1_chat_conversations_typing_status", "summary": "Update typing status for user", "description": "Sets the typing status of the current user in the conversation.\nThis is used to show typing indicators to other participants.\n\nRequest body:\n    {\n        \"is_typing\": boolean (default: false)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/chat/messages/{id}/": {"get": {"operationId": "v1_chat_messages_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Message.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/companies/": {"get": {"operationId": "v1_companies_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Company"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_companies_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Company"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Company"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/companies/{id}/": {"get": {"operationId": "v1_companies_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Company"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_companies_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Company"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Company"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_companies_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Company"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Company"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_companies_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Company.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/companies/{id}/settings/": {"patch": {"operationId": "v1_companies_settings", "summary": "Update company settings.", "description": "Updates various configuration settings for the company such as:\n- Notification preferences\n- Branding settings\n- Default configurations\n\nRequest Body:\n    JSON object with settings fields to update", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Company"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Company"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Company.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/companies/{id}/statistics/": {"get": {"operationId": "v1_companies_statistics", "summary": "Get company statistics.", "description": "Returns aggregated statistics about the company, such as:\n- Total shops count\n- Total revenue\n- Customer counts\n- Booking metrics\n- Growth trends", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Company"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Company.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/companies/{id}/subscription_status/": {"get": {"operationId": "v1_companies_subscription_status", "summary": "Get detailed subscription status.", "description": "Returns detailed information about the company's subscription including:\n- Current status\n- Plan details\n- Expiration date\n- Payment history", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Company"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Company.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/companies/{id}/verify/": {"patch": {"operationId": "v1_companies_verify", "summary": "Verify a company (Queue Me admin only).", "description": "Changes a company's verification status to verified.\nThis is typically done after reviewing company documents and information.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Company"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Company"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Company.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/conversations/": {"get": {"operationId": "v1_conversations_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Conversation"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_conversations_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CreateConversation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CreateConversation"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/conversations/unread_count/": {"get": {"operationId": "v1_conversations_unread_count", "summary": "Get total unread message count across all conversations", "description": "Returns the total number of unread messages for the current user\nacross all their conversations.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Conversation"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/conversations/{id}/": {"get": {"operationId": "v1_conversations_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_conversations_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_conversations_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_conversations_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/conversations/{id}/mark_read/": {"post": {"operationId": "v1_conversations_mark_read", "summary": "Mark all messages in conversation as read", "description": "Marks all unread messages in the conversation as read for the current user.\nFor customers, this marks shop messages as read.\nFor employees, this marks customer messages as read.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/conversations/{id}/messages/": {"get": {"operationId": "v1_conversations_messages", "summary": "Get messages for a conversation", "description": "Retrieves messages for the specified conversation with pagination.\nAutomatically marks messages as read if the current user is not the sender.\nUpdates user presence and provides suggested responses for employees.\n\nQuery parameters:\n    page (int): Page number for pagination (default: 1)\n    page_size (int): Number of messages per page (default: 20)", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/conversations/{id}/presence/": {"get": {"operationId": "v1_conversations_presence", "summary": "Get presence information for all users in a conversation", "description": "Returns online status and last seen time for all users in the conversation.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/conversations/{id}/send_message/": {"post": {"operationId": "v1_conversations_send_message", "summary": "Send a message in a conversation", "description": "Creates a new message in the specified conversation.\n\nRequest body:\n    {\n        \"content\": \"Message text\", (required)\n        \"message_type\": \"text|image|file\", (optional, default: \"text\")\n        \"media_url\": \"https://example.com/file.jpg\", (optional, for non-text messages)\n        \"employee_id\": \"uuid\" (optional, for shop messages from specific employee)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/conversations/{id}/typing_status/": {"post": {"operationId": "v1_conversations_typing_status", "summary": "Update typing status for user", "description": "Sets the typing status of the current user in the conversation.\nThis is used to show typing indicators to other participants.\n\nRequest body:\n    {\n        \"is_typing\": boolean (default: false)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/customers/": {"get": {"operationId": "v1_customers_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Customer"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_customers_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Customer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Customer"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/customers/me/": {"get": {"operationId": "v1_customers_me", "summary": "Get current user's profile", "description": "Returns the customer profile for the authenticated user.\nIf the profile doesn't exist, it creates one automatically.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Customer"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/customers/recommended_content/": {"get": {"operationId": "v1_customers_recommended_content", "summary": "Get personalized recommended content", "description": "Returns personalized recommendations based on the customer's\nbrowsing history, preferences, and past bookings.\n\nQuery parameters:\n    type (optional): Type of content to recommend\n          (all, shops, specialists, services)", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Customer"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/customers/update_preferences/": {"patch": {"operationId": "v1_customers_update_preferences", "summary": "Update customer preferences", "description": "Updates specific preferences for the customer such as:\n- Notification settings\n- Privacy settings\n- Display preferences\n- Language/locale preferences\n\nRequest body:\n    Key-value pairs of preferences to update", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Customer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Customer"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/customers/{id}/": {"get": {"operationId": "v1_customers_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CustomerDetail"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_customers_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Customer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Customer"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_customers_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Customer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Customer"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_customers_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/dashboard/data/": {"get": {"operationId": "v1_dashboard_data_list", "description": "Get complete dashboard data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/dashboard/data/charts/": {"get": {"operationId": "v1_dashboard_data_charts", "description": "Get chart data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/dashboard/data/kpis/": {"get": {"operationId": "v1_dashboard_data_kpis", "description": "Get only KPI data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/dashboard/data/tables/": {"get": {"operationId": "v1_dashboard_data_tables", "description": "Get table data", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/dashboard/filters/": {"get": {"operationId": "v1_dashboard_filters_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SavedFilter"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_dashboard_filters_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SavedFilter"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SavedFilter"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/dashboard/filters/{id}/": {"get": {"operationId": "v1_dashboard_filters_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SavedFilter"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_dashboard_filters_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SavedFilter"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SavedFilter"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_dashboard_filters_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SavedFilter"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SavedFilter"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_dashboard_filters_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Saved Filter.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/dashboard/filters/{id}/toggle_favorite/": {"post": {"operationId": "v1_dashboard_filters_toggle_favorite", "description": "Toggle favorite status of a filter", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SavedFilter"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SavedFilter"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Saved Filter.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/dashboard/layouts/": {"get": {"operationId": "v1_dashboard_layouts_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "name", "in": "query", "description": "name", "required": false, "type": "string"}, {"name": "is_default", "in": "query", "description": "is_default", "required": false, "type": "string"}, {"name": "created_at", "in": "query", "description": "created_at", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardLayout"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_dashboard_layouts_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardLayoutDetail"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DashboardLayoutDetail"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/dashboard/layouts/default/": {"get": {"operationId": "v1_dashboard_layouts_default", "description": "Get default layout for a shop", "parameters": [{"name": "name", "in": "query", "description": "name", "required": false, "type": "string"}, {"name": "is_default", "in": "query", "description": "is_default", "required": false, "type": "string"}, {"name": "created_at", "in": "query", "description": "created_at", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardLayout"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/dashboard/layouts/{id}/": {"get": {"operationId": "v1_dashboard_layouts_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardLayoutDetail"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_dashboard_layouts_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardLayoutDetail"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardLayoutDetail"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_dashboard_layouts_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardLayoutDetail"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardLayoutDetail"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_dashboard_layouts_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Dashboard Layout.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/dashboard/layouts/{id}/duplicate/": {"post": {"operationId": "v1_dashboard_layouts_duplicate", "description": "Duplicate a layout", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardLayout"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DashboardLayout"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Dashboard Layout.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/dashboard/layouts/{id}/set_default/": {"post": {"operationId": "v1_dashboard_layouts_set_default", "description": "Set a layout as default", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardLayout"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DashboardLayout"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Dashboard Layout.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/dashboard/preferences/": {"get": {"operationId": "v1_dashboard_preferences_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardPreference"}}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/dashboard/preferences/current/": {"get": {"operationId": "v1_dashboard_preferences_current", "description": "Get current user's dashboard preferences", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardPreference"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/dashboard/preferences/set_favorite_kpis/": {"post": {"operationId": "v1_dashboard_preferences_set_favorite_kpis", "description": "Set user's favorite KPIs", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardPreference"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DashboardPreference"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/dashboard/preferences/set_preferred_layout/": {"post": {"operationId": "v1_dashboard_preferences_set_preferred_layout", "description": "Set user's preferred dashboard layout", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardPreference"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DashboardPreference"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/dashboard/preferences/{id}/": {"get": {"operationId": "v1_dashboard_preferences_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardPreference"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_dashboard_preferences_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardPreference"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardPreference"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_dashboard_preferences_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardPreference"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardPreference"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Dashboard Preference.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/dashboard/reports/": {"get": {"operationId": "v1_dashboard_reports_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "name", "in": "query", "description": "name", "required": false, "type": "string"}, {"name": "frequency", "in": "query", "description": "frequency", "required": false, "type": "string", "enum": ["daily", "weekly", "monthly", "quarterly"]}, {"name": "is_active", "in": "query", "description": "is_active", "required": false, "type": "string"}, {"name": "created_at", "in": "query", "description": "created_at", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_dashboard_reports_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/dashboard/reports/templates/": {"get": {"operationId": "v1_dashboard_reports_templates", "description": "Get report templates", "parameters": [{"name": "name", "in": "query", "description": "name", "required": false, "type": "string"}, {"name": "frequency", "in": "query", "description": "frequency", "required": false, "type": "string", "enum": ["daily", "weekly", "monthly", "quarterly"]}, {"name": "is_active", "in": "query", "description": "is_active", "required": false, "type": "string"}, {"name": "created_at", "in": "query", "description": "created_at", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/dashboard/reports/{id}/": {"get": {"operationId": "v1_dashboard_reports_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_dashboard_reports_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_dashboard_reports_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_dashboard_reports_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Scheduled Report.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/dashboard/reports/{id}/send_now/": {"post": {"operationId": "v1_dashboard_reports_send_now", "description": "Manually send a report", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ShopDashboardApp_ScheduledReportSerializer"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Scheduled Report.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/dashboard/settings/": {"get": {"operationId": "v1_dashboard_settings_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "default_date_range", "in": "query", "description": "default_date_range", "required": false, "type": "string", "enum": ["today", "yesterday", "week", "month", "quarter", "year", "custom"]}, {"name": "auto_refresh_interval", "in": "query", "description": "auto_refresh_interval", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardSettings"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_dashboard_settings_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardSettings"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DashboardSettings"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/dashboard/settings/for_shop/": {"get": {"operationId": "v1_dashboard_settings_for_shop", "description": "Get settings for a specific shop", "parameters": [{"name": "default_date_range", "in": "query", "description": "default_date_range", "required": false, "type": "string", "enum": ["today", "yesterday", "week", "month", "quarter", "year", "custom"]}, {"name": "auto_refresh_interval", "in": "query", "description": "auto_refresh_interval", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardSettings"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/dashboard/settings/{id}/": {"get": {"operationId": "v1_dashboard_settings_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardSettings"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_dashboard_settings_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardSettings"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardSettings"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_dashboard_settings_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardSettings"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardSettings"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_dashboard_settings_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Dashboard Settings.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/dashboard/widgets/": {"get": {"operationId": "v1_dashboard_widgets_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "widget_type", "in": "query", "description": "widget_type", "required": false, "type": "string", "enum": ["kpi", "chart", "table", "activity", "notifications", "calendar"]}, {"name": "category", "in": "query", "description": "category", "required": false, "type": "string", "enum": ["revenue", "bookings", "customers", "services", "queue", "reviews", "specialists", "engagement"]}, {"name": "is_visible", "in": "query", "description": "is_visible", "required": false, "type": "string"}, {"name": "title", "in": "query", "description": "title", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardWidget"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_dashboard_widgets_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardWidget"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DashboardWidget"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/dashboard/widgets/{id}/": {"get": {"operationId": "v1_dashboard_widgets_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardWidget"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_dashboard_widgets_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardWidget"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardWidget"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_dashboard_widgets_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DashboardWidget"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DashboardWidget"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_dashboard_widgets_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Dashboard Widget.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/employees/": {"get": {"operationId": "v1_employees_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "position", "in": "query", "description": "position", "required": false, "type": "string", "enum": ["manager", "reception", "specialist", "assistant", "cashier", "customer_service", "admin", "other"]}, {"name": "is_active", "in": "query", "description": "is_active", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/EmployeeList"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_employees_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmployeeCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EmployeeCreate"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/employees/me/": {"get": {"operationId": "v1_employees_me", "summary": "Get current user's employee profile", "description": "Returns the employee profile for the authenticated user.", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "position", "in": "query", "description": "position", "required": false, "type": "string", "enum": ["manager", "reception", "specialist", "assistant", "cashier", "customer_service", "admin", "other"]}, {"name": "is_active", "in": "query", "description": "is_active", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/EmployeeDetail"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/employees/{id}/": {"get": {"operationId": "v1_employees_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EmployeeDetail"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_employees_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmployeeUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EmployeeUpdate"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_employees_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmployeeUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EmployeeUpdate"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_employees_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Employee.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/employees/{id}/make_specialist/": {"post": {"operationId": "v1_employees_make_specialist", "summary": "Convert employee to specialist", "description": "Transforms an employee into a specialist, which allows them to provide services\nand be booked by customers.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmployeeDetail"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EmployeeDetail"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Employee.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/employees/{id}/schedule/": {"get": {"operationId": "v1_employees_schedule", "summary": "Get employee's schedule for a date range", "description": "Returns the employee's schedule including working hours, appointments,\nand leaves for the specified date range.\n\nQuery parameters:\n    start_date: Start date (YYYY-MM-DD, default: today)\n    end_date: End date (YYYY-MM-DD, default: today + 6 days)", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EmployeeDetail"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Employee.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/employees/{id}/toggle_active/": {"post": {"operationId": "v1_employees_toggle_active", "summary": "Toggle employee active status", "description": "Changes an employee's active status from active to inactive or vice versa.\nThis can be used to temporarily disable an employee's account without deleting it.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmployeeDetail"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EmployeeDetail"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Employee.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/follows/": {"get": {"operationId": "v1_follows_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Follow"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_follows_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Follow"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Follow"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/follows/following/": {"get": {"operationId": "v1_follows_following", "summary": "Get all shops the current user is following", "description": "Returns a paginated list of all the shops the authenticated user is following.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Follow"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/follows/status/": {"get": {"operationId": "v1_follows_status", "summary": "Check if user is following a specific shop", "description": "Returns whether the current user is following the specified shop\nand the total follower count for that shop.\n\nQuery parameters:\n    shop_id: UUID of the shop (required)", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Follow"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/follows/toggle/": {"post": {"operationId": "v1_follows_toggle", "summary": "Toggle follow status for a shop", "description": "If the user is already following the shop, they will unfollow it.\nIf the user is not following the shop, they will follow it.\n\nRequest body:\n    {\n        \"shop_id\": \"uuid\" (required)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Follow"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Follow"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/follows/{id}/": {"get": {"operationId": "v1_follows_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Follow"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_follows_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Follow"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Follow"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_follows_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Follow"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Follow"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_follows_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/geo/areas/": {"get": {"operationId": "v1_geo_areas_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Area"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_geo_areas_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Area"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Area"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/geo/areas/{id}/": {"get": {"operationId": "v1_geo_areas_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Area"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_geo_areas_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Area"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Area"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_geo_areas_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Area"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Area"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_geo_areas_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Area.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/geo/check-city-match/": {"post": {"operationId": "v1_geo_check-city-match_create", "summary": "Handle POST request to check city match", "description": "Checks whether two locations are in the same city, using either\nlocation IDs or coordinates.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/geo/cities/": {"get": {"operationId": "v1_geo_cities_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/City"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_geo_cities_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/City"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/City"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/geo/cities/{id}/": {"get": {"operationId": "v1_geo_cities_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/City"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_geo_cities_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/City"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/City"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_geo_cities_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/City"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/City"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_geo_cities_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this City.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/geo/countries/": {"get": {"operationId": "v1_geo_countries_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Country"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_geo_countries_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Country"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Country"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/geo/countries/{id}/": {"get": {"operationId": "v1_geo_countries_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Country"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_geo_countries_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Country"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Country"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_geo_countries_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Country"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Country"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_geo_countries_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Country.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/geo/distance-matrix/": {"post": {"operationId": "v1_geo_distance-matrix_create", "summary": "Handle POST request to calculate distance matrix", "description": "Calculates distances between an origin point and multiple destination\npoints, using either location IDs or coordinates.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/geo/geocode/": {"post": {"operationId": "v1_geo_geocode_create", "summary": "Handle POST request to geocode an address", "description": "Converts a text address into geographic coordinates using\nthe GeoService.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/geo/locations/": {"get": {"operationId": "v1_geo_locations_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Location"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_geo_locations_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Location"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Location"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/geo/locations/{id}/": {"get": {"operationId": "v1_geo_locations_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Location"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_geo_locations_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Location"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Location"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_geo_locations_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Location"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Location"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_geo_locations_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Location.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/geo/nearby/{entity_type}/": {"get": {"operationId": "v1_geo_nearby_read", "summary": "Handle GET request to find nearby entities", "description": "Validates the request parameters and uses the GeospatialQueryService\nto find entities of the specified type near the given coordinates.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": [{"name": "entity_type", "in": "path", "required": true, "type": "string"}]}, "/v1/geo/reverse-geocode/": {"post": {"operationId": "v1_geo_reverse-geocode_create", "summary": "Handle POST request to reverse geocode coordinates", "description": "Converts geographic coordinates into a text address using\nthe GeoService.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/messages/{id}/": {"get": {"operationId": "v1_messages_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Message.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/notifications/": {"get": {"operationId": "v1_notifications_list", "summary": "List notifications", "description": "Retrieve all notifications for the current user", "parameters": [], "responses": {"200": {"description": "Success - Returns list of notifications"}}, "tags": ["Notifications"]}, "parameters": []}, "/v1/notifications/count_unread/": {"get": {"operationId": "v1_notifications_count_unread", "summary": "Count unread notifications", "description": "Get the count of unread notifications for the current user", "parameters": [], "responses": {"200": {"description": "Success - Returns unread count"}}, "tags": ["Notifications"]}, "parameters": []}, "/v1/notifications/mark_all_read/": {"post": {"operationId": "v1_notifications_mark_all_read", "summary": "Mark all notifications as read", "description": "Update all unread notifications to read status", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Notification"}}], "responses": {"200": {"description": "Success - All notifications marked as read"}}, "tags": ["Notifications"]}, "parameters": []}, "/v1/notifications/mark_multiple_read/": {"post": {"operationId": "v1_notifications_mark_multiple_read", "summary": "Mark multiple notifications as read", "description": "Update status of multiple specific notifications to read", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Notification"}}], "responses": {"200": {"description": "Success - Specified notifications marked as read"}, "400": {"description": "Bad Request - Invalid data"}}, "tags": ["Notifications"]}, "parameters": []}, "/v1/notifications/unread/": {"get": {"operationId": "v1_notifications_unread", "summary": "Get unread notifications", "description": "Retrieve all unread notifications for the current user", "parameters": [], "responses": {"200": {"description": "Success - Returns list of unread notifications"}}, "tags": ["Notifications"]}, "parameters": []}, "/v1/notifications/{id}/": {"get": {"operationId": "v1_notifications_read", "summary": "Get notification details", "description": "Retrieve details for a specific notification", "parameters": [{"name": "pk", "in": "path", "description": "Notification ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns notification details"}, "404": {"description": "Not Found - Notification not found"}}, "tags": ["Notifications"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this notification.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/notifications/{id}/mark_read/": {"post": {"operationId": "v1_notifications_mark_read", "summary": "Mark notification as read", "description": "Update a specific notification's status to read", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Notification"}}, {"name": "pk", "in": "path", "description": "Notification ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Notification marked as read"}, "404": {"description": "Not Found - Notification not found"}}, "tags": ["Notifications"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this notification.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/payments/": {"get": {"operationId": "v1_payments_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Transaction"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_payments_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Transaction"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/payments/add_payment_method/": {"post": {"operationId": "v1_payments_add_payment_method", "summary": "Add payment method", "description": "Add a new payment method for the current user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"201": {"description": "Created - Payment method added successfully"}, "400": {"description": "Bad Request - Invalid data or unable to add payment method"}}, "tags": ["Payments", "Payment Methods"]}, "parameters": []}, "/v1/payments/callback/{transaction_id}/": {"get": {"operationId": "v1_payments_check_payment_status", "summary": "Check payment status", "description": "Check the current status of a payment transaction", "parameters": [], "responses": {"200": {"description": "Success - Returns current transaction status"}, "404": {"description": "Not Found - Transaction not found"}}, "tags": ["Payments", "Transactions"]}, "parameters": [{"name": "transaction_id", "in": "path", "required": true, "type": "string"}]}, "/v1/payments/create_payment/": {"post": {"operationId": "v1_payments_create_payment", "summary": "Create payment", "description": "Create a new payment transaction for an object", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"201": {"description": "Created - Payment created successfully, returns transaction details"}, "400": {"description": "Bad Request - Invalid data or payment processing error"}}, "tags": ["Payments", "Transactions"]}, "parameters": []}, "/v1/payments/create_refund/": {"post": {"operationId": "v1_payments_create_refund", "summary": "Create refund", "description": "Create a refund for a specific transaction", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"200": {"description": "Success - Refund created successfully, returns refund details"}, "400": {"description": "Bad Request - Invalid data or unable to process refund"}, "404": {"description": "Not Found - Transaction not found"}}, "tags": ["Payments", "Refunds"]}, "parameters": []}, "/v1/payments/moyasar_public_key/": {"get": {"operationId": "v1_payments_moyasar_public_key", "summary": "Get Moyasar public keys", "description": "Get the appropriate Moyasar public key for the specified transaction type", "parameters": [{"name": "transaction_type", "in": "query", "description": "Type of transaction (booking, subscription, ad)", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns the public key for the wallet"}, "400": {"description": "Bad Request - Invalid transaction type"}}, "tags": ["Payments", "Configuration"]}, "parameters": []}, "/v1/payments/payment_methods/": {"get": {"operationId": "v1_payments_payment_methods", "summary": "Get payment methods", "description": "Retrieve all saved payment methods for the current user", "parameters": [], "responses": {"200": {"description": "Success - Returns list of payment methods"}}, "tags": ["Payments", "Payment Methods"]}, "parameters": []}, "/v1/payments/payments/": {"get": {"operationId": "v1_payments_payments_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Transaction"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_payments_payments_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Transaction"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/payments/payments/add_payment_method/": {"post": {"operationId": "v1_payments_payments_add_payment_method", "summary": "Add payment method", "description": "Add a new payment method for the current user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"201": {"description": "Created - Payment method added successfully"}, "400": {"description": "Bad Request - Invalid data or unable to add payment method"}}, "tags": ["Payments", "Payment Methods"]}, "parameters": []}, "/v1/payments/payments/create_payment/": {"post": {"operationId": "v1_payments_payments_create_payment", "summary": "Create payment", "description": "Create a new payment transaction for an object", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"201": {"description": "Created - Payment created successfully, returns transaction details"}, "400": {"description": "Bad Request - Invalid data or payment processing error"}}, "tags": ["Payments", "Transactions"]}, "parameters": []}, "/v1/payments/payments/create_refund/": {"post": {"operationId": "v1_payments_payments_create_refund", "summary": "Create refund", "description": "Create a refund for a specific transaction", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"200": {"description": "Success - Refund created successfully, returns refund details"}, "400": {"description": "Bad Request - Invalid data or unable to process refund"}, "404": {"description": "Not Found - Transaction not found"}}, "tags": ["Payments", "Refunds"]}, "parameters": []}, "/v1/payments/payments/moyasar_public_key/": {"get": {"operationId": "v1_payments_payments_moyasar_public_key", "summary": "Get Moyasar public keys", "description": "Get the appropriate Moyasar public key for the specified transaction type", "parameters": [{"name": "transaction_type", "in": "query", "description": "Type of transaction (booking, subscription, ad)", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns the public key for the wallet"}, "400": {"description": "Bad Request - Invalid transaction type"}}, "tags": ["Payments", "Configuration"]}, "parameters": []}, "/v1/payments/payments/payment_methods/": {"get": {"operationId": "v1_payments_payments_payment_methods", "summary": "Get payment methods", "description": "Retrieve all saved payment methods for the current user", "parameters": [], "responses": {"200": {"description": "Success - Returns list of payment methods"}}, "tags": ["Payments", "Payment Methods"]}, "parameters": []}, "/v1/payments/payments/recommend_payment_method/": {"get": {"operationId": "v1_payments_payments_recommend_payment_method", "summary": "Recommend payment method", "description": "Get recommended payment methods for the current user", "parameters": [{"name": "amount", "in": "query", "description": "Amount for the potential transaction (default: 100)", "required": false, "type": "number"}, {"name": "transaction_type", "in": "query", "description": "Type of transaction for the recommendation", "required": false, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of recommended payment methods"}}, "tags": ["Payments", "Payment Methods", "Recommendations"]}, "parameters": []}, "/v1/payments/payments/set_default_payment_method/": {"post": {"operationId": "v1_payments_payments_set_default_payment_method", "summary": "Set default payment method", "description": "Set a specific payment method as the default for the current user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"200": {"description": "Success - Default payment method updated"}, "400": {"description": "Bad Request - Invalid data or payment method not found"}}, "tags": ["Payments", "Payment Methods"]}, "parameters": []}, "/v1/payments/payments/transactions/": {"get": {"operationId": "v1_payments_payments_transactions", "summary": "List transactions", "description": "Retrieve transactions with optional filtering", "parameters": [{"name": "content_type_id", "in": "query", "description": "Content type ID to filter transactions by", "required": false, "type": "integer"}, {"name": "object_id", "in": "query", "description": "Object ID to filter transactions by", "required": false, "type": "string"}, {"name": "transaction_type", "in": "query", "description": "Type of transaction (booking, subscription, ad)", "required": false, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of transactions"}}, "tags": ["Payments", "Transactions"]}, "parameters": []}, "/v1/payments/payments/{id}/": {"get": {"operationId": "v1_payments_payments_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Transaction"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_payments_payments_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Transaction"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_payments_payments_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Transaction"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_payments_payments_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Transaction.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/payments/payments/{id}/check_payment_status/": {"get": {"operationId": "v1_payments_payments_check_payment_status", "summary": "Check payment status", "description": "Check the current status of a payment transaction", "parameters": [], "responses": {"200": {"description": "Success - Returns current transaction status"}, "404": {"description": "Not Found - Transaction not found"}}, "tags": ["Payments", "Transactions"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Transaction.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/payments/recommend_payment_method/": {"get": {"operationId": "v1_payments_recommend_payment_method", "summary": "Recommend payment method", "description": "Get recommended payment methods for the current user", "parameters": [{"name": "amount", "in": "query", "description": "Amount for the potential transaction (default: 100)", "required": false, "type": "number"}, {"name": "transaction_type", "in": "query", "description": "Type of transaction for the recommendation", "required": false, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of recommended payment methods"}}, "tags": ["Payments", "Payment Methods", "Recommendations"]}, "parameters": []}, "/v1/payments/set_default_payment_method/": {"post": {"operationId": "v1_payments_set_default_payment_method", "summary": "Set default payment method", "description": "Set a specific payment method as the default for the current user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"200": {"description": "Success - Default payment method updated"}, "400": {"description": "Bad Request - Invalid data or payment method not found"}}, "tags": ["Payments", "Payment Methods"]}, "parameters": []}, "/v1/payments/transactions/": {"get": {"operationId": "v1_payments_transactions", "summary": "List transactions", "description": "Retrieve transactions with optional filtering", "parameters": [{"name": "content_type_id", "in": "query", "description": "Content type ID to filter transactions by", "required": false, "type": "integer"}, {"name": "object_id", "in": "query", "description": "Object ID to filter transactions by", "required": false, "type": "string"}, {"name": "transaction_type", "in": "query", "description": "Type of transaction (booking, subscription, ad)", "required": false, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of transactions"}}, "tags": ["Payments", "Transactions"]}, "parameters": []}, "/v1/payments/{id}/": {"get": {"operationId": "v1_payments_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Transaction"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_payments_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Transaction"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_payments_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Transaction"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Transaction"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_payments_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Transaction.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/payments/{id}/check_payment_status/": {"get": {"operationId": "v1_payments_check_payment_status", "summary": "Check payment status", "description": "Check the current status of a payment transaction", "parameters": [], "responses": {"200": {"description": "Success - Returns current transaction status"}, "404": {"description": "Not Found - Transaction not found"}}, "tags": ["Payments", "Transactions"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Transaction.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/queue-tickets/": {"get": {"operationId": "v1_queue-tickets_list", "summary": "List queue tickets", "description": "Retrieve all queue tickets with optional filtering", "parameters": [{"name": "queue", "in": "query", "description": "Filter by queue ID", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "Filter by ticket status", "required": false, "type": "string"}, {"name": "customer", "in": "query", "description": "Filter by customer ID", "required": false, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of queue tickets"}, "403": {"description": "Forbidden - User doesn't have permission"}}, "tags": ["Queue Tickets"]}, "post": {"operationId": "v1_queue-tickets_create", "summary": "Create queue ticket", "description": "Create a new queue ticket", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/QueueTicket"}}], "responses": {"201": {"description": "Created - Queue ticket created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}}, "tags": ["Queue Tickets"]}, "parameters": []}, "/v1/queue-tickets/{id}/": {"get": {"operationId": "v1_queue-tickets_read", "summary": "Retrieve queue ticket", "description": "Get details of a specific queue ticket", "parameters": [{"name": "pk", "in": "path", "description": "Queue Ticket ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns queue ticket details"}, "404": {"description": "Not Found - Queue ticket not found"}}, "tags": ["Queue Tickets"]}, "put": {"operationId": "v1_queue-tickets_update", "summary": "Update queue ticket", "description": "Update an existing queue ticket", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/QueueTicket"}}, {"name": "pk", "in": "path", "description": "Queue Ticket ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Queue ticket updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Queue ticket not found"}}, "tags": ["Queue Tickets"]}, "patch": {"operationId": "v1_queue-tickets_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/QueueTicket"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/QueueTicket"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_queue-tickets_delete", "summary": "Delete queue ticket", "description": "Delete a queue ticket", "parameters": [{"name": "pk", "in": "path", "description": "Queue Ticket ID", "required": true, "type": "string"}], "responses": {"204": {"description": "No Content - Queue ticket deleted successfully"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Queue ticket not found"}}, "tags": ["Queue Tickets"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Queue Ticket.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/queue/call-next/": {"post": {"operationId": "v1_queue_call-next_create", "description": "Call next customer in queue", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/queue/cancel/": {"post": {"operationId": "v1_queue_cancel_create", "description": "Cancel a queue ticket", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/queue/customer/{customer_id}/active/": {"get": {"operationId": "v1_queue_customer_active_list", "description": "Get active tickets for a customer", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}]}, "/v1/queue/join/": {"post": {"operationId": "v1_queue_join_create", "description": "Add customer to queue", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/queue/list/": {"get": {"operationId": "v1_queue_list_list", "description": "List all queues or create a new queue", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Queue"}}}}, "tags": ["v1"]}, "post": {"operationId": "v1_queue_list_create", "description": "List all queues or create a new queue", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Queue"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Queue"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/queue/mark-served/": {"post": {"operationId": "v1_queue_mark-served_create", "description": "Mark customer as served (completed)", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/queue/mark-serving/": {"post": {"operationId": "v1_queue_mark-serving_create", "description": "Mark customer as being served", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/queue/position/": {"post": {"operationId": "v1_queue_position_create", "description": "Check a customer's position in queue", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": []}, "/v1/queue/shop/{shop_id}/": {"get": {"operationId": "v1_queue_shop_read", "description": "List all queues for a specific shop", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Queue"}}}}, "tags": ["v1"]}, "parameters": [{"name": "shop_id", "in": "path", "required": true, "type": "string"}]}, "/v1/queue/stats/{queue_id}/": {"get": {"operationId": "v1_queue_stats_read", "description": "Get statistics for a queue", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": [{"name": "queue_id", "in": "path", "required": true, "type": "string"}]}, "/v1/queue/status/{queue_id}/": {"get": {"operationId": "v1_queue_status_read", "description": "Get current status of a queue", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["v1"]}, "parameters": [{"name": "queue_id", "in": "path", "required": true, "type": "string"}]}, "/v1/queue/tickets/": {"get": {"operationId": "v1_queue_tickets_list", "description": "List all queue tickets", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/QueueTicket"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/queue/tickets/viewset/": {"get": {"operationId": "v1_queue_tickets_viewset_list", "summary": "List queue tickets", "description": "Retrieve all queue tickets with optional filtering", "parameters": [{"name": "queue", "in": "query", "description": "Filter by queue ID", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "Filter by ticket status", "required": false, "type": "string"}, {"name": "customer", "in": "query", "description": "Filter by customer ID", "required": false, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of queue tickets"}, "403": {"description": "Forbidden - User doesn't have permission"}}, "tags": ["Queue Tickets"]}, "post": {"operationId": "v1_queue_tickets_viewset_create", "summary": "Create queue ticket", "description": "Create a new queue ticket", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/QueueTicket"}}], "responses": {"201": {"description": "Created - Queue ticket created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}}, "tags": ["Queue Tickets"]}, "parameters": []}, "/v1/queue/tickets/viewset/{id}/": {"get": {"operationId": "v1_queue_tickets_viewset_read", "summary": "Retrieve queue ticket", "description": "Get details of a specific queue ticket", "parameters": [{"name": "pk", "in": "path", "description": "Queue Ticket ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns queue ticket details"}, "404": {"description": "Not Found - Queue ticket not found"}}, "tags": ["Queue Tickets"]}, "put": {"operationId": "v1_queue_tickets_viewset_update", "summary": "Update queue ticket", "description": "Update an existing queue ticket", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/QueueTicket"}}, {"name": "pk", "in": "path", "description": "Queue Ticket ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Queue ticket updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Queue ticket not found"}}, "tags": ["Queue Tickets"]}, "patch": {"operationId": "v1_queue_tickets_viewset_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/QueueTicket"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/QueueTicket"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_queue_tickets_viewset_delete", "summary": "Delete queue ticket", "description": "Delete a queue ticket", "parameters": [{"name": "pk", "in": "path", "description": "Queue Ticket ID", "required": true, "type": "string"}], "responses": {"204": {"description": "No Content - Queue ticket deleted successfully"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Queue ticket not found"}}, "tags": ["Queue Tickets"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Queue Ticket.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/queue/tickets/{id}/": {"get": {"operationId": "v1_queue_tickets_read", "description": "Retrieve a queue ticket", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/QueueTicket"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Queue Ticket.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/queue/viewset/": {"get": {"operationId": "v1_queue_viewset_list", "summary": "List queues", "description": "Retrieve all queues", "parameters": [], "responses": {"200": {"description": "Success - Returns list of queues"}, "403": {"description": "Forbidden - User doesn't have permission"}}, "tags": ["Queues"]}, "post": {"operationId": "v1_queue_viewset_create", "summary": "Create queue", "description": "Create a new queue", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Queue"}}], "responses": {"201": {"description": "Created - Queue created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}}, "tags": ["Queues"]}, "parameters": []}, "/v1/queue/viewset/{id}/": {"get": {"operationId": "v1_queue_viewset_read", "summary": "Retrieve queue", "description": "Get details of a specific queue", "parameters": [{"name": "pk", "in": "path", "description": "Queue ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns queue details"}, "404": {"description": "Not Found - Queue not found"}}, "tags": ["Queues"]}, "put": {"operationId": "v1_queue_viewset_update", "summary": "Update queue", "description": "Update an existing queue", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Queue"}}, {"name": "pk", "in": "path", "description": "Queue ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Queue updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Queue not found"}}, "tags": ["Queues"]}, "patch": {"operationId": "v1_queue_viewset_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Queue"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Queue"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_queue_viewset_delete", "summary": "Delete queue", "description": "Delete a queue", "parameters": [{"name": "pk", "in": "path", "description": "Queue ID", "required": true, "type": "string"}], "responses": {"204": {"description": "No Content - Queue deleted successfully"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Queue not found"}}, "tags": ["Queues"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Queue.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/queue/{id}/": {"get": {"operationId": "v1_queue_read", "description": "Retrieve, update or delete a queue", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Queue"}}}, "tags": ["v1"]}, "put": {"operationId": "v1_queue_update", "description": "Retrieve, update or delete a queue", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Queue"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Queue"}}}, "tags": ["v1"]}, "patch": {"operationId": "v1_queue_partial_update", "description": "Retrieve, update or delete a queue", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Queue"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Queue"}}}, "tags": ["v1"]}, "delete": {"operationId": "v1_queue_delete", "description": "Retrieve, update or delete a queue", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Queue.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/queues/": {"get": {"operationId": "v1_queues_list", "summary": "List queues", "description": "Retrieve all queues", "parameters": [], "responses": {"200": {"description": "Success - Returns list of queues"}, "403": {"description": "Forbidden - User doesn't have permission"}}, "tags": ["Queues"]}, "post": {"operationId": "v1_queues_create", "summary": "Create queue", "description": "Create a new queue", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Queue"}}], "responses": {"201": {"description": "Created - Queue created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}}, "tags": ["Queues"]}, "parameters": []}, "/v1/queues/{id}/": {"get": {"operationId": "v1_queues_read", "summary": "Retrieve queue", "description": "Get details of a specific queue", "parameters": [{"name": "pk", "in": "path", "description": "Queue ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns queue details"}, "404": {"description": "Not Found - Queue not found"}}, "tags": ["Queues"]}, "put": {"operationId": "v1_queues_update", "summary": "Update queue", "description": "Update an existing queue", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Queue"}}, {"name": "pk", "in": "path", "description": "Queue ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Queue updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Queue not found"}}, "tags": ["Queues"]}, "patch": {"operationId": "v1_queues_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Queue"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Queue"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_queues_delete", "summary": "Delete queue", "description": "Delete a queue", "parameters": [{"name": "pk", "in": "path", "description": "Queue ID", "required": true, "type": "string"}], "responses": {"204": {"description": "No Content - Queue deleted successfully"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Queue not found"}}, "tags": ["Queues"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Queue.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/reels/": {"get": {"operationId": "v1_reels_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "title", "in": "query", "description": "title", "required": false, "type": "string"}, {"name": "caption", "in": "query", "description": "caption", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "status", "required": false, "type": "string", "enum": ["draft", "published", "archived", "removed"]}, {"name": "created_at", "in": "query", "description": "created_at", "required": false, "type": "string"}, {"name": "view_count", "in": "query", "description": "view_count", "required": false, "type": "string"}, {"name": "category", "in": "query", "description": "category", "required": false, "type": "string"}, {"name": "service", "in": "query", "description": "service", "required": false, "type": "string"}, {"name": "package", "in": "query", "description": "package", "required": false, "type": "string"}, {"name": "created_after", "in": "query", "description": "created_after", "required": false, "type": "string"}, {"name": "created_before", "in": "query", "description": "created_before", "required": false, "type": "string"}, {"name": "min_views", "in": "query", "description": "min_views", "required": false, "type": "string"}, {"name": "max_views", "in": "query", "description": "max_views", "required": false, "type": "string"}, {"name": "is_trending", "in": "query", "description": "is_trending", "required": false, "type": "string"}, {"name": "min_engagement", "in": "query", "description": "min_engagement", "required": false, "type": "string"}, {"name": "max_duration", "in": "query", "description": "max_duration", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Reel"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_reels_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReelCreateUpdate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ReelCreateUpdate"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/reels/{id}/": {"get": {"operationId": "v1_reels_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReelDetail"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_reels_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReelCreateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReelCreateUpdate"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_reels_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ReelCreateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ReelCreateUpdate"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_reels_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Reel.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/reels/{id}/archive/": {"post": {"operationId": "v1_reels_archive", "summary": "Archive a published reel", "description": "Changes a reel's status from 'published' to 'archived', hiding it\nfrom customers without deleting it.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Reel"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Reel"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Reel.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/reels/{id}/publish/": {"post": {"operationId": "v1_reels_publish", "summary": "Publish a draft reel", "description": "Changes a reel's status from 'draft' to 'published', making it visible\nto customers. Requires at least one service or package to be linked.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Reel"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Reel"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Reel.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/reviews/": {"get": {"operationId": "v1_reviews_list", "summary": "List reviews", "description": "Return reviews based on the review_type parameter", "parameters": [{"name": "review_type", "in": "query", "description": "Type of reviews to list (shop, specialist, service, platform)", "required": false, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of reviews"}, "400": {"description": "Bad Request - Invalid review type"}}, "tags": ["Reviews"]}, "post": {"operationId": "v1_reviews_create", "summary": "Create review", "description": "Create a review based on the review_type parameter", "parameters": [], "responses": {"201": {"description": "Created - Review created successfully"}, "400": {"description": "Bad Request - Invalid review type or data"}, "401": {"description": "Unauthorized - Authentication required"}}, "tags": ["Reviews"]}, "parameters": []}, "/v1/roles/content-types/": {"get": {"operationId": "v1_roles_content-types_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ContentType"}}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/roles/content-types/for_roles/": {"get": {"operationId": "v1_roles_content-types_for_roles", "summary": "Get content types that can be assigned roles", "description": "Returns only the subset of content types that support role assignment,\nsuch as shops and companies. This filters out content types that don't\nmake sense in the context of role assignment.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ContentType"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/roles/content-types/{id}/": {"get": {"operationId": "v1_roles_content-types_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ContentType"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this content type.", "required": true, "type": "integer"}]}, "/v1/roles/logs/": {"get": {"operationId": "v1_roles_logs_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/RolePermissionLog"}}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/roles/logs/{id}/": {"get": {"operationId": "v1_roles_logs_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RolePermissionLog"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Role Permission Log.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/roles/permissions/": {"get": {"operationId": "v1_roles_permissions_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "resource", "in": "query", "description": "resource", "required": false, "type": "string", "enum": ["shop", "service", "employee", "specialist", "customer", "booking", "queue", "report", "reel", "story", "chat", "payment", "subscription", "discount", "review", "package", "category", "company", "roles", "notifications", "ad", "analytics"]}, {"name": "action", "in": "query", "description": "action", "required": false, "type": "string", "enum": ["view", "add", "edit", "delete", "manage", "approve", "report"]}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Permission"}}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/roles/permissions/grouped/": {"get": {"operationId": "v1_roles_permissions_grouped", "summary": "Get permissions grouped by resource", "description": "Returns a list of resources, each with its associated permissions.\nThis endpoint is useful for UI representations of permissions where\nthey are grouped by resource for easier management.", "parameters": [{"name": "resource", "in": "query", "description": "resource", "required": false, "type": "string", "enum": ["shop", "service", "employee", "specialist", "customer", "booking", "queue", "report", "reel", "story", "chat", "payment", "subscription", "discount", "review", "package", "category", "company", "roles", "notifications", "ad", "analytics"]}, {"name": "action", "in": "query", "description": "action", "required": false, "type": "string", "enum": ["view", "add", "edit", "delete", "manage", "approve", "report"]}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Permission"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/roles/permissions/{id}/": {"get": {"operationId": "v1_roles_permissions_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Permission"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Permission.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/roles/roles/": {"get": {"operationId": "v1_roles_roles_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Role"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_roles_roles_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Role"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Role"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/roles/roles/{id}/": {"get": {"operationId": "v1_roles_roles_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RoleDetail"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_roles_roles_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Role"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Role"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_roles_roles_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Role"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Role"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_roles_roles_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Role.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/roles/roles/{id}/add_users/": {"post": {"operationId": "v1_roles_roles_add_users", "summary": "Add multiple users to a role", "description": "Request body:\n    {\n        \"user_ids\": [\"uuid1\", \"uuid2\", ...] (required)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Role"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Role"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Role.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/roles/roles/{id}/clone/": {"post": {"operationId": "v1_roles_roles_clone", "summary": "Clone a role with its permissions", "description": "Creates a new role with the same permissions as the source role,\nbut with a new name and optionally a new description.\n\nRequest body:\n    {\n        \"name\": \"New Role Name\", (required)\n        \"description\": \"New role description\" (optional)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Role"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Role"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Role.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/roles/roles/{id}/transfer_users/": {"post": {"operationId": "v1_roles_roles_transfer_users", "summary": "Transfer users from this role to another role", "description": "Moves all users from the current role to another role.\n\nRequest body:\n    {\n        \"to_role_id\": \"uuid\" (required)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Role"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Role"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Role.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/roles/user-roles/": {"get": {"operationId": "v1_roles_user-roles_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserRole"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_roles_user-roles_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserRole"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UserRole"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/roles/user-roles/by_entity/": {"get": {"operationId": "v1_roles_user-roles_by_entity", "summary": "Get roles for a specific entity (e.g., shop, company)", "description": "Query parameters:\n    entity_type: Type of entity (e.g., 'shop', 'company') (required)\n    entity_id: UUID of the entity (required)", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserRole"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/roles/user-roles/by_role/": {"get": {"operationId": "v1_roles_user-roles_by_role", "summary": "Get users for a specific role", "description": "Query parameters:\n    role_id: UUID of the role (required)", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserRole"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/roles/user-roles/by_user/": {"get": {"operationId": "v1_roles_user-roles_by_user", "summary": "Get roles for a specific user", "description": "Query parameters:\n    user_id: UUID of the user (required)", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserRole"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/roles/user-roles/my_roles/": {"get": {"operationId": "v1_roles_user-roles_my_roles", "summary": "Get roles for the current user", "description": "Returns all active roles assigned to the current authenticated user.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserRole"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/roles/user-roles/{id}/": {"get": {"operationId": "v1_roles_user-roles_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserRole"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_roles_user-roles_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserRole"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserRole"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_roles_user-roles_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserRole"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserRole"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_roles_user-roles_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this User Role.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/services/": {"get": {"operationId": "v1_services_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "category", "in": "query", "description": "category", "required": false, "type": "string"}, {"name": "parent_category", "in": "query", "description": "parent_category", "required": false, "type": "string"}, {"name": "min_price", "in": "query", "description": "min_price", "required": false, "type": "string"}, {"name": "max_price", "in": "query", "description": "max_price", "required": false, "type": "string"}, {"name": "max_duration", "in": "query", "description": "max_duration", "required": false, "type": "string"}, {"name": "service_location", "in": "query", "description": "service_location", "required": false, "type": "string", "enum": ["in_shop", "in_home", "both"]}, {"name": "status", "in": "query", "description": "status", "required": false, "type": "string", "enum": ["active", "inactive", "draft", "archived"]}, {"name": "is_featured", "in": "query", "description": "is_featured", "required": false, "type": "string"}, {"name": "specialist", "in": "query", "description": "specialist", "required": false, "type": "string"}, {"name": "city", "in": "query", "description": "city", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "search", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ServiceList"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_services_create", "summary": "Create a service", "description": "Create a new service with detailed information", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceCreate"}}], "responses": {"201": {"description": "Created - Service created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}}, "tags": ["Services"]}, "parameters": []}, "/v1/services/services/": {"get": {"operationId": "v1_services_services_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "category", "in": "query", "description": "category", "required": false, "type": "string"}, {"name": "parent_category", "in": "query", "description": "parent_category", "required": false, "type": "string"}, {"name": "min_price", "in": "query", "description": "min_price", "required": false, "type": "string"}, {"name": "max_price", "in": "query", "description": "max_price", "required": false, "type": "string"}, {"name": "max_duration", "in": "query", "description": "max_duration", "required": false, "type": "string"}, {"name": "service_location", "in": "query", "description": "service_location", "required": false, "type": "string", "enum": ["in_shop", "in_home", "both"]}, {"name": "status", "in": "query", "description": "status", "required": false, "type": "string", "enum": ["active", "inactive", "draft", "archived"]}, {"name": "is_featured", "in": "query", "description": "is_featured", "required": false, "type": "string"}, {"name": "specialist", "in": "query", "description": "specialist", "required": false, "type": "string"}, {"name": "city", "in": "query", "description": "city", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "search", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ServiceList"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_services_services_create", "summary": "Create a service", "description": "Create a new service with detailed information", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceCreate"}}], "responses": {"201": {"description": "Created - Service created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}}, "tags": ["Services"]}, "parameters": []}, "/v1/services/services/{id}/": {"get": {"operationId": "v1_services_services_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceDetail"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_services_services_update", "summary": "Update a service", "description": "Update an existing service's details", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceUpdate"}}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Service updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services"]}, "patch": {"operationId": "v1_services_services_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceUpdate"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_services_services_delete", "summary": "Delete a service", "description": "Delete a service or archive it if it has appointments", "parameters": [{"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"204": {"description": "No Content - Service deleted successfully"}, "200": {"description": "Success - Service archived instead of deleted"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/analyze_buffers/": {"get": {"operationId": "v1_services_services_analyze_buffers", "summary": "Analyze buffer times", "description": "Analyze buffer times before and after service to suggest optimizations", "parameters": [{"name": "lookback_days", "in": "query", "description": "Number of days to analyze (default: 30)", "required": false, "type": "integer"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns analysis of buffer times"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Analytics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/analyze_duration/": {"get": {"operationId": "v1_services_services_analyze_duration", "summary": "Analyze service duration", "description": "Analyze historical service durations to suggest optimizations", "parameters": [{"name": "lookback_days", "in": "query", "description": "Number of days to analyze (default: 30)", "required": false, "type": "integer"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns analysis of service duration"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Analytics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/apply_recommended_buffers/": {"post": {"operationId": "v1_services_services_apply_recommended_buffers", "summary": "Apply recommended buffer times", "description": "Apply recommended buffer times before and after service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceDetail"}}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns updated service details"}, "400": {"description": "Bad Request - Invalid buffer times"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Analytics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/apply_recommended_duration/": {"post": {"operationId": "v1_services_services_apply_recommended_duration", "summary": "Apply recommended duration", "description": "Apply a recommended duration to the service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceDetail"}}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns updated service details"}, "400": {"description": "Bad Request - Invalid duration"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Analytics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/assign-specialists/": {"post": {"operationId": "v1_services_services_assign_specialists", "summary": "Assign specialists to service", "description": "Assign specialists to provide this service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceDetail"}}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Specialists assigned successfully"}, "400": {"description": "Bad Request - No specialists provided"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Specialists"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/availability_slots/": {"get": {"operationId": "v1_services_services_availability_slots", "summary": "Get availability slots", "description": "Get available time slots for a service on a specific date", "parameters": [{"name": "date", "in": "query", "description": "Date to check (YYYY-MM-DD)", "required": true, "type": "string"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns available time slots"}, "400": {"description": "Bad Request - Missing or invalid date parameter"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Availability"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/available-days/": {"get": {"operationId": "v1_services_services_available_days", "summary": "Get available days", "description": "Get a list of dates when the service has at least one available slot", "parameters": [{"name": "start_date", "in": "query", "description": "Start date (YYYY-MM-DD, default: today)", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "End date (YYYY-MM-DD, default: 30 days from start)", "required": false, "type": "string"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of available dates"}, "400": {"description": "Bad Request - Invalid date format"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Availability"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/available_specialists/": {"get": {"operationId": "v1_services_services_available_specialists", "summary": "Get available specialists", "description": "Get specialists available for a service at a specific time", "parameters": [{"name": "date", "in": "query", "description": "Date to check (YYYY-MM-DD)", "required": true, "type": "string"}, {"name": "start_time", "in": "query", "description": "Start time (HH:MM)", "required": true, "type": "string"}, {"name": "end_time", "in": "query", "description": "End time (HH:MM), optional if using service duration", "required": false, "type": "string"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of available specialists"}, "400": {"description": "Bad Request - Missing or invalid parameters"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Specialists", "Availability"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/complementary_services/": {"get": {"operationId": "v1_services_services_complementary_services", "summary": "Get complementary services", "description": "Get services that complement this service based on booking patterns and logical relations", "parameters": [{"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of complementary services"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Recommendations"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/duplicate/": {"post": {"operationId": "v1_services_services_duplicate", "summary": "Duplicate service", "description": "Create a duplicate of a service with all its associated data", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceDetail"}}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"201": {"description": "Created - Service duplicated successfully"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{id}/recommended_specialists/": {"get": {"operationId": "v1_services_services_recommended_specialists", "summary": "Get recommended specialists", "description": "Get recommended specialists for a service, ranked by suitability", "parameters": [{"name": "date", "in": "query", "description": "Optional date for specific time slot (YYYY-MM-DD)", "required": false, "type": "string"}, {"name": "start_time", "in": "query", "description": "Optional start time (HH:MM)", "required": false, "type": "string"}, {"name": "end_time", "in": "query", "description": "Optional end time (HH:MM)", "required": false, "type": "string"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of recommended specialists"}, "400": {"description": "Bad Request - Invalid parameters"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Specialists", "Recommendations"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/aftercare/": {"get": {"operationId": "v1_services_services_aftercare_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ServiceAftercare"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_services_services_aftercare_create", "summary": "Create service aftercare tip", "description": "Create a new aftercare tip for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceAftercare"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"201": {"description": "Created - Aftercare tip created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Aftercare"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/aftercare/reorder/": {"post": {"operationId": "v1_services_services_aftercare_reorder", "summary": "Reorder aftercare tips", "description": "Change the order of aftercare tips for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceAftercare"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Aftercare tips reordered successfully"}, "400": {"description": "Bad Request - Invalid tip order or IDs"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Aftercare"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/aftercare/{id}/": {"get": {"operationId": "v1_services_services_aftercare_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceAftercare"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_services_services_aftercare_update", "summary": "Update service aftercare tip", "description": "Update an existing aftercare tip for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceAftercare"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}, {"name": "pk", "in": "path", "description": "Aftercare tip ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Aftercare tip updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Aftercare tip not found"}}, "tags": ["Services", "Aftercare"]}, "patch": {"operationId": "v1_services_services_aftercare_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceAftercare"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceAftercare"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_services_services_aftercare_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A UUID string identifying this Aftercare Tip.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/services/services/{service_id}/availability/": {"get": {"operationId": "v1_services_services_availability_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ServiceAvailability"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_services_services_availability_create", "summary": "Create service availability", "description": "Create a new availability setting for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceAvailability"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"201": {"description": "Created - Availability setting created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Availability"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/availability/{id}/": {"get": {"operationId": "v1_services_services_availability_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceAvailability"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_services_services_availability_update", "summary": "Update service availability", "description": "Update an existing availability setting for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceAvailability"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}, {"name": "pk", "in": "path", "description": "Availability ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Availability setting updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Availability setting not found"}}, "tags": ["Services", "Availability"]}, "patch": {"operationId": "v1_services_services_availability_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceAvailability"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceAvailability"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_services_services_availability_delete", "summary": "Delete service availability", "description": "Delete an availability setting for a service", "parameters": [{"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}, {"name": "pk", "in": "path", "description": "Availability ID", "required": true, "type": "string"}], "responses": {"204": {"description": "No Content - Availability setting deleted successfully"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Availability setting not found"}}, "tags": ["Services", "Availability"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A UUID string identifying this Service Availability.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/services/services/{service_id}/exceptions/": {"get": {"operationId": "v1_services_services_exceptions_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ServiceException"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_services_services_exceptions_create", "summary": "Create service exception", "description": "Create a new exception for a service (e.g., holiday)", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceException"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"201": {"description": "Created - Exception created successfully"}, "200": {"description": "Success - Existing exception updated instead"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Exceptions"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/exceptions/{id}/": {"get": {"operationId": "v1_services_services_exceptions_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceException"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_services_services_exceptions_update", "summary": "Update service exception", "description": "Update an existing exception for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceException"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}, {"name": "pk", "in": "path", "description": "Exception ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Exception updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Exception not found"}}, "tags": ["Services", "Exceptions"]}, "patch": {"operationId": "v1_services_services_exceptions_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceException"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceException"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_services_services_exceptions_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A UUID string identifying this Service Exception.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/services/services/{service_id}/faqs/": {"get": {"operationId": "v1_services_services_faqs_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ServiceFAQ"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_services_services_faqs_create", "summary": "Create service FAQ", "description": "Create a new FAQ for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceFAQ"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"201": {"description": "Created - FAQ created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "FAQs"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/faqs/reorder/": {"post": {"operationId": "v1_services_services_faqs_reorder", "summary": "Reorder FAQs", "description": "Change the order of FAQs for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceFAQ"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - FAQs reordered successfully"}, "400": {"description": "Bad Request - Invalid FAQ order or IDs"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "FAQs"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/faqs/{id}/": {"get": {"operationId": "v1_services_services_faqs_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceFAQ"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_services_services_faqs_update", "summary": "Update service FAQ", "description": "Update an existing FAQ for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceFAQ"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}, {"name": "pk", "in": "path", "description": "FAQ ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - FAQ updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - FAQ not found"}}, "tags": ["Services", "FAQs"]}, "patch": {"operationId": "v1_services_services_faqs_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceFAQ"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceFAQ"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_services_services_faqs_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A UUID string identifying this Service FAQ.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/services/services/{service_id}/overviews/": {"get": {"operationId": "v1_services_services_overviews_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ServiceOverview"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_services_services_overviews_create", "summary": "Create service overview", "description": "Create a new overview item for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceOverview"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"201": {"description": "Created - Overview created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Overviews"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/overviews/reorder/": {"post": {"operationId": "v1_services_services_overviews_reorder", "summary": "Reorder overviews", "description": "Change the order of overview items for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceOverview"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Overviews reordered successfully"}, "400": {"description": "Bad Request - Invalid overview order or IDs"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Overviews"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/overviews/{id}/": {"get": {"operationId": "v1_services_services_overviews_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceOverview"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_services_services_overviews_update", "summary": "Update service overview", "description": "Update an existing overview item for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceOverview"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}, {"name": "pk", "in": "path", "description": "Overview ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Overview updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Overview not found"}}, "tags": ["Services", "Overviews"]}, "patch": {"operationId": "v1_services_services_overviews_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceOverview"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceOverview"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_services_services_overviews_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A UUID string identifying this Service Overview.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/services/services/{service_id}/steps/": {"get": {"operationId": "v1_services_services_steps_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ServiceStep"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_services_services_steps_create", "summary": "Create service step", "description": "Create a new step for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceStep"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"201": {"description": "Created - Step created successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Steps"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/steps/reorder/": {"post": {"operationId": "v1_services_services_steps_reorder", "summary": "Reorder steps", "description": "Change the order of steps for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceStep"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Steps reordered successfully"}, "400": {"description": "Bad Request - Invalid step order or IDs"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Steps"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/services/{service_id}/steps/{id}/": {"get": {"operationId": "v1_services_services_steps_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceStep"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_services_services_steps_update", "summary": "Update service step", "description": "Update an existing step for a service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceStep"}}, {"name": "service_id", "in": "path", "description": "Service ID", "required": true, "type": "string"}, {"name": "pk", "in": "path", "description": "Step ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Step updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Step not found"}}, "tags": ["Services", "Steps"]}, "patch": {"operationId": "v1_services_services_steps_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceStep"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceStep"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_services_services_steps_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "service_id", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A UUID string identifying this Service Step.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/services/{id}/": {"get": {"operationId": "v1_services_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceDetail"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_services_update", "summary": "Update a service", "description": "Update an existing service's details", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceUpdate"}}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Service updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services"]}, "patch": {"operationId": "v1_services_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ServiceUpdate"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_services_delete", "summary": "Delete a service", "description": "Delete a service or archive it if it has appointments", "parameters": [{"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"204": {"description": "No Content - Service deleted successfully"}, "200": {"description": "Success - Service archived instead of deleted"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/analyze_buffers/": {"get": {"operationId": "v1_services_analyze_buffers", "summary": "Analyze buffer times", "description": "Analyze buffer times before and after service to suggest optimizations", "parameters": [{"name": "lookback_days", "in": "query", "description": "Number of days to analyze (default: 30)", "required": false, "type": "integer"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns analysis of buffer times"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Analytics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/analyze_duration/": {"get": {"operationId": "v1_services_analyze_duration", "summary": "Analyze service duration", "description": "Analyze historical service durations to suggest optimizations", "parameters": [{"name": "lookback_days", "in": "query", "description": "Number of days to analyze (default: 30)", "required": false, "type": "integer"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns analysis of service duration"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Analytics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/apply_recommended_buffers/": {"post": {"operationId": "v1_services_apply_recommended_buffers", "summary": "Apply recommended buffer times", "description": "Apply recommended buffer times before and after service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceDetail"}}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns updated service details"}, "400": {"description": "Bad Request - Invalid buffer times"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Analytics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/apply_recommended_duration/": {"post": {"operationId": "v1_services_apply_recommended_duration", "summary": "Apply recommended duration", "description": "Apply a recommended duration to the service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceDetail"}}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns updated service details"}, "400": {"description": "Bad Request - Invalid duration"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Analytics"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/assign-specialists/": {"post": {"operationId": "v1_services_assign_specialists", "summary": "Assign specialists to service", "description": "Assign specialists to provide this service", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceDetail"}}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Specialists assigned successfully"}, "400": {"description": "Bad Request - No specialists provided"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Specialists"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/availability_slots/": {"get": {"operationId": "v1_services_availability_slots", "summary": "Get availability slots", "description": "Get available time slots for a service on a specific date", "parameters": [{"name": "date", "in": "query", "description": "Date to check (YYYY-MM-DD)", "required": true, "type": "string"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns available time slots"}, "400": {"description": "Bad Request - Missing or invalid date parameter"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Availability"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/available-days/": {"get": {"operationId": "v1_services_available_days", "summary": "Get available days", "description": "Get a list of dates when the service has at least one available slot", "parameters": [{"name": "start_date", "in": "query", "description": "Start date (YYYY-MM-DD, default: today)", "required": false, "type": "string"}, {"name": "end_date", "in": "query", "description": "End date (YYYY-MM-DD, default: 30 days from start)", "required": false, "type": "string"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of available dates"}, "400": {"description": "Bad Request - Invalid date format"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Availability"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/available_specialists/": {"get": {"operationId": "v1_services_available_specialists", "summary": "Get available specialists", "description": "Get specialists available for a service at a specific time", "parameters": [{"name": "date", "in": "query", "description": "Date to check (YYYY-MM-DD)", "required": true, "type": "string"}, {"name": "start_time", "in": "query", "description": "Start time (HH:MM)", "required": true, "type": "string"}, {"name": "end_time", "in": "query", "description": "End time (HH:MM), optional if using service duration", "required": false, "type": "string"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of available specialists"}, "400": {"description": "Bad Request - Missing or invalid parameters"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Specialists", "Availability"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/complementary_services/": {"get": {"operationId": "v1_services_complementary_services", "summary": "Get complementary services", "description": "Get services that complement this service based on booking patterns and logical relations", "parameters": [{"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of complementary services"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Recommendations"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/duplicate/": {"post": {"operationId": "v1_services_duplicate", "summary": "Duplicate service", "description": "Create a duplicate of a service with all its associated data", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ServiceDetail"}}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"201": {"description": "Created - Service duplicated successfully"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/services/{id}/recommended_specialists/": {"get": {"operationId": "v1_services_recommended_specialists", "summary": "Get recommended specialists", "description": "Get recommended specialists for a service, ranked by suitability", "parameters": [{"name": "date", "in": "query", "description": "Optional date for specific time slot (YYYY-MM-DD)", "required": false, "type": "string"}, {"name": "start_time", "in": "query", "description": "Optional start time (HH:MM)", "required": false, "type": "string"}, {"name": "end_time", "in": "query", "description": "Optional end time (HH:MM)", "required": false, "type": "string"}, {"name": "pk", "in": "path", "description": "Service ID", "required": true, "type": "string"}], "responses": {"200": {"description": "Success - Returns list of recommended specialists"}, "400": {"description": "Bad Request - Invalid parameters"}, "404": {"description": "Not Found - Service not found"}}, "tags": ["Services", "Specialists", "Recommendations"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/shops/": {"get": {"operationId": "v1_shops_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "name", "in": "query", "description": "name", "required": false, "type": "string"}, {"name": "company", "in": "query", "description": "company", "required": false, "type": "string"}, {"name": "city", "in": "query", "description": "city", "required": false, "type": "string"}, {"name": "country", "in": "query", "description": "country", "required": false, "type": "string"}, {"name": "is_verified", "in": "query", "description": "is_verified", "required": false, "type": "string"}, {"name": "is_active", "in": "query", "description": "is_active", "required": false, "type": "string"}, {"name": "is_featured", "in": "query", "description": "is_featured", "required": false, "type": "string"}, {"name": "min_rating", "in": "query", "description": "min_rating", "required": false, "type": "string"}, {"name": "has_service_category", "in": "query", "description": "has_service_category", "required": false, "type": "string"}, {"name": "created_after", "in": "query", "description": "created_after", "required": false, "type": "string"}, {"name": "created_before", "in": "query", "description": "created_before", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ShopMinimal"}}}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_shops_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Shop"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Shop"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/shops/followers/": {"get": {"operationId": "v1_shops_followers_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "customer", "in": "query", "description": "customer", "required": false, "type": "string"}, {"name": "created_after", "in": "query", "description": "created_after", "required": false, "type": "string"}, {"name": "created_before", "in": "query", "description": "created_before", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ShopFollower"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_shops_followers_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopFollower"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ShopFollower"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/shops/followers/{id}/": {"get": {"operationId": "v1_shops_followers_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopFollower"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_shops_followers_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopFollower"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopFollower"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_shops_followers_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopFollower"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopFollower"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_shops_followers_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop Follower.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/hours/": {"get": {"operationId": "v1_shops_hours_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "weekday", "in": "query", "description": "weekday", "required": false, "type": "string"}, {"name": "is_closed", "in": "query", "description": "is_closed", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ShopHours"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_shops_hours_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopHours"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ShopHours"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/shops/hours/{id}/": {"get": {"operationId": "v1_shops_hours_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopHours"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_shops_hours_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopHours"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopHours"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_shops_hours_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopHours"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopHours"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_shops_hours_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop Hours.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/locations/": {"get": {"operationId": "v1_shops_locations_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ShopLocation"}}}}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/shops/locations/{id}/": {"get": {"operationId": "v1_shops_locations_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopLocation"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/settings/": {"get": {"operationId": "v1_shops_settings_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ShopSettings"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_shops_settings_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopSettings"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ShopSettings"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/shops/settings/{id}/": {"get": {"operationId": "v1_shops_settings_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopSettings"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_shops_settings_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopSettings"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopSettings"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_shops_settings_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopSettings"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopSettings"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_shops_settings_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop Settings.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/shops/": {"get": {"operationId": "v1_shops_shops_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "name", "in": "query", "description": "name", "required": false, "type": "string"}, {"name": "company", "in": "query", "description": "company", "required": false, "type": "string"}, {"name": "city", "in": "query", "description": "city", "required": false, "type": "string"}, {"name": "country", "in": "query", "description": "country", "required": false, "type": "string"}, {"name": "is_verified", "in": "query", "description": "is_verified", "required": false, "type": "string"}, {"name": "is_active", "in": "query", "description": "is_active", "required": false, "type": "string"}, {"name": "is_featured", "in": "query", "description": "is_featured", "required": false, "type": "string"}, {"name": "min_rating", "in": "query", "description": "min_rating", "required": false, "type": "string"}, {"name": "has_service_category", "in": "query", "description": "has_service_category", "required": false, "type": "string"}, {"name": "created_after", "in": "query", "description": "created_after", "required": false, "type": "string"}, {"name": "created_before", "in": "query", "description": "created_before", "required": false, "type": "string"}, {"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ShopMinimal"}}}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_shops_shops_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Shop"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Shop"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/shops/shops/followed/": {"get": {"operationId": "v1_shops_shops_followed_list", "description": "API endpoint for listing shops followed by the customer.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Shop"}}}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/shops/shops/nearby/": {"get": {"operationId": "v1_shops_shops_nearby_list", "description": "API endpoint for listing nearby shops.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Shop"}}}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/shops/shops/top/": {"get": {"operationId": "v1_shops_shops_top_list", "description": "API endpoint for listing top shops based on ratings and bookings.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Shop"}}}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/shops/shops/{id}/": {"get": {"operationId": "v1_shops_shops_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Shop"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_shops_shops_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Shop"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Shop"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_shops_shops_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Shop"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Shop"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_shops_shops_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/shops/{id}/hours/": {"get": {"operationId": "v1_shops_shops_hours", "summary": "Get shop hours", "description": "Retrieve the operating hours for a shop", "parameters": [{"name": "pk", "in": "path", "description": "Shop ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Success - Returns shop hours"}, "404": {"description": "Not Found - Shop not found"}}, "tags": ["Shops", "Hours"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/shops/{id}/request_verification/": {"post": {"operationId": "v1_shops_shops_request_verification", "summary": "Request shop verification", "description": "Submit a verification request for a shop", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Shop"}}, {"name": "pk", "in": "path", "description": "Shop ID", "required": true, "type": "integer"}], "responses": {"201": {"description": "Created - Verification request submitted successfully"}, "400": {"description": "Bad Request - Verification already pending"}, "403": {"description": "Forbidden - User doesn't have permission to request verification"}, "404": {"description": "Not Found - Shop not found"}}, "tags": ["Shops", "Verification"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/shops/{id}/settings/": {"get": {"operationId": "v1_shops_shops_settings", "summary": "Get shop settings", "description": "Retrieve the settings for a shop", "parameters": [{"name": "pk", "in": "path", "description": "Shop ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Success - Returns shop settings"}, "404": {"description": "Not Found - Shop not found"}}, "tags": ["Shops", "Settings"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/shops/{id}/statistics/": {"get": {"operationId": "v1_shops_shops_statistics", "summary": "Get shop statistics", "description": "Retrieve statistical data about a shop including bookings, services, and specialists", "parameters": [{"name": "pk", "in": "path", "description": "Shop ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Success - Returns shop statistics"}, "404": {"description": "Not Found - Shop not found"}}, "tags": ["Shops", "Statistics"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/shops/{id}/update_settings/": {"patch": {"operationId": "v1_shops_shops_update_settings", "summary": "Update shop settings", "description": "Update the settings for a shop", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Shop"}}, {"name": "pk", "in": "path", "description": "Shop ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Success - Settings updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Shop not found"}}, "tags": ["Shops", "Settings"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/shops/{shop_id}/follow/": {"post": {"operationId": "v1_shops_shops_follow_create", "description": "API endpoint for following a shop.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": [{"name": "shop_id", "in": "path", "required": true, "type": "string"}]}, "/v1/shops/shops/{shop_id}/followers/": {"get": {"operationId": "v1_shops_shops_followers_list", "description": "API endpoint for listing followers of a specific shop.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ShopFollower"}}}}}}, "tags": ["v1"]}, "parameters": [{"name": "shop_id", "in": "path", "required": true, "type": "string"}]}, "/v1/shops/shops/{shop_id}/hours/": {"get": {"operationId": "v1_shops_shops_hours_list", "description": "API endpoint for listing and creating shop hours for a specific shop.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ShopHours"}}}}, "tags": ["v1"]}, "post": {"operationId": "v1_shops_shops_hours_create", "description": "API endpoint for listing and creating shop hours for a specific shop.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopHours"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ShopHours"}}}, "tags": ["v1"]}, "parameters": [{"name": "shop_id", "in": "path", "required": true, "type": "string"}]}, "/v1/shops/shops/{shop_id}/unfollow/": {"post": {"operationId": "v1_shops_shops_unfollow_create", "description": "API endpoint for unfollowing a shop.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": [{"name": "shop_id", "in": "path", "required": true, "type": "string"}]}, "/v1/shops/shops/{shop_id}/verify/": {"post": {"operationId": "v1_shops_shops_verify_create", "description": "API endpoint for verifying a shop directly (admin only).", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["v1"]}, "parameters": [{"name": "shop_id", "in": "path", "required": true, "type": "string"}]}, "/v1/shops/verifications/": {"get": {"operationId": "v1_shops_verifications_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop", "in": "query", "description": "shop", "required": false, "type": "string"}, {"name": "status", "in": "query", "description": "status", "required": false, "type": "string", "enum": ["pending", "approved", "rejected"]}, {"name": "submitted_after", "in": "query", "description": "submitted_after", "required": false, "type": "string"}, {"name": "submitted_before", "in": "query", "description": "submitted_before", "required": false, "type": "string"}, {"name": "processed_by", "in": "query", "description": "processed_by", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ShopVerification"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_shops_verifications_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopVerification"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ShopVerification"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/shops/verifications/{id}/": {"get": {"operationId": "v1_shops_verifications_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopVerification"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_shops_verifications_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopVerification"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopVerification"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_shops_verifications_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopVerification"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ShopVerification"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_shops_verifications_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop Verification.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/verifications/{id}/approve/": {"post": {"operationId": "v1_shops_verifications_approve", "summary": "Approve shop verification", "description": "Approve a pending shop verification request", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopVerification"}}, {"name": "pk", "in": "path", "description": "Verification ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Success - Verification approved successfully"}, "400": {"description": "Bad Request - Only pending verifications can be approved"}, "403": {"description": "Forbidden - User doesn't have permission to verify shops"}, "404": {"description": "Not Found - Verification not found"}}, "tags": ["Shops", "Verification", "Admin"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop Verification.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/verifications/{id}/reject/": {"post": {"operationId": "v1_shops_verifications_reject", "summary": "Reject shop verification", "description": "Reject a pending shop verification request with a reason", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ShopVerification"}}, {"name": "pk", "in": "path", "description": "Verification ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Success - Verification rejected successfully"}, "400": {"description": "Bad Request - Only pending verifications can be rejected or reason required"}, "403": {"description": "Forbidden - User doesn't have permission to verify shops"}, "404": {"description": "Not Found - Verification not found"}}, "tags": ["Shops", "Verification", "Admin"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop Verification.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/{id}/": {"get": {"operationId": "v1_shops_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Shop"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_shops_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Shop"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Shop"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_shops_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Shop"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Shop"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_shops_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/{id}/hours/": {"get": {"operationId": "v1_shops_hours", "summary": "Get shop hours", "description": "Retrieve the operating hours for a shop", "parameters": [{"name": "pk", "in": "path", "description": "Shop ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Success - Returns shop hours"}, "404": {"description": "Not Found - Shop not found"}}, "tags": ["Shops", "Hours"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/{id}/request_verification/": {"post": {"operationId": "v1_shops_request_verification", "summary": "Request shop verification", "description": "Submit a verification request for a shop", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Shop"}}, {"name": "pk", "in": "path", "description": "Shop ID", "required": true, "type": "integer"}], "responses": {"201": {"description": "Created - Verification request submitted successfully"}, "400": {"description": "Bad Request - Verification already pending"}, "403": {"description": "Forbidden - User doesn't have permission to request verification"}, "404": {"description": "Not Found - Shop not found"}}, "tags": ["Shops", "Verification"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/{id}/settings/": {"get": {"operationId": "v1_shops_settings", "summary": "Get shop settings", "description": "Retrieve the settings for a shop", "parameters": [{"name": "pk", "in": "path", "description": "Shop ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Success - Returns shop settings"}, "404": {"description": "Not Found - Shop not found"}}, "tags": ["Shops", "Settings"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/{id}/statistics/": {"get": {"operationId": "v1_shops_statistics", "summary": "Get shop statistics", "description": "Retrieve statistical data about a shop including bookings, services, and specialists", "parameters": [{"name": "pk", "in": "path", "description": "Shop ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Success - Returns shop statistics"}, "404": {"description": "Not Found - Shop not found"}}, "tags": ["Shops", "Statistics"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/shops/{id}/update_settings/": {"patch": {"operationId": "v1_shops_update_settings", "summary": "Update shop settings", "description": "Update the settings for a shop", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Shop"}}, {"name": "pk", "in": "path", "description": "Shop ID", "required": true, "type": "integer"}], "responses": {"200": {"description": "Success - Settings updated successfully"}, "400": {"description": "Bad Request - Invalid data"}, "403": {"description": "Forbidden - User doesn't have permission"}, "404": {"description": "Not Found - Shop not found"}}, "tags": ["Shops", "Settings"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Shop.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/specialists/": {"get": {"operationId": "v1_specialists_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SpecialistList"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_specialists_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SpecialistCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SpecialistCreate"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/specialists/{id}/": {"get": {"operationId": "v1_specialists_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SpecialistDetail"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_specialists_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SpecialistUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SpecialistUpdate"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_specialists_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SpecialistUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SpecialistUpdate"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_specialists_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/v1/stories/": {"get": {"operationId": "v1_stories_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop_id", "in": "query", "description": "shop_id", "required": false, "type": "string"}, {"name": "expired", "in": "query", "description": "expired", "required": false, "type": "string"}, {"name": "active_only", "in": "query", "description": "active_only", "required": false, "type": "string"}, {"name": "type", "in": "query", "description": "type", "required": false, "type": "string"}, {"name": "followed_by", "in": "query", "description": "followed_by", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Story"}}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["User Management"]}, "post": {"operationId": "v1_stories_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop_id", "in": "formData", "required": true, "type": "string", "format": "uuid"}, {"name": "story_type", "in": "formData", "required": true, "type": "string", "enum": ["image", "video"]}, {"name": "media_file", "in": "formData", "required": true, "type": "file"}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/StoryCreate"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["User Management"]}, "parameters": []}, "/v1/stories/home_feed/": {"get": {"operationId": "v1_stories_home_feed", "summary": "Get stories for the customer home feed", "description": "Returns stories from shops the customer follows, prioritized\nand organized in a personalized feed format.\n\nOnly available to users with 'customer' type.", "parameters": [{"name": "shop_id", "in": "query", "description": "shop_id", "required": false, "type": "string"}, {"name": "expired", "in": "query", "description": "expired", "required": false, "type": "string"}, {"name": "active_only", "in": "query", "description": "active_only", "required": false, "type": "string"}, {"name": "type", "in": "query", "description": "type", "required": false, "type": "string"}, {"name": "followed_by", "in": "query", "description": "followed_by", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Story"}}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["v1"]}, "parameters": []}, "/v1/stories/shop_feed/": {"get": {"operationId": "v1_stories_shop_feed", "summary": "Get stories for a specific shop's screen", "description": "Returns all active stories for a specific shop, organized\nin chronological order.\n\nQuery parameters:\n    shop_id: ID of the shop (required)", "parameters": [{"name": "shop_id", "in": "query", "description": "shop_id", "required": false, "type": "string"}, {"name": "expired", "in": "query", "description": "expired", "required": false, "type": "string"}, {"name": "active_only", "in": "query", "description": "active_only", "required": false, "type": "string"}, {"name": "type", "in": "query", "description": "type", "required": false, "type": "string"}, {"name": "followed_by", "in": "query", "description": "followed_by", "required": false, "type": "string"}, {"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Story"}}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["v1"]}, "parameters": []}, "/v1/stories/{id}/": {"get": {"operationId": "v1_stories_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Story"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["User Management"]}, "put": {"operationId": "v1_stories_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop_id", "in": "formData", "required": true, "type": "string", "format": "uuid"}, {"name": "story_type", "in": "formData", "required": true, "type": "string", "enum": ["image", "video"]}, {"name": "media_url", "in": "formData", "required": true, "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, {"name": "thumbnail_url", "in": "formData", "required": false, "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Story"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["User Management"]}, "patch": {"operationId": "v1_stories_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "shop_id", "in": "formData", "required": true, "type": "string", "format": "uuid"}, {"name": "story_type", "in": "formData", "required": true, "type": "string", "enum": ["image", "video"]}, {"name": "media_url", "in": "formData", "required": true, "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, {"name": "thumbnail_url", "in": "formData", "required": false, "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Story"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["User Management"]}, "delete": {"operationId": "v1_stories_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Story.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/stories/{id}/mark_viewed/": {"post": {"operationId": "v1_stories_mark_viewed", "summary": "Mark a story as viewed by the current user", "description": "Records that the authenticated customer has viewed the story.\nThis affects the story's view count and the user's feed.\n\nOnly available to users with 'customer' type.", "parameters": [{"name": "shop_id", "in": "formData", "required": true, "type": "string", "format": "uuid"}, {"name": "story_type", "in": "formData", "required": true, "type": "string", "enum": ["image", "video"]}, {"name": "media_url", "in": "formData", "required": true, "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, {"name": "thumbnail_url", "in": "formData", "required": false, "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Story"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Story.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/cancel/": {"post": {"operationId": "v1_subscriptions_cancel_create", "summary": "Process cancellation request", "description": "Validates the request data and processes the subscription\ncancellation.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SubscriptionCancel"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SubscriptionCancel"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/subscriptions/company/{company_id}/": {"get": {"operationId": "v1_subscriptions_company_read", "summary": "View for getting subscription info for a specific company", "description": "Allows company owners or administrators to view the active\nsubscription for their company.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Subscription"}}}, "tags": ["v1"]}, "parameters": [{"name": "company_id", "in": "path", "required": true, "type": "string"}]}, "/v1/subscriptions/invoices/": {"get": {"operationId": "v1_subscriptions_invoices_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SubscriptionInvoice"}}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/subscriptions/invoices/{id}/": {"get": {"operationId": "v1_subscriptions_invoices_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SubscriptionInvoice"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Subscription Invoice.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/invoices/{id}/download/": {"get": {"operationId": "v1_subscriptions_invoices_download", "summary": "Download invoice as PDF", "description": "Generates a PDF version of the invoice for downloading.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SubscriptionInvoice"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Subscription Invoice.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/payment/initiate/": {"post": {"operationId": "v1_subscriptions_payment_initiate_create", "summary": "Process payment initiation request", "description": "Validates the request data and initiates the payment process\nfor the subscription.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SubscriptionPayment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SubscriptionPayment"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/subscriptions/plans/": {"get": {"operationId": "v1_subscriptions_plans_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Plan"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_subscriptions_plans_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PlanCreateUpdate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PlanCreateUpdate"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/subscriptions/plans/compare/": {"get": {"operationId": "v1_subscriptions_plans_compare", "summary": "Compare multiple plans side by side", "description": "Provides a detailed comparison of selected plans,\nshowing differences in features and limitations.\n\nQuery parameters:\n    plan_ids: List of plan IDs to compare", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Plan"}}}}, "tags": ["v1"]}, "parameters": []}, "/v1/subscriptions/plans/{id}/": {"get": {"operationId": "v1_subscriptions_plans_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Plan"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_subscriptions_plans_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PlanCreateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PlanCreateUpdate"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_subscriptions_plans_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PlanCreateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PlanCreateUpdate"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_subscriptions_plans_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Plan.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/plans/{id}/features/": {"get": {"operationId": "v1_subscriptions_plans_features", "summary": "Get features for a specific plan", "description": "Returns all features included in the specified plan,\nordered by category and tier.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Plan"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Plan.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/renewal/": {"post": {"operationId": "v1_subscriptions_renewal_create", "summary": "Process renewal request", "description": "Validates the request data and initiates the subscription\nrenewal process.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SubscriptionRenewal"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SubscriptionRenewal"}}}, "tags": ["v1"]}, "parameters": []}, "/v1/subscriptions/subscriptions/": {"get": {"operationId": "v1_subscriptions_subscriptions_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Subscription"}}}}, "tags": ["User Management"]}, "post": {"operationId": "v1_subscriptions_subscriptions_create", "summary": "User Management - Create a new object", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SubscriptionCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SubscriptionCreate"}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/subscriptions/subscriptions/{id}/": {"get": {"operationId": "v1_subscriptions_subscriptions_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Subscription"}}}, "tags": ["User Management"]}, "put": {"operationId": "v1_subscriptions_subscriptions_update", "summary": "User Management - Update an object (full update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SubscriptionUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SubscriptionUpdate"}}}, "tags": ["User Management"]}, "patch": {"operationId": "v1_subscriptions_subscriptions_partial_update", "summary": "User Management - Update an object (partial update)", "description": "API endpoints for user management and administration", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SubscriptionUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SubscriptionUpdate"}}}, "tags": ["User Management"]}, "delete": {"operationId": "v1_subscriptions_subscriptions_delete", "summary": "User Management - Delete an object", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Subscription.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/subscriptions/{id}/cancel/": {"post": {"operationId": "v1_subscriptions_subscriptions_cancel", "summary": "Cancel a subscription", "description": "Cancels the subscription, setting its status to 'canceled'\nand recording the cancellation reason.\n\nRequest body:\n    {\n        \"reason\": \"Cancellation reason\" (optional)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Subscription"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Subscription"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Subscription.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/subscriptions/{id}/change_plan/": {"post": {"operationId": "v1_subscriptions_subscriptions_change_plan", "summary": "Change subscription plan", "description": "Changes the subscription to a different plan, potentially\nprorating charges for the remaining subscription period.\n\nRequest body:\n    {\n        \"plan_id\": \"uuid\" (required)\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Subscription"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Subscription"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Subscription.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/subscriptions/{id}/invoices/": {"get": {"operationId": "v1_subscriptions_subscriptions_invoices", "summary": "Get invoices for a specific subscription", "description": "Returns all invoices for the subscription, ordered by issued date\n(most recent first) with pagination support.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Subscription"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Subscription.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/subscriptions/{id}/renew/": {"post": {"operationId": "v1_subscriptions_subscriptions_renew", "summary": "Manually renew a subscription", "description": "Initiates the renewal process for the subscription,\ngenerating a new invoice if needed.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Subscription"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Subscription"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Subscription.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/subscriptions/{id}/usage/": {"get": {"operationId": "v1_subscriptions_subscriptions_usage", "summary": "Get feature usage for a specific subscription", "description": "Returns current usage data for all metered features\nincluded in the subscription.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Subscription"}}}, "tags": ["v1"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Subscription.", "required": true, "type": "string", "format": "uuid"}]}, "/v1/subscriptions/usage/": {"get": {"operationId": "v1_subscriptions_usage_list", "summary": "User Management - List all objects", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/FeatureUsage"}}}}, "tags": ["User Management"]}, "parameters": []}, "/v1/subscriptions/usage/{id}/": {"get": {"operationId": "v1_subscriptions_usage_read", "summary": "User Management - Get a specific object by ID", "description": "API endpoints for user management and administration", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FeatureUsage"}}}, "tags": ["User Management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Feature Usage.", "required": true, "type": "string", "format": "uuid"}]}}, "definitions": {"User": {"type": "object", "properties": {"id": {"title": "ID", "type": "string", "format": "uuid", "readOnly": true}, "phone_number": {"title": "Phone Number", "type": "string", "readOnly": true, "minLength": 1}, "email": {"title": "Email Address", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}, "first_name": {"title": "First Name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last Name", "type": "string", "maxLength": 150}, "user_type": {"title": "User Type", "type": "string", "enum": ["customer", "employee", "admin"], "readOnly": true}, "is_verified": {"title": "Verified", "description": "Designates whether this user has verified their phone number.", "type": "boolean", "readOnly": true}, "profile_completed": {"title": "Profile completed", "type": "string", "readOnly": true}, "language_preference": {"title": "Language Preference", "type": "string", "enum": ["en", "ar"]}, "date_joined": {"title": "Date Joined", "type": "string", "format": "date-time", "readOnly": true}}}, "AnomalyDetection": {"required": ["entity_type", "entity_id", "metric_type", "detection_date", "expected_value", "actual_value", "deviation_percentage", "severity", "description"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "entity_type": {"title": "Entity Type", "type": "string", "enum": ["shop", "specialist", "service", "platform"]}, "entity_id": {"title": "Entity ID", "type": "string", "format": "uuid"}, "entity_name": {"title": "Entity name", "type": "string", "readOnly": true}, "metric_type": {"title": "Metric Type", "type": "string", "enum": ["booking_volume", "revenue", "cancellation_rate", "no_show_rate", "rating", "wait_time", "utilization", "other"]}, "detection_date": {"title": "Detection Date", "type": "string", "format": "date"}, "expected_value": {"title": "Expected Value", "type": "string", "format": "decimal"}, "actual_value": {"title": "Actual Value", "type": "string", "format": "decimal"}, "deviation_percentage": {"title": "Deviation Percentage", "type": "string", "format": "decimal"}, "severity": {"title": "Severity", "type": "string", "enum": ["low", "medium", "high"]}, "description": {"title": "Description", "type": "string", "minLength": 1}, "is_acknowledged": {"title": "Acknowledged", "type": "boolean"}, "acknowledged_by": {"title": "Acknowledged By", "type": "string", "format": "uuid", "x-nullable": true}, "acknowledged_by_details": {"$ref": "#/definitions/User"}, "acknowledged_at": {"title": "Acknowledged At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}}}, "ReportExecution": {"required": ["name", "report_type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "scheduled_report": {"title": "Scheduled Report", "type": "string", "format": "uuid", "x-nullable": true}, "scheduled_report_name": {"title": "Scheduled report name", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Report Name", "type": "string", "maxLength": 255, "minLength": 1}, "report_type": {"title": "Report Type", "type": "string", "maxLength": 30, "minLength": 1}, "parameters": {"title": "Parameters", "type": "object"}, "status": {"title": "Status", "type": "string", "enum": ["pending", "running", "completed", "failed"], "readOnly": true}, "result_data": {"title": "Result data", "type": "object", "readOnly": true}, "file_url": {"title": "File URL", "type": "string", "format": "uri", "readOnly": true, "minLength": 1, "x-nullable": true}, "error_message": {"title": "Error Message", "type": "string", "readOnly": true, "minLength": 1}, "start_time": {"title": "Start Time", "type": "string", "format": "date-time", "readOnly": true}, "end_time": {"title": "End Time", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "execution_time_seconds": {"title": "Execution time seconds", "type": "string", "readOnly": true}, "created_by": {"title": "Created By", "type": "string", "format": "uuid", "x-nullable": true}, "created_by_details": {"$ref": "#/definitions/User"}}}, "ReportAnalyticsApp_ScheduledReportSerializer": {"required": ["name", "report_type", "frequency", "recipient_type", "next_run"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Report Name", "type": "string", "maxLength": 255, "minLength": 1}, "report_type": {"title": "Report Type", "type": "string", "enum": ["shop_performance", "specialist_performance", "bookings_summary", "revenue_summary", "custom"]}, "frequency": {"title": "Frequency", "type": "string", "enum": ["daily", "weekly", "monthly", "quarterly"]}, "parameters": {"title": "Parameters", "type": "object"}, "recipient_type": {"title": "Recipient Type", "type": "string", "enum": ["user", "shop", "email"]}, "recipient_user": {"title": "Recipient User", "type": "string", "format": "uuid", "x-nullable": true}, "recipient_user_details": {"$ref": "#/definitions/User"}, "recipient_shop": {"title": "Recipient Shop", "type": "string", "format": "uuid", "x-nullable": true}, "recipient_email": {"title": "Recipient Email", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}, "next_run": {"title": "Next Run", "type": "string", "format": "date-time"}, "last_run": {"title": "Last Run", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "is_active": {"title": "Active", "type": "boolean"}, "created_by": {"title": "Created By", "type": "string", "format": "uuid", "x-nullable": true}, "created_by_details": {"$ref": "#/definitions/User"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "Location": {"required": ["address_line1", "city", "country"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "address_line1": {"title": "Address Line 1", "type": "string", "maxLength": 255, "minLength": 1}, "address_line2": {"title": "Address Line 2", "type": "string", "maxLength": 255}, "city": {"title": "City", "type": "string", "format": "uuid"}, "city_name": {"title": "City name", "type": "string", "readOnly": true}, "country": {"title": "Country", "type": "string", "format": "uuid"}, "country_name": {"title": "Country name", "type": "string", "readOnly": true}, "postal_code": {"title": "Postal Code", "type": "string", "maxLength": 20}, "latitude": {"title": "Latitude", "type": "number"}, "longitude": {"title": "Longitude", "type": "number"}, "place_name": {"title": "Place Name", "type": "string", "maxLength": 255}, "place_type": {"title": "Place Type", "type": "string", "maxLength": 50}, "is_verified": {"title": "Verified Address", "type": "boolean"}}}, "ShopHours": {"required": ["shop", "weekday", "from_hour", "to_hour"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "weekday": {"title": "Weekday", "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6]}, "weekday_display": {"title": "Weekday display", "type": "string", "readOnly": true, "minLength": 1}, "from_hour": {"title": "From Hour", "type": "string"}, "to_hour": {"title": "To Hour", "type": "string"}, "from_hour_display": {"title": "From hour display", "type": "string", "readOnly": true}, "to_hour_display": {"title": "To hour display", "type": "string", "readOnly": true}, "is_closed": {"title": "Is Closed", "type": "boolean"}}}, "ShopSettings": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid", "readOnly": true}, "allow_booking": {"title": "Allow Booking", "type": "boolean"}, "allow_walk_ins": {"title": "Allow Walk-ins", "type": "boolean"}, "enforce_check_in": {"title": "Enforce Check-in", "type": "boolean"}, "check_in_timeout_minutes": {"title": "Check-in Timeout (minutes)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "grace_period_minutes": {"title": "Grace Period (minutes)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "cancellation_policy": {"title": "Cancellation Policy", "type": "string"}, "notification_preferences": {"title": "Notification Preferences", "type": "object"}, "booking_lead_time_minutes": {"title": "Booking Lead Time (minutes)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "booking_future_days": {"title": "Booking Future Days", "type": "integer", "maximum": 2147483647, "minimum": 0}, "auto_assign_specialist": {"title": "Auto Assign Specialist", "type": "boolean"}, "specialist_assignment_algorithm": {"title": "Specialist Assignment Algorithm", "type": "string", "enum": ["round_robin", "least_busy", "highest_rated", "weighted"]}, "double_booking_allowed": {"title": "Double Booking Allowed", "type": "boolean"}, "max_concurrent_bookings": {"title": "Max Concurrent Bookings", "type": "integer", "maximum": 2147483647, "minimum": 0}}}, "Shop": {"required": ["company", "name", "phone_number", "username"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "company": {"title": "Company", "type": "string", "format": "uuid"}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "background_image": {"title": "Background Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "location": {"title": "Location", "type": "string", "format": "uuid", "x-nullable": true}, "location_details": {"$ref": "#/definitions/Location"}, "phone_number": {"title": "Phone Number", "type": "string", "maxLength": 20, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}, "manager": {"title": "Manager", "type": "string", "format": "uuid", "x-nullable": true}, "is_verified": {"title": "Verified", "type": "boolean"}, "verification_date": {"title": "Verification Date", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "is_active": {"title": "Active", "type": "boolean"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}, "username": {"title": "Username", "type": "string", "maxLength": 50, "minLength": 1}, "hours": {"type": "array", "items": {"$ref": "#/definitions/ShopHours"}, "readOnly": true}, "settings": {"$ref": "#/definitions/ShopSettings"}, "avg_rating": {"title": "Avg rating", "type": "string", "readOnly": true}, "service_count": {"title": "Service count", "type": "string", "readOnly": true}, "specialist_count": {"title": "Specialist count", "type": "string", "readOnly": true}, "follower_count": {"title": "Follower count", "type": "string", "readOnly": true}, "is_open_now": {"title": "Is open now", "type": "string", "readOnly": true}, "distance": {"title": "Distance", "type": "string", "readOnly": true}, "travel_time": {"title": "Travel time", "type": "string", "readOnly": true}, "is_followed": {"title": "Is followed", "type": "string", "readOnly": true}, "meta_title": {"title": "Meta Title", "type": "string", "maxLength": 100}, "meta_description": {"title": "Meta Description", "type": "string"}, "instagram_handle": {"title": "Instagram Handle", "type": "string", "maxLength": 50}, "twitter_handle": {"title": "Twitter Handle", "type": "string", "maxLength": 50}, "facebook_page": {"title": "Facebook Page", "type": "string", "maxLength": 100}, "is_featured": {"title": "Featured Shop", "type": "boolean"}, "has_parking": {"title": "Has Parking", "type": "boolean"}, "accessibility_features": {"title": "Accessibility Features", "type": "object"}, "languages_supported": {"title": "Languages Supported", "type": "object"}}}, "ShopAnalytics": {"required": ["shop", "date"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_details": {"$ref": "#/definitions/Shop"}, "date": {"title": "Date", "type": "string", "format": "date"}, "total_bookings": {"title": "Total Bookings", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "bookings_completed": {"title": "Bookings Completed", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "bookings_cancelled": {"title": "Bookings Cancelled", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "bookings_no_show": {"title": "Bookings No Show", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "total_revenue": {"title": "Total Revenue", "type": "string", "format": "decimal"}, "avg_wait_time": {"title": "Average Wait Time (minutes)", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "peak_hours": {"title": "Peak Hours", "type": "object"}, "customer_ratings": {"title": "Customer Ratings", "type": "string", "format": "decimal"}, "new_customers": {"title": "New Customers", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "returning_customers": {"title": "Returning Customers", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "SpecialistService": {"required": ["service"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "service": {"title": "Service", "type": "string", "format": "uuid"}, "service_name": {"title": "Service name", "type": "string", "readOnly": true}, "service_price": {"title": "Service price", "type": "string", "readOnly": true}, "service_duration": {"title": "Service duration", "type": "string", "readOnly": true}, "is_primary": {"title": "Primary Service", "type": "boolean"}, "proficiency_level": {"title": "Proficiency Level", "description": "Proficiency level from 1 (basic) to 5 (expert)", "type": "integer", "maximum": 5, "minimum": 1}, "custom_duration": {"title": "Custom Duration (minutes)", "description": "If different from service default duration", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "effective_duration": {"title": "Effective duration", "type": "string", "readOnly": true}, "booking_count": {"title": "Booking Count", "type": "integer", "readOnly": true}, "category_name": {"title": "Category name", "type": "string", "readOnly": true}}}, "SpecialistWorkingHours": {"required": ["weekday", "from_hour", "to_hour"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "weekday": {"title": "Weekday", "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6]}, "weekday_name": {"title": "Weekday name", "type": "string", "readOnly": true}, "from_hour": {"title": "From Hour", "type": "string"}, "to_hour": {"title": "To Hour", "type": "string"}, "is_off": {"title": "Day Off", "type": "boolean"}}}, "PortfolioItem": {"required": ["title"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "image": {"title": "Image", "type": "string", "readOnly": true, "format": "uri"}, "thumbnail_url": {"title": "Thumbnail url", "type": "string", "readOnly": true}, "service": {"title": "Service", "type": "string", "format": "uuid", "x-nullable": true}, "service_name": {"title": "Service name", "type": "string", "readOnly": true, "default": ""}, "category": {"title": "Category", "type": "string", "format": "uuid", "x-nullable": true}, "category_name": {"title": "Category name", "type": "string", "readOnly": true, "default": ""}, "likes_count": {"title": "Likes Count", "type": "integer", "readOnly": true}, "is_featured": {"title": "Featured", "type": "boolean"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}}}, "SpecialistDetail": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "first_name": {"title": "First name", "type": "string", "readOnly": true}, "last_name": {"title": "Last name", "type": "string", "readOnly": true}, "phone_number": {"title": "Phone number", "type": "string", "readOnly": true}, "email": {"title": "Email", "type": "string", "readOnly": true}, "profile_image": {"title": "Profile image", "type": "string", "readOnly": true}, "bio": {"title": "Bio", "type": "string"}, "experience_years": {"title": "Experience (years)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "experience_level": {"title": "Experience Level", "type": "string", "enum": ["junior", "intermediate", "senior", "expert"]}, "shop_id": {"title": "Shop id", "type": "string", "readOnly": true}, "shop_name": {"title": "Shop name", "type": "string", "readOnly": true}, "is_verified": {"title": "Verified", "type": "boolean"}, "verified_at": {"title": "Verified At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "avg_rating": {"title": "Average Rating", "type": "string", "format": "decimal", "readOnly": true}, "total_bookings": {"title": "Total Bookings", "type": "integer", "readOnly": true}, "services": {"type": "array", "items": {"$ref": "#/definitions/SpecialistService"}, "readOnly": true}, "working_hours": {"type": "array", "items": {"$ref": "#/definitions/SpecialistWorkingHours"}, "readOnly": true}, "portfolio_items": {"type": "array", "items": {"$ref": "#/definitions/PortfolioItem"}, "readOnly": true}, "expertise_categories": {"title": "Expertise categories", "type": "string", "readOnly": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "SpecialistAnalytics": {"required": ["specialist", "date"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "specialist": {"title": "Specialist", "type": "string", "format": "uuid"}, "specialist_details": {"$ref": "#/definitions/SpecialistDetail"}, "date": {"title": "Date", "type": "string", "format": "date"}, "total_bookings": {"title": "Total Bookings", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "bookings_completed": {"title": "Bookings Completed", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "bookings_cancelled": {"title": "Bookings Cancelled", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "bookings_no_show": {"title": "Bookings No Show", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "total_service_time": {"title": "Total Service Time (minutes)", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "avg_service_duration": {"title": "Average Service Duration (minutes)", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "customer_ratings": {"title": "Customer Ratings", "type": "string", "format": "decimal"}, "utilization_rate": {"title": "Utilization Rate", "type": "string", "format": "decimal"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "ShopMinimal": {"required": ["name", "username"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "username": {"title": "Username", "type": "string", "maxLength": 50, "minLength": 1}, "is_verified": {"title": "Verified", "type": "boolean"}, "avg_rating": {"title": "Avg rating", "type": "string", "readOnly": true}, "is_open_now": {"title": "Is open now", "type": "string", "readOnly": true}, "distance": {"title": "Distance", "type": "string", "readOnly": true}, "city": {"title": "City", "type": "string", "readOnly": true}}}, "Category": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true}, "slug": {"title": "Slug", "description": "Auto-generated from name if blank.", "type": "string", "format": "slug", "pattern": "^[-\\w]+$", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "type": "string", "readOnly": true}, "icon": {"title": "Icon", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "parent": {"title": "Parent Category", "type": "string", "format": "uuid", "x-nullable": true}, "parent_name": {"title": "Parent name", "type": "string", "readOnly": true}, "children": {"title": "Children", "type": "string", "readOnly": true}, "is_active": {"title": "Active", "type": "boolean"}, "is_featured": {"title": "Featured", "type": "boolean"}, "position": {"title": "Position", "description": "Display order position", "type": "integer", "maximum": 2147483647, "minimum": 0}, "service_count": {"title": "Service count", "type": "string", "readOnly": true}, "specialist_count": {"title": "Specialist count", "type": "string", "readOnly": true}, "related_categories": {"title": "Related categories", "type": "string", "readOnly": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "ServiceOverview": {"required": ["title"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "order": {"title": "Order", "type": "integer", "maximum": 2147483647, "minimum": 0}}}, "ServiceStep": {"required": ["title", "description"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "order": {"title": "Order", "type": "integer", "maximum": 2147483647, "minimum": 0}}}, "ServiceAftercare": {"required": ["title"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "order": {"title": "Order", "type": "integer", "maximum": 2147483647, "minimum": 0}}}, "ServiceFAQ": {"required": ["question", "answer"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "question": {"title": "Question", "type": "string", "maxLength": 255, "minLength": 1}, "answer": {"title": "Answer", "type": "string", "minLength": 1}, "order": {"title": "Order", "type": "integer", "maximum": 2147483647, "minimum": 0}}}, "ServiceAvailability": {"required": ["weekday", "from_hour", "to_hour"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "weekday": {"title": "Weekday", "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6]}, "weekday_name": {"title": "Weekday name", "type": "string", "readOnly": true}, "from_hour": {"title": "From Hour", "type": "string"}, "to_hour": {"title": "To Hour", "type": "string"}, "is_closed": {"title": "Is Closed", "type": "boolean"}}}, "ServiceException": {"required": ["date"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "date": {"title": "Date", "type": "string", "format": "date"}, "is_closed": {"title": "Is Closed", "type": "boolean"}, "from_hour": {"title": "From Hour", "type": "string", "x-nullable": true}, "to_hour": {"title": "To Hour", "type": "string", "x-nullable": true}, "reason": {"title": "Reason", "type": "string", "maxLength": 255}}}, "ServiceDetail": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "type": "string", "readOnly": true, "minLength": 1}, "short_description": {"title": "Short Description", "type": "string", "readOnly": true, "minLength": 1}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "price": {"title": "Price", "type": "string", "format": "decimal", "readOnly": true}, "duration": {"title": "Duration (minutes)", "type": "integer", "readOnly": true}, "service_location": {"title": "Service Location", "type": "string", "enum": ["in_shop", "in_home", "both"], "readOnly": true}, "service_location_display": {"title": "Service location display", "type": "string", "readOnly": true}, "shop": {"$ref": "#/definitions/ShopMinimal"}, "category": {"$ref": "#/definitions/Category"}, "average_rating": {"title": "Average rating", "type": "string", "readOnly": true}, "review_count": {"title": "Review count", "type": "string", "readOnly": true}, "specialists_count": {"title": "Specialists count", "type": "string", "readOnly": true}, "distance": {"title": "Distance", "type": "string", "readOnly": true}, "travel_time": {"title": "Travel time", "type": "string", "readOnly": true}, "overviews": {"type": "array", "items": {"$ref": "#/definitions/ServiceOverview"}, "readOnly": true}, "steps": {"type": "array", "items": {"$ref": "#/definitions/ServiceStep"}, "readOnly": true}, "aftercare_tips": {"type": "array", "items": {"$ref": "#/definitions/ServiceAftercare"}, "readOnly": true}, "faqs": {"type": "array", "items": {"$ref": "#/definitions/ServiceFAQ"}, "readOnly": true}, "buffer_before": {"title": "Buffer Before (minutes)", "type": "integer", "readOnly": true}, "buffer_after": {"title": "Buffer After (minutes)", "type": "integer", "readOnly": true}, "is_featured": {"title": "Featured", "type": "boolean", "readOnly": true}, "availability": {"type": "array", "items": {"$ref": "#/definitions/ServiceAvailability"}, "readOnly": true}, "exceptions": {"type": "array", "items": {"$ref": "#/definitions/ServiceException"}, "readOnly": true}, "min_booking_notice": {"title": "Minimum Booking Notice (minutes)", "description": "Minimum time before a slot that booking is allowed", "type": "integer", "readOnly": true}, "max_advance_booking_days": {"title": "Maximum Advance Booking (days)", "description": "How far in advance bookings are allowed", "type": "integer", "readOnly": true}}}, "AppointmentNote": {"required": ["user", "note"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "user": {"title": "User", "type": "string", "format": "uuid"}, "user_details": {"$ref": "#/definitions/User"}, "note": {"title": "Note", "type": "string", "minLength": 1}, "is_private": {"title": "Private", "description": "Private notes are only visible to staff", "type": "boolean"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}}}, "AppointmentReminder": {"required": ["reminder_type", "scheduled_time"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "reminder_type": {"title": "Reminder Type", "type": "string", "enum": ["sms", "push", "email"]}, "reminder_type_display": {"title": "Reminder type display", "type": "string", "readOnly": true, "minLength": 1}, "scheduled_time": {"title": "Scheduled Time", "type": "string", "format": "date-time"}, "sent_at": {"title": "Sent At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "is_sent": {"title": "Is Sent", "type": "boolean", "readOnly": true}, "content": {"title": "Content", "type": "string"}}}, "Appointment": {"required": ["customer", "service", "specialist", "shop", "start_time", "end_time"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "customer": {"title": "Customer", "type": "string", "format": "uuid"}, "customer_details": {"$ref": "#/definitions/User"}, "service": {"title": "Service", "type": "string", "format": "uuid"}, "service_details": {"$ref": "#/definitions/ServiceDetail"}, "specialist": {"title": "Specialist", "type": "string", "format": "uuid"}, "specialist_details": {"$ref": "#/definitions/SpecialistDetail"}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_details": {"$ref": "#/definitions/Shop"}, "start_time": {"title": "Start Time", "type": "string", "format": "date-time"}, "end_time": {"title": "End Time", "type": "string", "format": "date-time"}, "status": {"title": "Status", "type": "string", "enum": ["scheduled", "confirmed", "in_progress", "completed", "cancelled", "no_show"]}, "status_display": {"title": "Status display", "type": "string", "readOnly": true, "minLength": 1}, "notes": {"type": "array", "items": {"$ref": "#/definitions/AppointmentNote"}, "readOnly": true}, "transaction_id": {"title": "Transaction ID", "type": "string", "maxLength": 100, "x-nullable": true}, "payment_status": {"title": "Payment Status", "type": "string", "enum": ["pending", "paid", "failed", "refunded", "partially_refunded"]}, "payment_status_display": {"title": "Payment status display", "type": "string", "readOnly": true, "minLength": 1}, "is_reminder_sent": {"title": "Reminder Sent", "type": "boolean", "readOnly": true}, "cancelled_by": {"title": "Cancelled By", "type": "string", "format": "uuid", "x-nullable": true}, "cancelled_by_details": {"$ref": "#/definitions/User"}, "cancellation_reason": {"title": "Cancellation Reason", "type": "string"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}, "total_price": {"title": "Total Price", "type": "string", "format": "decimal"}, "buffer_before": {"title": "Buffer Before (minutes)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "buffer_after": {"title": "Buffer After (minutes)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "duration": {"title": "Duration (minutes)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "is_reviewed": {"title": "Reviewed", "type": "boolean", "readOnly": true}, "reminders": {"type": "array", "items": {"$ref": "#/definitions/AppointmentReminder"}, "readOnly": true}}}, "ChangeLanguage": {"required": ["language_preference"], "type": "object", "properties": {"language_preference": {"title": "Language preference", "type": "string", "maxLength": 10, "minLength": 1}}}, "TokenRefresh": {"required": ["refresh_token"], "type": "object", "properties": {"refresh_token": {"title": "Refresh token", "type": "string", "minLength": 1}}}, "OTPRequest": {"required": ["phone_number"], "type": "object", "properties": {"phone_number": {"title": "Phone number", "type": "string", "maxLength": 20, "minLength": 1}}}, "OTPVerify": {"required": ["phone_number", "code"], "type": "object", "properties": {"phone_number": {"title": "Phone number", "type": "string", "maxLength": 20, "minLength": 1}, "code": {"title": "Code", "type": "string", "maxLength": 6, "minLength": 4}}}, "MultiServiceBooking": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "shop_details": {"title": "Shop details", "type": "string", "readOnly": true}, "appointments": {"type": "array", "items": {"$ref": "#/definitions/Appointment"}, "readOnly": true}, "total_price": {"title": "Total price", "type": "string", "readOnly": true}, "transaction_id": {"title": "Transaction id", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "payment_status": {"title": "Payment status", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "payment_status_display": {"title": "Payment status display", "type": "string", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "CategoryList": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true}, "slug": {"title": "Slug", "description": "Auto-generated from name if blank.", "type": "string", "format": "slug", "maxLength": 120}, "icon": {"title": "Icon", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "parent": {"title": "Parent Category", "type": "string", "format": "uuid", "x-nullable": true}, "is_active": {"title": "Active", "type": "boolean"}, "child_count": {"title": "Child count", "type": "string", "readOnly": true}, "position": {"title": "Position", "description": "Display order position", "type": "integer", "maximum": 2147483647, "minimum": 0}}}, "CategoryCreateUpdate": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "name_en": {"title": "Name (English)", "description": "Optional. Falls back to `name` if empty.", "type": "string", "maxLength": 100}, "name_ar": {"title": "Name (Arabic)", "description": "Optional. Falls back to `name` if empty.", "type": "string", "maxLength": 100}, "description": {"title": "Description", "type": "string"}, "description_en": {"title": "Description (English)", "description": "Optional English description.", "type": "string"}, "description_ar": {"title": "Description (Arabic)", "description": "Optional Arabic description.", "type": "string"}, "parent": {"title": "Parent Category", "type": "string", "format": "uuid", "x-nullable": true}, "icon": {"title": "Icon", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "is_active": {"title": "Active", "type": "boolean"}, "is_featured": {"title": "Featured", "type": "boolean"}, "position": {"title": "Position", "description": "Display order position", "type": "integer", "maximum": 2147483647, "minimum": 0}}}, "CategoryHierarchy": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true}, "slug": {"title": "Slug", "description": "Auto-generated from name if blank.", "type": "string", "format": "slug", "maxLength": 120}, "icon": {"title": "Icon", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "children": {"title": "Children", "type": "string", "readOnly": true}, "is_active": {"title": "Active", "type": "boolean"}, "position": {"title": "Position", "description": "Display order position", "type": "integer", "maximum": 2147483647, "minimum": 0}, "service_count": {"title": "Service count", "type": "string", "readOnly": true}}}, "Conversation": {"required": ["customer", "shop"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "customer": {"title": "Customer", "type": "string", "format": "uuid"}, "customer_phone": {"title": "Customer phone", "type": "string", "readOnly": true, "minLength": 1}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_name": {"title": "Shop name", "type": "string", "readOnly": true, "minLength": 1}, "shop_avatar": {"title": "Shop avatar", "type": "string", "readOnly": true, "format": "uri"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}, "is_active": {"title": "Active", "type": "boolean"}, "last_message": {"title": "Last message", "type": "string", "readOnly": true}, "unread_count": {"title": "Unread count", "type": "string", "readOnly": true}}}, "CreateConversation": {"required": ["shop"], "type": "object", "properties": {"shop": {"title": "Shop", "type": "string", "format": "uuid"}}}, "Message": {"required": ["conversation", "sender", "content"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "conversation": {"title": "Conversation", "type": "string", "format": "uuid"}, "sender": {"title": "Sender", "type": "string", "format": "uuid"}, "sender_type": {"title": "Sender type", "type": "string", "readOnly": true}, "employee": {"title": "Employee", "type": "string", "format": "uuid", "x-nullable": true}, "employee_details": {"title": "Employee details", "type": "string", "readOnly": true}, "content": {"title": "Content", "type": "string", "minLength": 1}, "message_type": {"title": "Type", "type": "string", "enum": ["text", "image", "video"]}, "media_url": {"title": "Media URL", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "is_read": {"title": "Read", "type": "boolean"}, "read_at": {"title": "Read At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "formatted_created_at": {"title": "Formatted created at", "type": "string", "readOnly": true}}}, "CompanySettings": {"type": "object", "properties": {"default_language": {"title": "Default Language", "type": "string", "enum": ["en", "ar"]}, "notification_email": {"title": "Email Notifications", "type": "boolean"}, "notification_sms": {"title": "SMS Notifications", "type": "boolean"}, "auto_approve_bookings": {"title": "Auto Approve Bookings", "type": "boolean"}, "require_manager_approval_for_discounts": {"title": "Require Manager Approval for Discounts", "type": "boolean"}, "allow_employee_chat": {"title": "Allow Employee Chat", "type": "boolean"}}}, "CompanyDocument": {"required": ["title", "document_type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "document": {"title": "Document", "type": "string", "readOnly": true, "format": "uri"}, "document_type": {"title": "Document Type", "type": "string", "maxLength": 50, "minLength": 1}, "is_verified": {"title": "Verified", "type": "boolean", "readOnly": true}, "verified_by": {"$ref": "#/definitions/User"}, "verified_at": {"title": "Verified At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "uploaded_at": {"title": "Uploaded At", "type": "string", "format": "date-time", "readOnly": true}}}, "Company": {"required": ["name", "contact_phone"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "registration_number": {"title": "Registration Number", "type": "string", "maxLength": 50, "x-nullable": true}, "owner": {"$ref": "#/definitions/User"}, "owner_id": {"title": "Owner id", "type": "string", "format": "uuid"}, "contact_email": {"title": "Contact Email", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}, "contact_phone": {"title": "Contact Phone", "type": "string", "maxLength": 20, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "location": {"$ref": "#/definitions/Location"}, "is_active": {"title": "Active", "type": "boolean"}, "subscription_status": {"title": "Subscription Status", "type": "string", "readOnly": true, "minLength": 1}, "subscription_end_date": {"title": "Subscription End Date", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "shop_count": {"title": "Shop Count", "type": "integer", "readOnly": true}, "employee_count": {"title": "Employee Count", "type": "integer", "readOnly": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}, "settings": {"$ref": "#/definitions/CompanySettings"}, "documents": {"type": "array", "items": {"$ref": "#/definitions/CompanyDocument"}, "readOnly": true}}}, "CustomerPreference": {"type": "object", "properties": {"language": {"title": "Language Preference", "type": "string", "enum": ["en", "ar"]}, "notification_enabled": {"title": "Notifications Enabled", "type": "boolean"}, "email_notifications": {"title": "Email Notifications", "type": "boolean"}, "sms_notifications": {"title": "SMS Notifications", "type": "boolean"}, "push_notifications": {"title": "Push Notifications", "type": "boolean"}, "appointment_reminder_minutes": {"title": "Appointment Reminder Minutes Before", "description": "Minutes before appointment to send reminder", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "marketing_opt_in": {"title": "Marketing Opt-In", "type": "boolean"}, "dark_mode": {"title": "Dark Mode", "type": "boolean"}}}, "Customer": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "preferences": {"$ref": "#/definitions/CustomerPreference"}, "location": {"$ref": "#/definitions/Location"}, "name": {"title": "Name", "type": "string", "maxLength": 255}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "city": {"title": "City", "type": "string", "maxLength": 100}, "birth_date": {"title": "Birth Date", "type": "string", "format": "date", "x-nullable": true}, "bio": {"title": "Bio", "type": "string"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "SavedPaymentMethod": {"required": ["payment_type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "payment_type": {"title": "Payment Type", "type": "string", "enum": ["card", "stcpay", "mada", "apple_pay"]}, "last_digits": {"title": "Last Digits", "type": "string", "maxLength": 4, "x-nullable": true}, "expiry_month": {"title": "Expiry Month", "type": "string", "maxLength": 2, "x-nullable": true}, "expiry_year": {"title": "Expiry Year", "type": "string", "maxLength": 4, "x-nullable": true}, "card_brand": {"title": "Card Brand", "type": "string", "maxLength": 50, "x-nullable": true}, "is_default": {"title": "Default Payment Method", "type": "boolean"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}}}, "FavoriteShop": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"$ref": "#/definitions/ShopMinimal"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}}}, "SpecialistList": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "first_name": {"title": "First name", "type": "string", "readOnly": true}, "last_name": {"title": "Last name", "type": "string", "readOnly": true}, "profile_image": {"title": "Profile image", "type": "string", "readOnly": true}, "bio": {"title": "Bio", "type": "string"}, "experience_years": {"title": "Experience (years)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "experience_level": {"title": "Experience Level", "type": "string", "enum": ["junior", "intermediate", "senior", "expert"]}, "shop_id": {"title": "Shop id", "type": "string", "readOnly": true}, "shop_name": {"title": "Shop name", "type": "string", "readOnly": true}, "is_verified": {"title": "Verified", "type": "boolean"}, "avg_rating": {"title": "Average Rating", "type": "string", "format": "decimal"}, "total_bookings": {"title": "Total Bookings", "type": "integer", "maximum": 2147483647, "minimum": 0}, "top_services": {"title": "Top services", "type": "string", "readOnly": true}, "expertise_categories": {"title": "Expertise categories", "type": "string", "readOnly": true}}}, "FavoriteSpecialist": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "specialist": {"$ref": "#/definitions/SpecialistList"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}}}, "ServiceList": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true, "minLength": 1}, "short_description": {"title": "Short Description", "type": "string", "readOnly": true, "minLength": 1}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "price": {"title": "Price", "type": "string", "format": "decimal", "readOnly": true}, "duration": {"title": "Duration (minutes)", "type": "integer", "readOnly": true}, "service_location": {"title": "Service Location", "type": "string", "enum": ["in_shop", "in_home", "both"], "readOnly": true}, "service_location_display": {"title": "Service location display", "type": "string", "readOnly": true}, "category_name": {"title": "Category name", "type": "string", "readOnly": true}, "shop_name": {"title": "Shop name", "type": "string", "readOnly": true}, "shop_city": {"title": "Shop city", "type": "string", "readOnly": true}, "average_rating": {"title": "Average rating", "type": "string", "readOnly": true}, "review_count": {"title": "Review count", "type": "string", "readOnly": true}, "specialists_count": {"title": "Specialists count", "type": "string", "readOnly": true}, "distance": {"title": "Distance", "type": "string", "readOnly": true}, "travel_time": {"title": "Travel time", "type": "string", "readOnly": true}, "is_featured": {"title": "Featured", "type": "boolean", "readOnly": true}}}, "FavoriteService": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "service": {"$ref": "#/definitions/ServiceList"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}}}, "CustomerCategory": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "category": {"$ref": "#/definitions/Category"}, "affinity_score": {"title": "Affinity Score", "description": "Score indicating customer interest level (0-1)", "type": "number", "readOnly": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "CustomerDetail": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "preferences": {"$ref": "#/definitions/CustomerPreference"}, "location": {"$ref": "#/definitions/Location"}, "payment_methods": {"type": "array", "items": {"$ref": "#/definitions/SavedPaymentMethod"}, "readOnly": true}, "favorite_shops": {"type": "array", "items": {"$ref": "#/definitions/FavoriteShop"}, "readOnly": true}, "favorite_specialists": {"type": "array", "items": {"$ref": "#/definitions/FavoriteSpecialist"}, "readOnly": true}, "favorite_services": {"type": "array", "items": {"$ref": "#/definitions/FavoriteService"}, "readOnly": true}, "category_interests": {"type": "array", "items": {"$ref": "#/definitions/CustomerCategory"}, "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "city": {"title": "City", "type": "string", "maxLength": 100}, "birth_date": {"title": "Birth Date", "type": "string", "format": "date", "x-nullable": true}, "bio": {"title": "Bio", "type": "string"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "SavedFilter": {"required": ["shop", "name", "filter_config"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_details": {"$ref": "#/definitions/Shop"}, "name": {"title": "Filter Name", "type": "string", "maxLength": 100, "minLength": 1}, "filter_config": {"title": "Filter Configuration", "type": "object"}, "is_favorite": {"title": "Favorite", "type": "boolean"}, "created_by": {"$ref": "#/definitions/User"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "DashboardWidget": {"required": ["title", "widget_type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Widget Title", "type": "string", "maxLength": 100, "minLength": 1}, "widget_type": {"title": "Widget Type", "type": "string", "enum": ["kpi", "chart", "table", "activity", "notifications", "calendar"]}, "category": {"title": "Category", "type": "string", "enum": ["revenue", "bookings", "customers", "services", "queue", "reviews", "specialists", "engagement"], "x-nullable": true}, "kpi_key": {"title": "KPI Key", "type": "string", "maxLength": 50, "x-nullable": true}, "chart_type": {"title": "Chart Type", "type": "string", "enum": ["line", "bar", "pie", "doughnut", "radar", "polar", "table", "heatmap"], "x-nullable": true}, "data_source": {"title": "Data Source", "type": "string", "maxLength": 50, "x-nullable": true}, "data_granularity": {"title": "Data Granularity", "type": "string", "enum": ["hourly", "daily", "weekly", "monthly", "quarterly", "yearly"]}, "config": {"title": "Widget Configuration", "type": "object"}, "position": {"title": "Position", "description": "JSON with grid position (x, y, width, height)", "type": "object"}, "is_visible": {"title": "Visible", "type": "boolean"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "DashboardLayout": {"required": ["shop", "name"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_details": {"$ref": "#/definitions/Shop"}, "name": {"title": "Layout Name", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "is_default": {"title": "Default Layout", "type": "boolean"}, "created_by": {"$ref": "#/definitions/User"}, "widgets": {"type": "array", "items": {"$ref": "#/definitions/DashboardWidget"}, "readOnly": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "DashboardLayoutDetail": {"required": ["shop", "name", "widgets"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_details": {"$ref": "#/definitions/Shop"}, "name": {"title": "Layout Name", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "is_default": {"title": "Default Layout", "type": "boolean"}, "created_by": {"$ref": "#/definitions/User"}, "widgets": {"type": "array", "items": {"$ref": "#/definitions/DashboardWidget"}}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "DashboardPreference": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "user": {"title": "User", "type": "string", "format": "uuid", "readOnly": true}, "user_details": {"$ref": "#/definitions/User"}, "preferred_layout": {"title": "Preferred Layout", "type": "string", "format": "uuid", "x-nullable": true}, "preferred_layout_details": {"$ref": "#/definitions/DashboardLayout"}, "favorite_kpis": {"title": "Favorite KPIs", "type": "object"}, "preferred_date_range": {"title": "Preferred Date Range", "type": "string", "enum": ["today", "yesterday", "week", "month", "quarter", "year", "custom"]}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "ShopDashboardApp_ScheduledReportSerializer": {"required": ["shop", "name", "frequency", "time_of_day", "date_range"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_details": {"$ref": "#/definitions/Shop"}, "name": {"title": "Report Name", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "frequency": {"title": "Frequency", "type": "string", "enum": ["daily", "weekly", "monthly", "quarterly"]}, "day_of_week": {"title": "Day of Week", "description": "0=Sunday, 6=Saturday. For weekly reports.", "type": "integer", "maximum": 32767, "minimum": 0, "x-nullable": true}, "day_of_month": {"title": "Day of Month", "description": "1-31. For monthly reports.", "type": "integer", "maximum": 32767, "minimum": 0, "x-nullable": true}, "time_of_day": {"title": "Time of Day", "type": "string"}, "recipients": {"title": "Recipients", "type": "object"}, "kpis_included": {"title": "KPIs Included", "type": "object"}, "charts_included": {"title": "Charts Included", "type": "object"}, "date_range": {"title": "Date Range", "type": "string", "enum": ["today", "yesterday", "week", "month", "quarter", "year", "custom"]}, "is_active": {"title": "Active", "type": "boolean"}, "created_by": {"$ref": "#/definitions/User"}, "last_sent_at": {"title": "Last Sent At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "DashboardSettings": {"required": ["shop"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_details": {"$ref": "#/definitions/Shop"}, "default_date_range": {"title": "Default Date Range", "type": "string", "enum": ["today", "yesterday", "week", "month", "quarter", "year", "custom"]}, "auto_refresh_interval": {"title": "Auto Refresh Interval (seconds)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "custom_theme": {"title": "Custom Theme", "type": "object"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "EmployeeList": {"required": ["first_name", "last_name", "position", "shop"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "first_name": {"title": "First Name", "type": "string", "maxLength": 100, "minLength": 1}, "last_name": {"title": "Last Name", "type": "string", "maxLength": 100, "minLength": 1}, "position": {"title": "Position", "type": "string", "enum": ["manager", "reception", "specialist", "assistant", "cashier", "customer_service", "admin", "other"]}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_name": {"title": "Shop name", "type": "string", "readOnly": true}, "is_active": {"title": "Active", "type": "boolean"}, "is_specialist": {"title": "Is specialist", "type": "boolean", "readOnly": true}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}}}, "EmployeeWorkingHours": {"required": ["weekday", "from_hour", "to_hour"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "weekday": {"title": "Weekday", "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6]}, "from_hour": {"title": "From Hour", "type": "string"}, "to_hour": {"title": "To Hour", "type": "string"}, "is_day_off": {"title": "Day Off", "type": "boolean"}, "break_start": {"title": "Break Start", "type": "string", "x-nullable": true}, "break_end": {"title": "Break End", "type": "string", "x-nullable": true}}}, "EmployeeSkill": {"required": ["skill_name", "proficiency_level"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "skill_name": {"title": "Skill Name", "type": "string", "maxLength": 100, "minLength": 1}, "proficiency_level": {"title": "Proficiency Level", "type": "integer", "enum": [1, 2, 3, 4, 5]}, "description": {"title": "Description", "type": "string"}, "years_experience": {"title": "Years of Experience", "type": "integer", "maximum": 2147483647, "minimum": 0}}}, "EmployeeCreate": {"required": ["phone_number", "first_name", "last_name", "position", "shop"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "phone_number": {"title": "Phone number", "type": "string", "minLength": 1}, "working_hours": {"type": "array", "items": {"$ref": "#/definitions/EmployeeWorkingHours"}}, "skills": {"type": "array", "items": {"$ref": "#/definitions/EmployeeSkill"}}, "first_name": {"title": "First Name", "type": "string", "maxLength": 100, "minLength": 1}, "last_name": {"title": "Last Name", "type": "string", "maxLength": 100, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}, "position": {"title": "Position", "type": "string", "enum": ["manager", "reception", "specialist", "assistant", "cashier", "customer_service", "admin", "other"]}, "hire_date": {"title": "Hire Date", "type": "string", "format": "date"}, "date_of_birth": {"title": "Date of Birth", "type": "string", "format": "date", "x-nullable": true}, "gender": {"title": "Gender", "type": "string", "enum": ["male", "female", "other"]}, "address": {"title": "Address", "type": "string"}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "employee_id": {"title": "Employee ID", "type": "string", "maxLength": 50}, "national_id": {"title": "National ID", "type": "string", "maxLength": 20}, "emergency_contact_name": {"title": "Emergency Contact Name", "type": "string", "maxLength": 100}, "emergency_contact_phone": {"title": "Emergency Contact Phone", "type": "string", "maxLength": 20}, "is_active": {"title": "Active", "type": "boolean"}, "notes": {"title": "Notes", "type": "string"}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}}}, "EmployeeLeave": {"required": ["leave_type", "start_date", "end_date"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "leave_type": {"title": "Leave Type", "type": "string", "enum": ["vacation", "sick", "personal", "maternity", "paternity", "unpaid", "other"]}, "start_date": {"title": "Start Date", "type": "string", "format": "date"}, "end_date": {"title": "End Date", "type": "string", "format": "date"}, "reason": {"title": "Reason", "type": "string"}, "status": {"title": "Status", "type": "string", "enum": ["pending", "approved", "rejected", "cancelled"], "readOnly": true}, "approved_by": {"title": "Approved By", "type": "string", "format": "uuid", "readOnly": true, "x-nullable": true}}}, "EmployeeDetail": {"required": ["first_name", "last_name", "position", "user", "shop"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "working_hours": {"type": "array", "items": {"$ref": "#/definitions/EmployeeWorkingHours"}, "readOnly": true}, "skills": {"type": "array", "items": {"$ref": "#/definitions/EmployeeSkill"}, "readOnly": true}, "leaves": {"type": "array", "items": {"$ref": "#/definitions/EmployeeLeave"}, "readOnly": true}, "user_phone": {"title": "User phone", "type": "string", "readOnly": true}, "shop_name": {"title": "Shop name", "type": "string", "readOnly": true}, "is_specialist": {"title": "Is specialist", "type": "boolean", "readOnly": true}, "first_name": {"title": "First Name", "type": "string", "maxLength": 100, "minLength": 1}, "last_name": {"title": "Last Name", "type": "string", "maxLength": 100, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}, "phone_number": {"title": "Phone Number", "type": "string", "maxLength": 20}, "position": {"title": "Position", "type": "string", "enum": ["manager", "reception", "specialist", "assistant", "cashier", "customer_service", "admin", "other"]}, "hire_date": {"title": "Hire Date", "type": "string", "format": "date"}, "date_of_birth": {"title": "Date of Birth", "type": "string", "format": "date", "x-nullable": true}, "gender": {"title": "Gender", "type": "string", "enum": ["male", "female", "other"]}, "address": {"title": "Address", "type": "string"}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "employee_id": {"title": "Employee ID", "type": "string", "maxLength": 50}, "national_id": {"title": "National ID", "type": "string", "maxLength": 20}, "emergency_contact_name": {"title": "Emergency Contact Name", "type": "string", "maxLength": 100}, "emergency_contact_phone": {"title": "Emergency Contact Phone", "type": "string", "maxLength": 20}, "is_active": {"title": "Active", "type": "boolean"}, "notes": {"title": "Notes", "type": "string"}, "user": {"title": "User Account", "type": "string", "format": "uuid"}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}}}, "EmployeeUpdate": {"required": ["first_name", "last_name", "position"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "first_name": {"title": "First Name", "type": "string", "maxLength": 100, "minLength": 1}, "last_name": {"title": "Last Name", "type": "string", "maxLength": 100, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "x-nullable": true}, "phone_number": {"title": "Phone Number", "type": "string", "maxLength": 20}, "position": {"title": "Position", "type": "string", "enum": ["manager", "reception", "specialist", "assistant", "cashier", "customer_service", "admin", "other"]}, "hire_date": {"title": "Hire Date", "type": "string", "format": "date"}, "date_of_birth": {"title": "Date of Birth", "type": "string", "format": "date", "x-nullable": true}, "gender": {"title": "Gender", "type": "string", "enum": ["male", "female", "other"]}, "address": {"title": "Address", "type": "string"}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "employee_id": {"title": "Employee ID", "type": "string", "maxLength": 50}, "national_id": {"title": "National ID", "type": "string", "maxLength": 20}, "emergency_contact_name": {"title": "Emergency Contact Name", "type": "string", "maxLength": 100}, "emergency_contact_phone": {"title": "Emergency Contact Phone", "type": "string", "maxLength": 20}, "is_active": {"title": "Active", "type": "boolean"}, "notes": {"title": "Notes", "type": "string"}}}, "Follow": {"required": ["shop"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_details": {"$ref": "#/definitions/ShopMinimal"}, "created_at": {"title": "Followed At", "type": "string", "format": "date-time", "readOnly": true}, "notification_preference": {"title": "Receive Notifications", "description": "Whether to receive notifications about shop updates", "type": "boolean"}}}, "Area": {"required": ["name", "area_type", "city"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "boundary_geojson": {"title": "Boundary GeoJSON", "type": "string", "x-nullable": true}, "area_type": {"title": "Area Type", "type": "string", "maxLength": 50, "minLength": 1}, "city": {"title": "City", "type": "string", "format": "uuid"}, "city_name": {"title": "City name", "type": "string", "readOnly": true}, "is_active": {"title": "Active", "type": "boolean"}}}, "City": {"required": ["name", "country"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "country": {"title": "Country", "type": "string", "format": "uuid"}, "country_name": {"title": "Country name", "type": "string", "readOnly": true}, "is_active": {"title": "Active", "type": "boolean"}, "latitude": {"title": "Latitude", "type": "number", "x-nullable": true}, "longitude": {"title": "Longitude", "type": "number", "x-nullable": true}}}, "Country": {"required": ["name", "code"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "code": {"title": "Country Code", "type": "string", "maxLength": 3, "minLength": 1}, "flag_icon": {"title": "Flag Icon", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}}}, "Notification": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "recipient_id": {"title": "Recipient id", "type": "string", "format": "uuid"}, "notification_type": {"title": "Notification type", "type": "string", "maxLength": 50, "minLength": 1}, "template": {"title": "Template", "type": "string", "format": "uuid", "x-nullable": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "message": {"title": "Message", "type": "string", "minLength": 1}, "data": {"title": "Data", "type": "object"}, "metadata": {"title": "Metadata", "type": "object"}, "channels": {"title": "Channels", "type": "object"}, "status": {"title": "Status", "type": "string", "maxLength": 20, "minLength": 1}, "channel_status": {"title": "Channel status", "type": "object"}, "retry_count": {"title": "Retry count", "type": "object"}, "priority": {"title": "Priority", "type": "string", "maxLength": 20, "minLength": 1}, "scheduled_for": {"title": "Scheduled for", "type": "string", "format": "date-time", "x-nullable": true}, "completed_at": {"title": "Completed at", "type": "string", "format": "date-time", "x-nullable": true}, "seen_at": {"title": "Seen at", "type": "string", "format": "date-time", "x-nullable": true}, "cancelled": {"title": "Cancelled", "type": "boolean"}, "in_app_seen": {"title": "In app seen", "type": "boolean"}, "idempotency_key": {"title": "Idempotency key", "type": "string", "maxLength": 255, "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "PaymentMethod": {"required": ["type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "type": {"title": "Type", "type": "string", "enum": ["card", "stcpay", "mada", "apple_pay"]}, "type_display": {"title": "Type display", "type": "string", "readOnly": true, "minLength": 1}, "last_digits": {"title": "Last Digits", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "expiry_month": {"title": "Expiry Month", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "expiry_year": {"title": "Expiry Year", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "card_brand": {"title": "Card Brand", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "is_default": {"title": "Default", "type": "boolean"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}}}, "Transaction": {"required": ["amount"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "provider_transaction_id": {"title": "Provider transaction id", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "amount": {"title": "Amount", "type": "string", "format": "decimal"}, "user": {"title": "User", "type": "string", "format": "uuid", "x-nullable": true}, "currency": {"title": "Currency", "type": "string", "maxLength": 3, "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["pending", "processing", "completed", "failed", "refunded", "partially_refunded", "cancelled"], "readOnly": true}, "status_display": {"title": "Status display", "type": "string", "readOnly": true, "minLength": 1}, "wallet_type": {"title": "Wallet type", "type": "string", "enum": ["subscription", "ads", "merchant"]}, "description": {"title": "Description", "type": "string", "maxLength": 255, "minLength": 1}, "content_type_info": {"title": "Content type info", "type": "string", "readOnly": true}, "payment_method_details": {"$ref": "#/definitions/PaymentMethod"}, "metadata": {"title": "Metadata", "type": "object"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "refund_count": {"title": "Refund count", "type": "string", "readOnly": true}, "refunded_amount": {"title": "Refunded amount", "type": "string", "readOnly": true}}}, "Queue": {"required": ["shop", "name"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "shop_details": {"$ref": "#/definitions/Shop"}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["open", "closed", "paused"]}, "max_capacity": {"title": "Maximum Capacity", "type": "integer", "maximum": 2147483647, "minimum": 0}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}, "active_tickets_count": {"title": "Active tickets count", "type": "string", "readOnly": true}, "waiting_tickets_count": {"title": "Waiting tickets count", "type": "string", "readOnly": true}}}, "QueueTicket": {"required": ["queue", "customer"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "queue": {"title": "Queue", "type": "string", "format": "uuid"}, "queue_details": {"$ref": "#/definitions/Queue"}, "ticket_number": {"title": "Ticket Number", "type": "string", "readOnly": true, "minLength": 1}, "customer": {"title": "Customer", "type": "string", "format": "uuid"}, "customer_details": {"$ref": "#/definitions/User"}, "service": {"title": "Service", "type": "string", "format": "uuid", "x-nullable": true}, "service_details": {"$ref": "#/definitions/ServiceDetail"}, "specialist": {"title": "Specialist", "type": "string", "format": "uuid", "x-nullable": true}, "specialist_details": {"$ref": "#/definitions/SpecialistDetail"}, "status": {"title": "Status", "type": "string", "enum": ["waiting", "called", "serving", "served", "skipped", "cancelled"]}, "position": {"title": "Position", "type": "integer", "readOnly": true}, "estimated_wait_time": {"title": "Estimated Wait Time (minutes)", "type": "integer", "readOnly": true}, "actual_wait_time": {"title": "Actual Wait Time (minutes)", "type": "integer", "readOnly": true, "x-nullable": true}, "notes": {"title": "Notes", "type": "string"}, "join_time": {"title": "Join Time", "type": "string", "format": "date-time", "readOnly": true}, "called_time": {"title": "Called Time", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "serve_time": {"title": "Serve Time", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "complete_time": {"title": "Complete Time", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}}}, "PackageList": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true, "minLength": 1}, "shop": {"$ref": "#/definitions/ShopMinimal"}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "original_price": {"title": "Original Price", "description": "Total price of all services if purchased separately", "type": "string", "format": "decimal", "readOnly": true}, "discounted_price": {"title": "Discounted Price", "description": "Package price (must be less than original price)", "type": "string", "format": "decimal", "readOnly": true}, "discount_percentage": {"title": "Discount Percentage", "description": "Automatically calculated", "type": "string", "format": "decimal", "readOnly": true, "x-nullable": true}, "total_duration": {"title": "Total Duration (minutes)", "description": "Automatically calculated from services", "type": "integer", "readOnly": true, "x-nullable": true}, "package_location": {"title": "Package Location", "type": "string", "enum": ["in_shop", "in_home", "both"], "readOnly": true}, "primary_category": {"$ref": "#/definitions/CategoryList"}, "status": {"title": "Status", "type": "string", "enum": ["active", "inactive", "upcoming", "expired"], "readOnly": true}, "service_count": {"title": "Service count", "type": "string", "readOnly": true}, "is_available": {"title": "Is available", "type": "boolean", "readOnly": true}}}, "Reel": {"required": ["title"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"$ref": "#/definitions/ShopMinimal"}, "title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "caption": {"title": "Caption", "type": "string"}, "video": {"title": "Video", "description": "Maximum file size: 50 MB. Formats: MP4, MOV, AVI.", "type": "string", "readOnly": true, "format": "uri"}, "thumbnail": {"title": "Thumbnail", "description": "Thumbnail image for the reel.", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "duration": {"title": "Duration (seconds)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "status": {"title": "Status", "type": "string", "enum": ["draft", "published", "archived", "removed"]}, "categories": {"type": "array", "items": {"$ref": "#/definitions/Category"}, "readOnly": true}, "services": {"type": "array", "items": {"$ref": "#/definitions/ServiceList"}, "readOnly": true}, "packages": {"type": "array", "items": {"$ref": "#/definitions/PackageList"}, "readOnly": true}, "view_count": {"title": "View Count", "type": "integer", "readOnly": true}, "likes_count": {"title": "Likes count", "type": "string", "readOnly": true}, "comments_count": {"title": "Comments count", "type": "string", "readOnly": true}, "shares_count": {"title": "Shares count", "type": "string", "readOnly": true}, "is_liked": {"title": "Is liked", "type": "string", "readOnly": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "published_at": {"title": "Published At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}}}, "ReelCreateUpdate": {"required": ["title"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "caption": {"title": "Caption", "type": "string"}, "video": {"title": "Video", "description": "Maximum file size: 50 MB. Formats: MP4, MOV, AVI.", "type": "string", "readOnly": true, "format": "uri"}, "thumbnail": {"title": "Thumbnail", "description": "Thumbnail image for the reel.", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "status": {"title": "Status", "type": "string", "enum": ["draft", "published", "archived", "removed"]}, "category_ids": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "service_ids": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "package_ids": {"type": "array", "items": {"type": "string", "format": "uuid"}}}}, "ReelDetail": {"required": ["title"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"$ref": "#/definitions/ShopMinimal"}, "title": {"title": "Title", "type": "string", "maxLength": 100, "minLength": 1}, "caption": {"title": "Caption", "type": "string"}, "video": {"title": "Video", "description": "Maximum file size: 50 MB. Formats: MP4, MOV, AVI.", "type": "string", "readOnly": true, "format": "uri"}, "thumbnail": {"title": "Thumbnail", "description": "Thumbnail image for the reel.", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "duration": {"title": "Duration (seconds)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "status": {"title": "Status", "type": "string", "enum": ["draft", "published", "archived", "removed"]}, "categories": {"type": "array", "items": {"$ref": "#/definitions/Category"}, "readOnly": true}, "services": {"type": "array", "items": {"$ref": "#/definitions/ServiceList"}, "readOnly": true}, "packages": {"type": "array", "items": {"$ref": "#/definitions/PackageList"}, "readOnly": true}, "view_count": {"title": "View Count", "type": "integer", "readOnly": true}, "likes_count": {"title": "Likes count", "type": "string", "readOnly": true}, "comments_count": {"title": "Comments count", "type": "string", "readOnly": true}, "shares_count": {"title": "Shares count", "type": "string", "readOnly": true}, "is_liked": {"title": "Is liked", "type": "string", "readOnly": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "published_at": {"title": "Published At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "comments": {"title": "Comments", "type": "string", "readOnly": true}}}, "ContentType": {"required": ["app_label", "model"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "app_label": {"title": "App label", "type": "string", "maxLength": 100, "minLength": 1}, "model": {"title": "Python model class name", "type": "string", "maxLength": 100, "minLength": 1}}}, "Permission": {"required": ["resource", "action"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "resource": {"title": "Resource", "type": "string", "enum": ["shop", "service", "employee", "specialist", "customer", "booking", "queue", "report", "reel", "story", "chat", "payment", "subscription", "discount", "review", "package", "category", "company", "roles", "notifications", "ad", "analytics"]}, "action": {"title": "Action", "type": "string", "enum": ["view", "add", "edit", "delete", "manage", "approve", "report"]}, "code_name": {"title": "Code Name", "type": "string", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "resource_display": {"title": "Resource display", "type": "string", "readOnly": true, "minLength": 1}, "action_display": {"title": "Action display", "type": "string", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "Role": {"required": ["name", "role_type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "role_type": {"title": "Role Type", "type": "string", "enum": ["queue_me_admin", "queue_me_employee", "company", "shop_manager", "shop_employee", "custom"]}, "role_type_display": {"title": "Role type display", "type": "string", "readOnly": true, "minLength": 1}, "permissions": {"type": "array", "items": {"$ref": "#/definitions/Permission"}, "readOnly": true}, "permission_ids": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "content_type": {"title": "Entity Type", "type": "integer", "x-nullable": true}, "object_id": {"title": "Entity ID", "type": "string", "format": "uuid", "x-nullable": true}, "entity_name": {"title": "Entity name", "type": "string", "readOnly": true}, "parent": {"title": "Parent Role", "type": "string", "format": "uuid", "x-nullable": true}, "parent_name": {"title": "Parent name", "type": "string", "readOnly": true, "minLength": 1}, "weight": {"title": "Weight", "description": "Higher weight roles take precedence in conflict resolution", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "is_active": {"title": "Active", "type": "boolean"}, "is_system": {"title": "System Role", "description": "System roles cannot be deleted", "type": "boolean", "readOnly": true}, "user_count": {"title": "User count", "type": "string", "readOnly": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}}}, "UserLight": {"type": "object", "properties": {"id": {"title": "ID", "type": "string", "format": "uuid", "readOnly": true}, "first_name": {"title": "First Name", "type": "string", "readOnly": true, "minLength": 1}, "last_name": {"title": "Last Name", "type": "string", "readOnly": true, "minLength": 1}}}, "RolePermissionLog": {"required": ["role", "permission", "action_type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "role": {"title": "Role", "type": "string", "format": "uuid"}, "role_detail": {"$ref": "#/definitions/Role"}, "permission": {"title": "Permission", "type": "string", "format": "uuid"}, "permission_detail": {"$ref": "#/definitions/Permission"}, "action_type": {"title": "Action Type", "type": "string", "enum": ["add", "remove"]}, "performed_by": {"title": "Performed By", "type": "string", "format": "uuid", "x-nullable": true}, "performed_by_detail": {"$ref": "#/definitions/UserLight"}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time", "readOnly": true}}}, "RoleDetail": {"required": ["name", "role_type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 100, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "role_type": {"title": "Role Type", "type": "string", "enum": ["queue_me_admin", "queue_me_employee", "company", "shop_manager", "shop_employee", "custom"]}, "role_type_display": {"title": "Role type display", "type": "string", "readOnly": true, "minLength": 1}, "permissions": {"type": "array", "items": {"$ref": "#/definitions/Permission"}, "readOnly": true}, "permission_ids": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "content_type": {"title": "Entity Type", "type": "integer", "x-nullable": true}, "object_id": {"title": "Entity ID", "type": "string", "format": "uuid", "x-nullable": true}, "entity_name": {"title": "Entity name", "type": "string", "readOnly": true}, "parent": {"title": "Parent Role", "type": "string", "format": "uuid", "x-nullable": true}, "parent_name": {"title": "Parent name", "type": "string", "readOnly": true, "minLength": 1}, "weight": {"title": "Weight", "description": "Higher weight roles take precedence in conflict resolution", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "is_active": {"title": "Active", "type": "boolean"}, "is_system": {"title": "System Role", "description": "System roles cannot be deleted", "type": "boolean", "readOnly": true}, "user_count": {"title": "User count", "type": "string", "readOnly": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}, "users": {"title": "Users", "type": "string", "readOnly": true}}}, "UserRole": {"required": ["user", "role"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "user": {"title": "User", "type": "string", "format": "uuid"}, "user_detail": {"$ref": "#/definitions/UserLight"}, "role": {"title": "Role", "type": "string", "format": "uuid"}, "role_detail": {"$ref": "#/definitions/Role"}, "assigned_at": {"title": "Assigned At", "type": "string", "format": "date-time", "readOnly": true}, "assigned_by": {"title": "Assigned By", "type": "string", "format": "uuid", "x-nullable": true}, "assigned_by_detail": {"$ref": "#/definitions/UserLight"}, "is_primary": {"title": "Primary Role", "description": "If True, this is the user's primary role in this context", "type": "boolean"}}}, "ServiceCreate": {"required": ["shop", "category", "name", "price", "duration"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "category": {"title": "Category", "type": "string", "format": "uuid"}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "short_description": {"title": "Short Description", "type": "string", "maxLength": 255}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "price": {"title": "Price", "type": "string", "format": "decimal"}, "duration": {"title": "Duration (minutes)", "type": "integer", "maximum": 1440, "minimum": 1}, "slot_granularity": {"title": "Slot Granularity (minutes)", "type": "integer", "maximum": 120, "minimum": 5}, "buffer_before": {"title": "Buffer Before (minutes)", "type": "integer", "maximum": 120, "minimum": 0}, "buffer_after": {"title": "Buffer After (minutes)", "type": "integer", "maximum": 120, "minimum": 0}, "service_location": {"title": "Service Location", "type": "string", "enum": ["in_shop", "in_home", "both"]}, "has_custom_availability": {"title": "Has Custom Availability", "type": "boolean"}, "min_booking_notice": {"title": "Minimum Booking Notice (minutes)", "description": "Minimum time before a slot that booking is allowed", "type": "integer", "maximum": 2147483647, "minimum": 0}, "max_advance_booking_days": {"title": "Maximum Advance Booking (days)", "description": "How far in advance bookings are allowed", "type": "integer", "maximum": 2147483647, "minimum": 0}, "order": {"title": "Order", "description": "Display order", "type": "integer", "maximum": 2147483647, "minimum": 0}, "is_featured": {"title": "Featured", "type": "boolean"}, "status": {"title": "Status", "type": "string", "enum": ["active", "inactive", "draft", "archived"]}, "availability": {"type": "array", "items": {"$ref": "#/definitions/ServiceAvailability"}}, "faqs": {"type": "array", "items": {"$ref": "#/definitions/ServiceFAQ"}}, "overviews": {"type": "array", "items": {"$ref": "#/definitions/ServiceOverview"}}, "steps": {"type": "array", "items": {"$ref": "#/definitions/ServiceStep"}}, "aftercare_tips": {"type": "array", "items": {"$ref": "#/definitions/ServiceAftercare"}}}}, "ServiceUpdate": {"required": ["category", "name", "price", "duration"], "type": "object", "properties": {"category": {"title": "Category", "type": "string", "format": "uuid"}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "short_description": {"title": "Short Description", "type": "string", "maxLength": 255}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "price": {"title": "Price", "type": "string", "format": "decimal"}, "duration": {"title": "Duration (minutes)", "type": "integer", "maximum": 1440, "minimum": 1}, "slot_granularity": {"title": "Slot Granularity (minutes)", "type": "integer", "maximum": 120, "minimum": 5}, "buffer_before": {"title": "Buffer Before (minutes)", "type": "integer", "maximum": 120, "minimum": 0}, "buffer_after": {"title": "Buffer After (minutes)", "type": "integer", "maximum": 120, "minimum": 0}, "service_location": {"title": "Service Location", "type": "string", "enum": ["in_shop", "in_home", "both"]}, "has_custom_availability": {"title": "Has Custom Availability", "type": "boolean"}, "min_booking_notice": {"title": "Minimum Booking Notice (minutes)", "description": "Minimum time before a slot that booking is allowed", "type": "integer", "maximum": 2147483647, "minimum": 0}, "max_advance_booking_days": {"title": "Maximum Advance Booking (days)", "description": "How far in advance bookings are allowed", "type": "integer", "maximum": 2147483647, "minimum": 0}, "order": {"title": "Order", "description": "Display order", "type": "integer", "maximum": 2147483647, "minimum": 0}, "is_featured": {"title": "Featured", "type": "boolean"}, "status": {"title": "Status", "type": "string", "enum": ["active", "inactive", "draft", "archived"]}}}, "ShopFollower": {"required": ["shop", "customer"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "customer": {"title": "Customer", "type": "string", "format": "uuid"}, "customer_phone": {"title": "Customer phone", "type": "string", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}}}, "ShopLocation": {"required": ["name"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "latitude": {"title": "Latitude", "type": "string", "readOnly": true}, "longitude": {"title": "Longitude", "type": "string", "readOnly": true}, "address": {"title": "Address", "type": "string", "readOnly": true}, "city": {"title": "City", "type": "string", "readOnly": true}, "country": {"title": "Country", "type": "string", "readOnly": true}}}, "ShopVerification": {"required": ["shop"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"title": "Shop", "type": "string", "format": "uuid"}, "status": {"title": "Status", "type": "string", "enum": ["pending", "approved", "rejected"]}, "status_display": {"title": "Status display", "type": "string", "readOnly": true, "minLength": 1}, "submitted_at": {"title": "Submitted At", "type": "string", "format": "date-time", "readOnly": true}, "processed_at": {"title": "Processed At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "processed_by": {"title": "Processed By", "type": "string", "format": "uuid", "readOnly": true, "x-nullable": true}, "processed_by_name": {"title": "Processed by name", "type": "string", "readOnly": true}, "rejection_reason": {"title": "Rejection Reason", "type": "string"}, "documents": {"title": "Verification Documents", "type": "object"}}}, "SpecialistCreate": {"required": ["employee_id", "service_ids"], "type": "object", "properties": {"employee_id": {"title": "Employee id", "type": "string", "format": "uuid"}, "bio": {"title": "Bio", "type": "string"}, "experience_years": {"title": "Experience (years)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "experience_level": {"title": "Experience Level", "type": "string", "enum": ["junior", "intermediate", "senior", "expert"]}, "expertise_ids": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "service_ids": {"type": "array", "items": {"type": "string", "format": "uuid"}}, "working_hours": {"type": "array", "items": {"$ref": "#/definitions/SpecialistWorkingHours"}}}}, "SpecialistUpdate": {"type": "object", "properties": {"bio": {"title": "Bio", "type": "string"}, "experience_years": {"title": "Experience (years)", "type": "integer", "maximum": 2147483647, "minimum": 0}, "experience_level": {"title": "Experience Level", "type": "string", "enum": ["junior", "intermediate", "senior", "expert"]}, "expertise_ids": {"type": "array", "items": {"type": "string", "format": "uuid"}}}}, "Story": {"required": ["shop_id", "story_type", "media_url"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop": {"$ref": "#/definitions/ShopMinimal"}, "shop_id": {"title": "Shop id", "type": "string", "format": "uuid"}, "story_type": {"title": "Story Type", "type": "string", "enum": ["image", "video"]}, "media_url": {"title": "Media URL", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}, "thumbnail_url": {"title": "Thumbnail URL", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "expires_at": {"title": "Expires At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "is_active": {"title": "Active", "type": "boolean", "readOnly": true}, "time_left": {"title": "Time left", "type": "string", "readOnly": true}, "view_count": {"title": "View count", "type": "string", "readOnly": true}, "has_viewed": {"title": "Has viewed", "type": "string", "readOnly": true}}}, "StoryCreate": {"required": ["shop_id", "story_type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "shop_id": {"title": "Shop id", "type": "string", "format": "uuid"}, "story_type": {"title": "Story Type", "type": "string", "enum": ["image", "video"]}, "media_file": {"title": "Media file", "type": "string", "readOnly": true, "format": "uri"}}}, "SubscriptionCancel": {"required": ["subscription_id"], "type": "object", "properties": {"subscription_id": {"title": "Subscription id", "type": "string", "format": "uuid"}, "reason": {"title": "Reason", "type": "string"}}}, "PlanFeature": {"required": ["name", "category", "tier"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Feature Name", "type": "string", "maxLength": 100, "minLength": 1}, "name_ar": {"title": "Feature Name (Arabic)", "type": "string", "maxLength": 100}, "description": {"title": "Description", "type": "string"}, "description_ar": {"title": "Description (Arabic)", "type": "string"}, "category": {"title": "Category", "type": "string", "enum": ["shops", "services", "specialists", "content", "analytics", "support"]}, "tier": {"title": "Tier", "type": "string", "enum": ["basic", "standard", "premium", "unlimited"]}, "value": {"title": "Value/Limit", "type": "string", "maxLength": 50}, "is_available": {"title": "Available", "type": "boolean"}}}, "Plan": {"required": ["name", "description", "monthly_price"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Plan Name", "type": "string", "maxLength": 100, "minLength": 1}, "name_ar": {"title": "Plan Name (Arabic)", "type": "string", "maxLength": 100}, "description": {"title": "Description", "type": "string", "minLength": 1}, "description_ar": {"title": "Description (Arabic)", "type": "string"}, "monthly_price": {"title": "Monthly Price (SAR)", "type": "string", "format": "decimal"}, "monthly_price_display": {"title": "Monthly price display", "type": "string", "readOnly": true}, "quarterly_price": {"title": "Quarterly price", "type": "string", "readOnly": true}, "semi_annual_price": {"title": "Semi annual price", "type": "string", "readOnly": true}, "annual_price": {"title": "Annual price", "type": "string", "readOnly": true}, "max_shops": {"title": "Maximum Shops/Branches", "type": "integer", "maximum": 2147483647, "minimum": 0}, "max_services_per_shop": {"title": "Maximum Services per Shop", "type": "integer", "maximum": 2147483647, "minimum": 0}, "max_specialists_per_shop": {"title": "Maximum Specialists per Shop", "type": "integer", "maximum": 2147483647, "minimum": 0}, "is_active": {"title": "Active", "type": "boolean"}, "is_featured": {"title": "Featured", "type": "boolean"}, "features": {"type": "array", "items": {"$ref": "#/definitions/PlanFeature"}, "readOnly": true}}}, "Subscription": {"required": ["company"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "company": {"title": "Company", "type": "string", "format": "uuid"}, "company_name": {"title": "Company name", "type": "string", "readOnly": true, "minLength": 1}, "plan": {"title": "Plan", "type": "string", "format": "uuid", "x-nullable": true}, "plan_details": {"$ref": "#/definitions/Plan"}, "status": {"title": "Status", "type": "string", "enum": ["initiated", "active", "past_due", "canceled", "expired", "trial"]}, "period": {"title": "Period", "type": "string", "enum": ["monthly", "quarterly", "semi_annual", "annual"]}, "start_date": {"title": "Start Date", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "end_date": {"title": "End Date", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "auto_renew": {"title": "Auto Renew", "type": "boolean"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated At", "type": "string", "format": "date-time", "readOnly": true}, "canceled_at": {"title": "Canceled At", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "trial_end": {"title": "Trial End Date", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "current_period_start": {"title": "Current Period Start", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "current_period_end": {"title": "Current Period End", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "moyasar_id": {"title": "Moyasar ID", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}, "plan_name": {"title": "Plan Name", "type": "string", "readOnly": true, "minLength": 1}, "max_shops": {"title": "Maximum Shops/Branches", "type": "integer", "readOnly": true}, "max_services_per_shop": {"title": "Maximum Services per Shop", "type": "integer", "readOnly": true}, "max_specialists_per_shop": {"title": "Maximum Specialists per Shop", "type": "integer", "readOnly": true}, "is_trial_active": {"title": "Is trial active", "type": "string", "readOnly": true}, "days_remaining": {"title": "Days remaining", "type": "string", "readOnly": true}}}, "SubscriptionInvoice": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "subscription": {"title": "Subscription", "type": "string", "format": "uuid", "readOnly": true}, "company_name": {"title": "Company name", "type": "string", "readOnly": true, "minLength": 1}, "plan_name": {"title": "Plan name", "type": "string", "readOnly": true, "minLength": 1}, "invoice_number": {"title": "Invoice Number", "type": "string", "readOnly": true, "minLength": 1}, "amount": {"title": "Amount (SAR)", "type": "string", "format": "decimal", "readOnly": true}, "status": {"title": "Status", "type": "string", "readOnly": true, "minLength": 1}, "period_start": {"title": "Period Start", "type": "string", "format": "date-time", "readOnly": true}, "period_end": {"title": "Period End", "type": "string", "format": "date-time", "readOnly": true}, "issued_date": {"title": "Issued Date", "type": "string", "format": "date-time", "readOnly": true}, "due_date": {"title": "Due Date", "type": "string", "format": "date-time", "readOnly": true}, "paid_date": {"title": "Paid Date", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "transaction_id": {"title": "Transaction id", "type": "string", "format": "uuid", "readOnly": true}}}, "SubscriptionPayment": {"required": ["company_id", "plan_id", "period", "return_url"], "type": "object", "properties": {"company_id": {"title": "Company id", "type": "string", "format": "uuid"}, "plan_id": {"title": "Plan id", "type": "string", "format": "uuid"}, "period": {"title": "Period", "type": "string", "minLength": 1}, "return_url": {"title": "Return url", "type": "string", "format": "uri", "minLength": 1}}}, "PlanCreateUpdate": {"required": ["name", "description", "monthly_price"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Plan Name", "type": "string", "maxLength": 100, "minLength": 1}, "name_ar": {"title": "Plan Name (Arabic)", "type": "string", "maxLength": 100}, "description": {"title": "Description", "type": "string", "minLength": 1}, "description_ar": {"title": "Description (Arabic)", "type": "string"}, "monthly_price": {"title": "Monthly Price (SAR)", "type": "string", "format": "decimal"}, "max_shops": {"title": "Maximum Shops/Branches", "type": "integer", "maximum": 2147483647, "minimum": 0}, "max_services_per_shop": {"title": "Maximum Services per Shop", "type": "integer", "maximum": 2147483647, "minimum": 0}, "max_specialists_per_shop": {"title": "Maximum Specialists per Shop", "type": "integer", "maximum": 2147483647, "minimum": 0}, "is_active": {"title": "Active", "type": "boolean"}, "is_featured": {"title": "Featured", "type": "boolean"}, "position": {"title": "Display Position", "type": "integer", "maximum": 2147483647, "minimum": 0}, "features": {"type": "array", "items": {"$ref": "#/definitions/PlanFeature"}}}}, "SubscriptionRenewal": {"required": ["subscription_id"], "type": "object", "properties": {"subscription_id": {"title": "Subscription id", "type": "string", "format": "uuid"}}}, "SubscriptionCreate": {"required": ["company"], "type": "object", "properties": {"company": {"title": "Company", "type": "string", "format": "uuid"}, "plan": {"title": "Plan", "type": "string", "format": "uuid", "x-nullable": true}, "period": {"title": "Period", "type": "string", "enum": ["monthly", "quarterly", "semi_annual", "annual"]}, "auto_renew": {"title": "Auto Renew", "type": "boolean"}}}, "SubscriptionUpdate": {"type": "object", "properties": {"plan": {"title": "Plan", "type": "string", "format": "uuid", "x-nullable": true}, "period": {"title": "Period", "type": "string", "enum": ["monthly", "quarterly", "semi_annual", "annual"]}, "auto_renew": {"title": "Auto Renew", "type": "boolean"}, "status": {"title": "Status", "type": "string", "enum": ["initiated", "active", "past_due", "canceled", "expired", "trial"]}}}, "FeatureUsage": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "subscription": {"title": "Subscription", "type": "string", "format": "uuid", "readOnly": true}, "feature_category": {"title": "Feature Category", "type": "string", "enum": ["shops", "services", "specialists", "content", "analytics", "support"], "readOnly": true}, "feature_category_display": {"title": "Feature category display", "type": "string", "readOnly": true, "minLength": 1}, "limit": {"title": "Limit", "type": "integer", "readOnly": true}, "current_usage": {"title": "Current Usage", "type": "integer", "readOnly": true}, "last_updated": {"title": "Last Updated", "type": "string", "format": "date-time", "readOnly": true}, "is_limit_reached": {"title": "Is limit reached", "type": "boolean", "readOnly": true}}}}}