version: "3.8"

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-queueme}
      - POSTGRES_USER=${POSTGRES_USER:-queueme}
      - POSTGRES_DB=${POSTGRES_DB:-queueme}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U queueme"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - queueme_network

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - queueme_network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - queueme_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery -A queueme worker -l INFO
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    networks:
      - queueme_network

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery -A queueme beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    networks:
      - queueme_network

  daphne:
    build:
      context: .
      dockerfile: Dockerfile
    command: daphne -b 0.0.0.0 -p 8001 queueme.asgi:application
    volumes:
      - .:/app
    env_file:
      - ./.env
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
    networks:
      - queueme_network

networks:
  queueme_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
