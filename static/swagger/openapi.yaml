components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  contact:
    email: support@queueme.net
    name: QueueMe Support
    url: https://queueme.net/support
  description:
    QueueMe platform API provides endpoints for managing bookings, services,
    queues, specialists, and customer interactions efficiently. The API supports features
    such as real-time notifications, payment processing, and scheduling.
  termsOfService: https://queueme.net/terms
  title: QueueMe API
  version: v1
openapi: 3.0.0
paths:
  /api/temp/adminnotification/:
    get:
      description: API endpoint for admin notifications.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for admin notifications.
      tags:
        - queueMeAdminApp
  /api/temp/adminnotification/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for admin notifications.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for admin notifications.
      tags:
        - queueMeAdminApp
  /api/temp/adminnotification/(?P<pk>[/.]+)/mark_read/:
    patch:
      description: Mark a notification as read
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Mark a notification as read
      tags:
        - queueMeAdminApp
  /api/temp/adminnotification/mark_all_read/:
    post:
      description: Mark all notifications as read
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Mark all notifications as read
      tags:
        - queueMeAdminApp
  /api/temp/adminnotification/send_bulk/:
    post:
      description: Send notifications to multiple users
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Send notifications to multiple users
      tags:
        - notificationsapp
  /api/temp/adminnotification/unread_count/:
    get:
      description: Get count of unread notifications
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get count of unread notifications
      tags:
        - queueMeAdminApp
  /api/temp/anomalydetection/:
    get:
      description: Anomaly detection API endpoints
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Anomaly detection API endpoints
      tags:
        - reportanalyticsapp
  /api/temp/anomalydetection/(?P<pk>[/.]+)/:
    get:
      description: Anomaly detection API endpoints
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Anomaly detection API endpoints
      tags:
        - reportanalyticsapp
  /api/temp/anomalydetection/(?P<pk>[/.]+)/acknowledge/:
    post:
      description: Acknowledge an anomaly
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Acknowledge an anomaly
      tags:
        - reportanalyticsapp
  /api/temp/appointment/:
    get:
      description:
        "API endpoint for managing appointments.\n\n    Provides CRUD operations\
        \ for appointments with additional actions for:\n    - Canceling appointments\n\
        \    - Rescheduling appointments\n    - Adding notes to appointments\n   \
        \ - Getting availability for dates\n\n    Permissions are enforced based on\
        \ user role:\n    - Customers can only manage their own appointments\n   \
        \ - Staff can manage appointments for their shop\n    - Admins have full access\n\
        \    \n\nAPI endpoints for managing appointments with additional actions for\
        \ canceling, rescheduling, adding notes, and checking availability"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing appointments.
      tags:
        - bookingapp
  /api/temp/appointment/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing appointments.\n\n    Provides CRUD operations\
        \ for appointments with additional actions for:\n    - Canceling appointments\n\
        \    - Rescheduling appointments\n    - Adding notes to appointments\n   \
        \ - Getting availability for dates\n\n    Permissions are enforced based on\
        \ user role:\n    - Customers can only manage their own appointments\n   \
        \ - Staff can manage appointments for their shop\n    - Admins have full access\n\
        \    \n\nAPI endpoints for managing appointments with additional actions for\
        \ canceling, rescheduling, adding notes, and checking availability"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing appointments.
      tags:
        - bookingapp
  /api/temp/appointment/(?P<pk>[/.]+)/add_note/:
    post:
      description: Add a note to an appointment
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Add a note to an appointment
      tags:
        - bookingapp
  /api/temp/appointment/(?P<pk>[/.]+)/cancel/:
    post:
      description: Cancel an appointment
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Cancel an appointment
      tags:
        - bookingapp
  /api/temp/appointment/(?P<pk>[/.]+)/reschedule/:
    post:
      description: Reschedule an appointment
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Reschedule an appointment
      tags:
        - bookingapp
  /api/temp/appointment/availability/:
    get:
      description: Get service availability for a date
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get service availability for a date
      tags:
        - bookingapp
  /api/temp/appointment/recommend_specialist/:
    post:
      description: Get recommended specialist for a service/time
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get recommended specialist for a service/time
      tags:
        - bookingapp
  /api/temp/appointment/specialists/:
    get:
      description: Get available specialists for a service/time
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get available specialists for a service/time
      tags:
        - bookingapp
  /api/temp/area/:
    get:
      description:
        "API endpoint for managing areas\n\n    Provides CRUD operations\
        \ for geographic areas within cities, such as\n    neighborhoods, districts,\
        \ or service zones.\n\n    Endpoints:\n    - GET /api/areas/ - List all areas\n\
        \    - POST /api/areas/ - Create a new area\n    - GET /api/areas/{id}/ -\
        \ Get area details\n    - PUT/PATCH /api/areas/{id}/ - Update an area\n  \
        \  - DELETE /api/areas/{id}/ - Delete an area\n\n    Permissions:\n    - Authentication\
        \ required for all operations\n\n    Filtering:\n    - is_active: Filter by\
        \ active status\n    - area_type: Filter by area type (neighborhood, district,\
        \ etc.)\n    - city: Filter by city ID\n\n    Search fields:\n    - name:\
        \ Area name\n    - description: Area description\n\n    Ordering:\n    - name:\
        \ Area name (default)\n    - area_type: Area type"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing areas
      tags:
        - geoapp
  /api/temp/area/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing areas\n\n    Provides CRUD operations\
        \ for geographic areas within cities, such as\n    neighborhoods, districts,\
        \ or service zones.\n\n    Endpoints:\n    - GET /api/areas/ - List all areas\n\
        \    - POST /api/areas/ - Create a new area\n    - GET /api/areas/{id}/ -\
        \ Get area details\n    - PUT/PATCH /api/areas/{id}/ - Update an area\n  \
        \  - DELETE /api/areas/{id}/ - Delete an area\n\n    Permissions:\n    - Authentication\
        \ required for all operations\n\n    Filtering:\n    - is_active: Filter by\
        \ active status\n    - area_type: Filter by area type (neighborhood, district,\
        \ etc.)\n    - city: Filter by city ID\n\n    Search fields:\n    - name:\
        \ Area name\n    - description: Area description\n\n    Ordering:\n    - name:\
        \ Area name (default)\n    - area_type: Area type"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing areas
      tags:
        - geoapp
  /api/temp/auditlog/:
    get:
      description: API endpoint for viewing audit logs.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for viewing audit logs.
      tags:
        - queueMeAdminApp
  /api/temp/auditlog/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for viewing audit logs.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for viewing audit logs.
      tags:
        - queueMeAdminApp
  /api/temp/auditlog/actions/:
    get:
      description: Get distinct actions for filtering
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get distinct actions for filtering
      tags:
        - queueMeAdminApp
  /api/temp/auditlog/entity_types/:
    get:
      description: Get distinct entity types for filtering
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get distinct entity types for filtering
      tags:
        - queueMeAdminApp
  /api/temp/auth/change_language/:
    post:
      description: Change user language preference.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Change user language preference.
      tags:
        - authapp
  /api/temp/auth/login/:
    post:
      description: Login with phone number and password.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Login with phone number and password.
      tags:
        - authapp
  /api/temp/auth/logout/:
    post:
      description: Logout user (invalidate tokens).
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Logout user (invalidate tokens).
      tags:
        - authapp
  /api/temp/auth/refresh_token/:
    post:
      description: Refresh token.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Refresh token.
      tags:
        - authapp
  /api/temp/auth/request_otp/:
    post:
      description: Request OTP for phone number.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Request OTP for phone number.
      tags:
        - authapp
  /api/temp/auth/verify_otp/:
    post:
      description: Verify OTP and return tokens.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Verify OTP and return tokens.
      tags:
        - authapp
  /api/temp/category/:
    get:
      description:
        "API endpoint for managing categories.\n\n    Provides CRUD operations\
        \ and additional actions for managing\n    the category hierarchy and relationships.\
        \ Categories form a tree structure\n    with parent-child relationships and\
        \ can be used to organize services,\n    shops, and other entities.\n\n  \
        \  Endpoints:\n    - GET /api/categories/ - List categories with filtering\
        \ options\n    - POST /api/categories/ - Create a new category\n    - GET\
        \ /api/categories/{id}/ - Get category details\n    - PUT/PATCH /api/categories/{id}/\
        \ - Update a category\n    - DELETE /api/categories/{id}/ - Delete a category\n\
        \    - GET /api/categories/parent_categories/ - Get top-level categories\n\
        \    - GET /api/categories/{id}/children/ - Get child categories\n    - GET\
        \ /api/categories/hierarchy/ - Get complete category tree\n    - GET /api/categories/featured/\
        \ - Get featured categories\n    - GET /api/categories/popular/ - Get popular\
        \ categories\n    - GET /api/categories/{id}/breadcrumbs/ - Get category breadcrumbs\n\
        \    - GET /api/categories/flat_hierarchy/ - Get flattened category tree\n\
        \    - POST /api/categories/{id}/move/ - Move a category to a new parent\n\
        \    - POST /api/categories/reorder/ - Reorder categories\n    - GET /api/categories/{id}/related/\
        \ - Get related categories\n    - GET /api/categories/statistics/ - Get category\
        \ statistics (admin only)\n    - GET /api/categories/check_integrity/ - Check\
        \ hierarchy integrity (admin only)\n\n    Permissions:\n    - Most read operations\
        \ allow anonymous access\n    - Write operations require authentication and\
        \ specific permissions"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing categories.
      tags:
        - categoriesapp
  /api/temp/category/(?P<id>[/.]+)/:
    get:
      description:
        "API endpoint for managing categories.\n\n    Provides CRUD operations\
        \ and additional actions for managing\n    the category hierarchy and relationships.\
        \ Categories form a tree structure\n    with parent-child relationships and\
        \ can be used to organize services,\n    shops, and other entities.\n\n  \
        \  Endpoints:\n    - GET /api/categories/ - List categories with filtering\
        \ options\n    - POST /api/categories/ - Create a new category\n    - GET\
        \ /api/categories/{id}/ - Get category details\n    - PUT/PATCH /api/categories/{id}/\
        \ - Update a category\n    - DELETE /api/categories/{id}/ - Delete a category\n\
        \    - GET /api/categories/parent_categories/ - Get top-level categories\n\
        \    - GET /api/categories/{id}/children/ - Get child categories\n    - GET\
        \ /api/categories/hierarchy/ - Get complete category tree\n    - GET /api/categories/featured/\
        \ - Get featured categories\n    - GET /api/categories/popular/ - Get popular\
        \ categories\n    - GET /api/categories/{id}/breadcrumbs/ - Get category breadcrumbs\n\
        \    - GET /api/categories/flat_hierarchy/ - Get flattened category tree\n\
        \    - POST /api/categories/{id}/move/ - Move a category to a new parent\n\
        \    - POST /api/categories/reorder/ - Reorder categories\n    - GET /api/categories/{id}/related/\
        \ - Get related categories\n    - GET /api/categories/statistics/ - Get category\
        \ statistics (admin only)\n    - GET /api/categories/check_integrity/ - Check\
        \ hierarchy integrity (admin only)\n\n    Permissions:\n    - Most read operations\
        \ allow anonymous access\n    - Write operations require authentication and\
        \ specific permissions"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing categories.
      tags:
        - categoriesapp
  /api/temp/category/(?P<id>[/.]+)/breadcrumbs/:
    get:
      description:
        "Get breadcrumb navigation data for a category\n\n        Returns\
        \ the path from the root category to the specified category,\n        useful\
        \ for creating breadcrumb navigation in the UI.\n\n        Returns:\n    \
        \        Response: List of categories in the breadcrumb path\n           \
        \     [\n                    {\"id\": \"uuid\", \"name\": \"Category 1\"},\n\
        \                    {\"id\": \"uuid\", \"name\": \"Category 2\"},\n     \
        \               ...\n                ]"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get breadcrumb navigation data for a category
      tags:
        - categoriesapp
  /api/temp/category/(?P<id>[/.]+)/children/:
    get:
      description:
        "Get all child categories for a parent category\n\n        Returns\
        \ all immediate children of the specified category.\n\n        Returns:\n\
        \            Response: List of child categories"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get all child categories for a parent category
      tags:
        - categoriesapp
  /api/temp/category/(?P<id>[/.]+)/move/:
    post:
      description:
        "Move a category to a new parent\n\n        Changes the parent\
        \ of a category, effectively moving it in the hierarchy.\n        Validates\
        \ that the move won't create circular references.\n\n        Request body:\n\
        \            {\n                \"parent\": \"parent_id\" or null (for root\
        \ level)\n            }\n\n        Returns:\n            Response: Success\
        \ message or error\n\n        Status codes:\n            200: Category moved\
        \ successfully\n            400: Failed to move category (circular reference\
        \ or other issue)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Move a category to a new parent
      tags:
        - categoriesapp
  /api/temp/category/(?P<id>[/.]+)/related/:
    get:
      description:
        "Get categories related to the current category\n\n        Returns\
        \ categories that have a relationship with the specified category,\n     \
        \   optionally filtered by relationship type.\n\n        Query parameters:\n\
        \            type: Relationship type (optional)\n            limit: Maximum\
        \ number of categories to return (default: 5)\n\n        Returns:\n      \
        \      Response: List of related categories"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get categories related to the current category
      tags:
        - categoriesapp
  /api/temp/category/check_integrity/:
    get:
      description:
        "Check category hierarchy integrity\n\n        Validates the category\
        \ hierarchy for issues like circular references,\n        orphaned categories,\
        \ and other integrity problems.\n\n        Admin-only endpoint.\n\n      \
        \  Returns:\n            Response: List of integrity issues found\n      \
        \          [\n                    {\"type\": \"circular_reference\", \"categories\"\
        : [...], \"message\": \"...\"},\n                    {\"type\": \"orphaned_category\"\
        , \"category_id\": \"uuid\", \"message\": \"...\"},\n                    ...\n\
        \                ]"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Check category hierarchy integrity
      tags:
        - categoriesapp
  /api/temp/category/featured/:
    get:
      description:
        "Get featured categories\n\n        Returns categories marked as\
        \ featured, which are typically\n        highlighted in the UI and receive\
        \ special promotion.\n\n        Query parameters:\n            limit: Maximum\
        \ number of categories to return (default: 10)\n\n        Returns:\n     \
        \       Response: List of featured categories"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get featured categories
      tags:
        - categoriesapp
  /api/temp/category/flat_hierarchy/:
    get:
      description:
        "Get a flattened representation of the category hierarchy\n\n \
        \       Returns the category tree in a flat list with indentation information,\n\
        \        useful for dropdown selects with proper visual hierarchy.\n\n   \
        \     Query parameters:\n            parent: Filter by parent category ID\
        \ (optional)\n            include_inactive: Include inactive categories (default:\
        \ false)\n\n        Returns:\n            Response: Flattened category hierarchy\
        \ with indentation levels\n                [\n                    {\"id\"\
        : \"uuid\", \"name\": \"Category 1\", \"level\": 0},\n                   \
        \ {\"id\": \"uuid\", \"name\": \"Subcategory\", \"level\": 1},\n         \
        \           ...\n                ]"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get a flattened representation of the category hierarchy
      tags:
        - categoriesapp
  /api/temp/category/hierarchy/:
    get:
      description:
        "Get complete category hierarchy as a nested structure\n\n    \
        \    Returns the full category tree with parent-child relationships\n    \
        \    represented as nested objects. Useful for building category\n       \
        \ navigation menus.\n\n        Query parameters:\n            include_inactive:\
        \ Include inactive categories (default: false)\n\n        Returns:\n     \
        \       Response: Nested category hierarchy"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get complete category hierarchy as a nested structure
      tags:
        - categoriesapp
  /api/temp/category/parent_categories/:
    get:
      description:
        "Get all parent categories (categories without a parent)\n\n  \
        \      Returns all top-level categories in the hierarchy, which can be used\n\
        \        as starting points for navigating the category tree.\n\n        Returns:\n\
        \            Response: List of parent categories"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get all parent categories (categories without a parent)
      tags:
        - categoriesapp
  /api/temp/category/popular/:
    get:
      description:
        "Get popular categories based on service count and interactions\n\
        \n        Returns categories that have the most services and user interactions,\n\
        \        which are useful for highlighting trending categories.\n\n      \
        \  Query parameters:\n            limit: Maximum number of categories to return\
        \ (default: 10)\n\n        Returns:\n            Response: List of popular\
        \ categories"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get popular categories based on service count and interactions
      tags:
        - categoriesapp
  /api/temp/category/reorder/:
    post:
      description:
        "Reorder categories by updating position values\n\n        Updates\
        \ the position values of multiple categories at once,\n        allowing for\
        \ bulk reordering of categories.\n\n        Request body:\n            [\n\
        \                {\"id\": \"category_id\", \"position\": integer},\n     \
        \           {\"id\": \"category_id\", \"position\": integer},\n          \
        \      ...\n            ]\n\n        Returns:\n            Response: Success\
        \ message or error\n\n        Status codes:\n            200: Categories reordered\
        \ successfully\n            400: Failed to reorder categories"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Reorder categories by updating position values
      tags:
        - categoriesapp
  /api/temp/category/statistics/:
    get:
      description:
        "Get statistics about the category structure\n\n        Returns\
        \ aggregate statistics about the category structure,\n        including counts\
        \ of categories at different levels, average\n        children per parent,\
        \ etc.\n\n        Admin-only endpoint.\n\n        Returns:\n            Response:\
        \ Category statistics\n                {\n                    \"total_categories\"\
        : integer,\n                    \"active_categories\": integer,\n        \
        \            \"top_level_categories\": integer,\n                    \"max_depth\"\
        : integer,\n                    \"avg_children_per_parent\": float,\n    \
        \                ...\n                }"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get statistics about the category structure
      tags:
        - categoriesapp
  /api/temp/categoryrelation/:
    get:
      description:
        "API endpoint for managing category relations\n\n    Handles the\
        \ creation, retrieval, update, and deletion of relationships\n    between\
        \ categories. These relationships can be used to establish connections\n \
        \   between categories that aren't directly in a parent-child relationship.\n\
        \n    Endpoints:\n    - GET /api/category-relations/ - List relations with\
        \ filtering options\n    - POST /api/category-relations/ - Create a new relation\n\
        \    - GET /api/category-relations/{id}/ - Get relation details\n    - PUT/PATCH\
        \ /api/category-relations/{id}/ - Update a relation\n    - DELETE /api/category-relations/{id}/\
        \ - Delete a relation\n\n    Permissions:\n    - Requires authentication and\
        \ specific permissions"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing category relations
      tags:
        - categoriesapp
  /api/temp/categoryrelation/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing category relations\n\n    Handles the\
        \ creation, retrieval, update, and deletion of relationships\n    between\
        \ categories. These relationships can be used to establish connections\n \
        \   between categories that aren't directly in a parent-child relationship.\n\
        \n    Endpoints:\n    - GET /api/category-relations/ - List relations with\
        \ filtering options\n    - POST /api/category-relations/ - Create a new relation\n\
        \    - GET /api/category-relations/{id}/ - Get relation details\n    - PUT/PATCH\
        \ /api/category-relations/{id}/ - Update a relation\n    - DELETE /api/category-relations/{id}/\
        \ - Delete a relation\n\n    Permissions:\n    - Requires authentication and\
        \ specific permissions"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing category relations
      tags:
        - categoriesapp
  /api/temp/city/:
    get:
      description:
        "API endpoint for managing cities\n\n    Provides CRUD operations\
        \ for cities that are used throughout the platform\n    for location-based\
        \ filtering, matching customers with nearby shops, etc.\n\n    Endpoints:\n\
        \    - GET /api/cities/ - List all cities\n    - POST /api/cities/ - Create\
        \ a new city (admin only)\n    - GET /api/cities/{id}/ - Get city details\n\
        \    - PUT/PATCH /api/cities/{id}/ - Update a city (admin only)\n    - DELETE\
        \ /api/cities/{id}/ - Delete a city (admin only)\n\n    Permissions:\n   \
        \ - Authentication required for all operations\n\n    Filtering:\n    - Multiple\
        \ filters available via CityFilter (country, is_active, etc.)\n\n    Search\
        \ fields:\n    - name: City name\n\n    Ordering:\n    - name: City name (default)\n\
        \    - country__name: Country name"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing cities
      tags:
        - geoapp
  /api/temp/city/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing cities\n\n    Provides CRUD operations\
        \ for cities that are used throughout the platform\n    for location-based\
        \ filtering, matching customers with nearby shops, etc.\n\n    Endpoints:\n\
        \    - GET /api/cities/ - List all cities\n    - POST /api/cities/ - Create\
        \ a new city (admin only)\n    - GET /api/cities/{id}/ - Get city details\n\
        \    - PUT/PATCH /api/cities/{id}/ - Update a city (admin only)\n    - DELETE\
        \ /api/cities/{id}/ - Delete a city (admin only)\n\n    Permissions:\n   \
        \ - Authentication required for all operations\n\n    Filtering:\n    - Multiple\
        \ filters available via CityFilter (country, is_active, etc.)\n\n    Search\
        \ fields:\n    - name: City name\n\n    Ordering:\n    - name: City name (default)\n\
        \    - country__name: Country name"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing cities
      tags:
        - geoapp
  /api/temp/company/:
    get:
      description:
        "API endpoint for managing companies.\n\n    Allows creation, retrieval,\
        \ updating, and deletion of companies.\n    Different permission levels apply\
        \ based on user role (admin, company owner, or general user).\n\n    Endpoints:\n\
        \    - GET /api/companies/ - List companies (filtered by permissions)\n  \
        \  - POST /api/companies/ - Create a new company (requires 'add' permission)\n\
        \    - GET /api/companies/{id}/ - Retrieve company details\n    - PUT/PATCH\
        \ /api/companies/{id}/ - Update company (admin or owner only)\n    - DELETE\
        \ /api/companies/{id}/ - Delete company (admin or owner only)\n    - PATCH\
        \ /api/companies/{id}/verify/ - Verify a company (admin only)\n    - GET /api/companies/{id}/subscription_status/\
        \ - Get subscription details\n    - PATCH /api/companies/{id}/settings/ -\
        \ Update company settings\n    - GET /api/companies/{id}/statistics/ - Get\
        \ company statistics\n\n    Filtering:\n    - is_active: Filter by active\
        \ status\n    - subscription_status: Filter by subscription status\n\n   \
        \ Search fields:\n    - name: Company name\n    - owner__phone_number: Owner's\
        \ phone number\n    - contact_phone: Company contact phone\n    - registration_number:\
        \ Company registration number\n\n    Ordering:\n    - name: Company name\n\
        \    - created_at: Creation date\n    - subscription_status: Subscription\
        \ status\n    - shop_count: Number of shops"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing companies.
      tags:
        - companiesapp
  /api/temp/company/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing companies.\n\n    Allows creation, retrieval,\
        \ updating, and deletion of companies.\n    Different permission levels apply\
        \ based on user role (admin, company owner, or general user).\n\n    Endpoints:\n\
        \    - GET /api/companies/ - List companies (filtered by permissions)\n  \
        \  - POST /api/companies/ - Create a new company (requires 'add' permission)\n\
        \    - GET /api/companies/{id}/ - Retrieve company details\n    - PUT/PATCH\
        \ /api/companies/{id}/ - Update company (admin or owner only)\n    - DELETE\
        \ /api/companies/{id}/ - Delete company (admin or owner only)\n    - PATCH\
        \ /api/companies/{id}/verify/ - Verify a company (admin only)\n    - GET /api/companies/{id}/subscription_status/\
        \ - Get subscription details\n    - PATCH /api/companies/{id}/settings/ -\
        \ Update company settings\n    - GET /api/companies/{id}/statistics/ - Get\
        \ company statistics\n\n    Filtering:\n    - is_active: Filter by active\
        \ status\n    - subscription_status: Filter by subscription status\n\n   \
        \ Search fields:\n    - name: Company name\n    - owner__phone_number: Owner's\
        \ phone number\n    - contact_phone: Company contact phone\n    - registration_number:\
        \ Company registration number\n\n    Ordering:\n    - name: Company name\n\
        \    - created_at: Creation date\n    - subscription_status: Subscription\
        \ status\n    - shop_count: Number of shops"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing companies.
      tags:
        - companiesapp
  /api/temp/company/(?P<pk>[/.]+)/settings/:
    patch:
      description:
        "Update company settings.\n\n        Updates various configuration\
        \ settings for the company such as:\n        - Notification preferences\n\
        \        - Branding settings\n        - Default configurations\n\n       \
        \ Request Body:\n            JSON object with settings fields to update\n\n\
        \        Returns:\n            Response: Updated settings object\n\n     \
        \   Status Codes:\n            200: Settings updated successfully\n      \
        \      404: Settings not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Update company settings.
      tags:
        - companiesapp
  /api/temp/company/(?P<pk>[/.]+)/statistics/:
    get:
      description:
        "Get company statistics.\n\n        Returns aggregated statistics\
        \ about the company, such as:\n        - Total shops count\n        - Total\
        \ revenue\n        - Customer counts\n        - Booking metrics\n        -\
        \ Growth trends\n\n        Returns:\n            Response: JSON object with\
        \ company statistics"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get company statistics.
      tags:
        - companiesapp
  /api/temp/company/(?P<pk>[/.]+)/subscription_status/:
    get:
      description:
        "Get detailed subscription status.\n\n        Returns detailed\
        \ information about the company's subscription including:\n        - Current\
        \ status\n        - Plan details\n        - Expiration date\n        - Payment\
        \ history\n\n        Returns:\n            Response: JSON object with subscription\
        \ details"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get detailed subscription status.
      tags:
        - companiesapp
  /api/temp/company/(?P<pk>[/.]+)/verify/:
    patch:
      description:
        "Verify a company (Queue Me admin only).\n\n        Changes a company's\
        \ verification status to verified.\n        This is typically done after reviewing\
        \ company documents and information.\n\n        Returns:\n            Response:\
        \ Success message"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Verify a company (Queue Me admin only).
      tags:
        - companiesapp
  /api/temp/companydocument/:
    get:
      description:
        "API endpoint for managing company documents.\n\n    Allows uploading,\
        \ viewing, updating, and deleting company verification documents.\n    Documents\
        \ must be associated with a specific company.\n\n    Endpoints:\n    - GET\
        \ /api/companies/{company_id}/documents/ - List documents for a company\n\
        \    - POST /api/companies/{company_id}/documents/ - Upload a new document\n\
        \    - GET /api/companies/{company_id}/documents/{id}/ - Get document details\n\
        \    - PUT /api/companies/{company_id}/documents/{id}/ - Update document\n\
        \    - DELETE /api/companies/{company_id}/documents/{id}/ - Delete document\n\
        \    - PATCH /api/companies/{company_id}/documents/{id}/verify/ - Verify document\
        \ (admin only)\n\n    Permissions:\n    - User must be authenticated\n   \
        \ - User must have permission to manage company documents"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing company documents.
      tags:
        - companiesapp
  /api/temp/companydocument/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing company documents.\n\n    Allows uploading,\
        \ viewing, updating, and deleting company verification documents.\n    Documents\
        \ must be associated with a specific company.\n\n    Endpoints:\n    - GET\
        \ /api/companies/{company_id}/documents/ - List documents for a company\n\
        \    - POST /api/companies/{company_id}/documents/ - Upload a new document\n\
        \    - GET /api/companies/{company_id}/documents/{id}/ - Get document details\n\
        \    - PUT /api/companies/{company_id}/documents/{id}/ - Update document\n\
        \    - DELETE /api/companies/{company_id}/documents/{id}/ - Delete document\n\
        \    - PATCH /api/companies/{company_id}/documents/{id}/verify/ - Verify document\
        \ (admin only)\n\n    Permissions:\n    - User must be authenticated\n   \
        \ - User must have permission to manage company documents"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing company documents.
      tags:
        - companiesapp
  /api/temp/companydocument/(?P<pk>[/.]+)/verify/:
    patch:
      description:
        "Verify a company document (Queue Me admin only).\n\n        Marks\
        \ a document as verified, which contributes to the company's overall verification\
        \ status.\n        Records which admin performed the verification and when.\n\
        \n        Request Body:\n            {\n                \"is_verified\": boolean\
        \ (required)\n            }\n\n        Returns:\n            Response: Success\
        \ message"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Verify a company document (Queue Me admin only).
      tags:
        - companiesapp
  /api/temp/contenttype/:
    get:
      description:
        "API endpoint for content types\n\n    Content types represent\
        \ the different entity types in the system that can have roles.\n    This\
        \ is used for selecting entity types when creating roles.\n\n    Permissions:\n\
        \    - Requires authentication\n    - User must have 'view' permission on\
        \ the 'roles' resource"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for content types
      tags:
        - rolesapp
  /api/temp/contenttype/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for content types\n\n    Content types represent\
        \ the different entity types in the system that can have roles.\n    This\
        \ is used for selecting entity types when creating roles.\n\n    Permissions:\n\
        \    - Requires authentication\n    - User must have 'view' permission on\
        \ the 'roles' resource"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for content types
      tags:
        - rolesapp
  /api/temp/contenttype/for_roles/:
    get:
      description:
        "Get content types that can be assigned roles\n\n        Returns\
        \ only the subset of content types that support role assignment,\n       \
        \ such as shops and companies. This filters out content types that don't\n\
        \        make sense in the context of role assignment.\n\n        Returns:\n\
        \            Response: JSON array of valid content types for role assignment"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get content types that can be assigned roles
      tags:
        - rolesapp
  /api/temp/conversation/:
    get:
      description:
        "API endpoint for chat conversations\n\n    Handles creating, retrieving,\
        \ updating, and deleting chat conversations between\n    customers and shop\
        \ employees. Conversations are automatically filtered based on the\n    user's\
        \ role (customer sees their own conversations, employees see conversations\
        \ for their shop).\n\n    Endpoints:\n    - GET /api/conversations/ - List\
        \ conversations\n    - GET /api/conversations/{id}/ - Get details for a specific\
        \ conversation\n    - POST /api/conversations/ - Create a new conversation\n\
        \    - PUT /api/conversations/{id}/ - Update a conversation\n    - DELETE\
        \ /api/conversations/{id}/ - Delete a conversation (soft delete)\n    - GET\
        \ /api/conversations/{id}/messages/ - Get messages in a conversation\n   \
        \ - POST /api/conversations/{id}/send_message/ - Send a message in a conversation\n\
        \    - POST /api/conversations/{id}/mark_read/ - Mark all messages in a conversation\
        \ as read\n    - POST /api/conversations/{id}/typing_status/ - Update typing\
        \ status\n    - GET /api/conversations/{id}/presence/ - Get presence info\
        \ for all users in a conversation\n    - GET /api/conversations/unread_count/\
        \ - Get total unread message count\n\n    Permissions:\n    - User must have\
        \ access to the conversation (as customer or shop employee)\n\n    Ordering:\n\
        \    - updated_at: Conversation's last update time (default: most recent first)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for chat conversations
      tags:
        - chatapp
  /api/temp/conversation/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for chat conversations\n\n    Handles creating, retrieving,\
        \ updating, and deleting chat conversations between\n    customers and shop\
        \ employees. Conversations are automatically filtered based on the\n    user's\
        \ role (customer sees their own conversations, employees see conversations\
        \ for their shop).\n\n    Endpoints:\n    - GET /api/conversations/ - List\
        \ conversations\n    - GET /api/conversations/{id}/ - Get details for a specific\
        \ conversation\n    - POST /api/conversations/ - Create a new conversation\n\
        \    - PUT /api/conversations/{id}/ - Update a conversation\n    - DELETE\
        \ /api/conversations/{id}/ - Delete a conversation (soft delete)\n    - GET\
        \ /api/conversations/{id}/messages/ - Get messages in a conversation\n   \
        \ - POST /api/conversations/{id}/send_message/ - Send a message in a conversation\n\
        \    - POST /api/conversations/{id}/mark_read/ - Mark all messages in a conversation\
        \ as read\n    - POST /api/conversations/{id}/typing_status/ - Update typing\
        \ status\n    - GET /api/conversations/{id}/presence/ - Get presence info\
        \ for all users in a conversation\n    - GET /api/conversations/unread_count/\
        \ - Get total unread message count\n\n    Permissions:\n    - User must have\
        \ access to the conversation (as customer or shop employee)\n\n    Ordering:\n\
        \    - updated_at: Conversation's last update time (default: most recent first)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for chat conversations
      tags:
        - chatapp
  /api/temp/conversation/(?P<pk>[/.]+)/mark_read/:
    post:
      description:
        "Mark all messages in conversation as read\n\n        Marks all\
        \ unread messages in the conversation as read for the current user.\n    \
        \    For customers, this marks shop messages as read.\n        For employees,\
        \ this marks customer messages as read.\n\n        Returns:\n            Response:\
        \ JSON object with count of messages marked as read"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Mark all messages in conversation as read
      tags:
        - chatapp
  /api/temp/conversation/(?P<pk>[/.]+)/messages/:
    get:
      description:
        "Get messages for a conversation\n\n        Retrieves messages\
        \ for the specified conversation with pagination.\n        Automatically marks\
        \ messages as read if the current user is not the sender.\n        Updates\
        \ user presence and provides suggested responses for employees.\n\n      \
        \  Query parameters:\n            page (int): Page number for pagination (default:\
        \ 1)\n            page_size (int): Number of messages per page (default: 20)\n\
        \n        Returns:\n            Response: JSON object containing:\n      \
        \          - results: List of messages in chronological order\n          \
        \      - count: Total number of messages\n                - suggestions: List\
        \ of suggested responses (for employees only)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get messages for a conversation
      tags:
        - chatapp
  /api/temp/conversation/(?P<pk>[/.]+)/presence/:
    get:
      description:
        "Get presence information for all users in a conversation\n\n \
        \       Returns online status and last seen time for all users in the conversation.\n\
        \n        Returns:\n            Response: JSON object mapping user IDs to\
        \ presence information:\n                {\n                    \"user_id\"\
        : {\n                        \"is_online\": boolean,\n                   \
        \     \"last_seen\": \"formatted datetime string\"\n                    },\n\
        \                    ...\n                }"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get presence information for all users in a conversation
      tags:
        - chatapp
  /api/temp/conversation/(?P<pk>[/.]+)/send_message/:
    post:
      description:
        "Send a message in a conversation\n\n        Creates a new message\
        \ in the specified conversation.\n\n        Request body:\n            {\n\
        \                \"content\": \"Message text\", (required)\n             \
        \   \"message_type\": \"text|image|file\", (optional, default: \"text\")\n\
        \                \"media_url\": \"https://example.com/file.jpg\", (optional,\
        \ for non-text messages)\n                \"employee_id\": \"uuid\" (optional,\
        \ for shop messages from specific employee)\n            }\n\n        Returns:\n\
        \            Response: Created message object\n\n        Status codes:\n \
        \           201: Message created successfully\n            400: Invalid request\
        \ data"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Send a message in a conversation
      tags:
        - chatapp
  /api/temp/conversation/(?P<pk>[/.]+)/typing_status/:
    post:
      description:
        "Update typing status for user\n\n        Sets the typing status\
        \ of the current user in the conversation.\n        This is used to show typing\
        \ indicators to other participants.\n\n        Request body:\n           \
        \ {\n                \"is_typing\": boolean (default: false)\n           \
        \ }\n\n        Returns:\n            Response: Status update confirmation"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Update typing status for user
      tags:
        - chatapp
  /api/temp/conversation/unread_count/:
    get:
      description:
        "Get total unread message count across all conversations\n\n  \
        \      Returns the total number of unread messages for the current user\n\
        \        across all their conversations.\n\n        Returns:\n           \
        \ Response: JSON object with unread message count\n                {\n   \
        \                 \"unread_count\": integer\n                }"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get total unread message count across all conversations
      tags:
        - chatapp
  /api/temp/country/:
    get:
      description:
        "API endpoint for managing countries\n\n    Provides CRUD operations\
        \ for countries that are used throughout the platform\n    for address standardization\
        \ and location-based filtering.\n\n    Endpoints:\n    - GET /api/countries/\
        \ - List all countries\n    - POST /api/countries/ - Create a new country\
        \ (admin only)\n    - GET /api/countries/{id}/ - Get country details\n   \
        \ - PUT/PATCH /api/countries/{id}/ - Update a country (admin only)\n    -\
        \ DELETE /api/countries/{id}/ - Delete a country (admin only)\n\n    Permissions:\n\
        \    - Authentication required for all operations\n\n    Filtering:\n    -\
        \ is_active: Filter by active status\n\n    Search fields:\n    - name: Country\
        \ name\n    - code: Country code (ISO)\n\n    Ordering:\n    - name: Country\
        \ name (default)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing countries
      tags:
        - geoapp
  /api/temp/country/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing countries\n\n    Provides CRUD operations\
        \ for countries that are used throughout the platform\n    for address standardization\
        \ and location-based filtering.\n\n    Endpoints:\n    - GET /api/countries/\
        \ - List all countries\n    - POST /api/countries/ - Create a new country\
        \ (admin only)\n    - GET /api/countries/{id}/ - Get country details\n   \
        \ - PUT/PATCH /api/countries/{id}/ - Update a country (admin only)\n    -\
        \ DELETE /api/countries/{id}/ - Delete a country (admin only)\n\n    Permissions:\n\
        \    - Authentication required for all operations\n\n    Filtering:\n    -\
        \ is_active: Filter by active status\n\n    Search fields:\n    - name: Country\
        \ name\n    - code: Country code (ISO)\n\n    Ordering:\n    - name: Country\
        \ name (default)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing countries
      tags:
        - geoapp
  /api/temp/coupon/:
    get:
      description:
        "API endpoint for coupons\n\n    Allows shop managers and administrators\
        \ to create, retrieve, update,\n    delete, and manage coupon codes. Also\
        \ provides endpoints for customers\n    to validate and apply coupons.\n\n\
        \    Endpoints:\n    - GET /api/coupons/ - List all coupons (filtered by user\
        \ permissions)\n    - POST /api/coupons/ - Create a new coupon\n    - GET\
        \ /api/coupons/{id}/ - Get a specific coupon\n    - PUT/PATCH /api/coupons/{id}/\
        \ - Update a coupon\n    - DELETE /api/coupons/{id}/ - Delete a coupon\n \
        \   - POST /api/coupons/validate/ - Validate a coupon code\n    - POST /api/coupons/apply/\
        \ - Apply a coupon to a booking\n    - POST /api/coupons/generate/ - Generate\
        \ one or more coupons\n    - GET /api/coupons/available/ - Get available coupons\
        \ for the current user\n\n    Permissions:\n    - Authentication required\
        \ for all actions\n    - Shop managers can manage coupons for their shops\n\
        \    - Admin users can manage all coupons\n    - Regular users can only view\
        \ coupons and use validation/application endpoints"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for coupons
      tags:
        - discountapp
  /api/temp/coupon/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for coupons\n\n    Allows shop managers and administrators\
        \ to create, retrieve, update,\n    delete, and manage coupon codes. Also\
        \ provides endpoints for customers\n    to validate and apply coupons.\n\n\
        \    Endpoints:\n    - GET /api/coupons/ - List all coupons (filtered by user\
        \ permissions)\n    - POST /api/coupons/ - Create a new coupon\n    - GET\
        \ /api/coupons/{id}/ - Get a specific coupon\n    - PUT/PATCH /api/coupons/{id}/\
        \ - Update a coupon\n    - DELETE /api/coupons/{id}/ - Delete a coupon\n \
        \   - POST /api/coupons/validate/ - Validate a coupon code\n    - POST /api/coupons/apply/\
        \ - Apply a coupon to a booking\n    - POST /api/coupons/generate/ - Generate\
        \ one or more coupons\n    - GET /api/coupons/available/ - Get available coupons\
        \ for the current user\n\n    Permissions:\n    - Authentication required\
        \ for all actions\n    - Shop managers can manage coupons for their shops\n\
        \    - Admin users can manage all coupons\n    - Regular users can only view\
        \ coupons and use validation/application endpoints"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for coupons
      tags:
        - discountapp
  /api/temp/coupon/apply/:
    post:
      description:
        "Apply a coupon to a booking\n\n        Applies a coupon code to\
        \ a booking, calculating the discount\n        and updating the booking's\
        \ payment information.\n\n        Request body:\n            {\n         \
        \       \"code\": \"COUPON123\" (required),\n                \"booking_id\"\
        : \"uuid\" (required),\n                \"amount\": float (required)\n   \
        \         }\n\n        Returns:\n            Response: Application result\
        \ with discount and final amounts\n                {\n                   \
        \ \"success\": boolean,\n                    \"message\": \"Error message\"\
        \ (only if unsuccessful),\n                    \"discount_amount\": float\
        \ (only if successful),\n                    \"final_amount\": float (only\
        \ if successful)\n                }\n\n        Status codes:\n           \
        \ 200: Coupon applied successfully\n            400: Invalid coupon or application\
        \ failed\n            403: User not authorized to apply coupon to this booking\n\
        \            404: Booking not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Apply a coupon to a booking
      tags:
        - discountapp
  /api/temp/coupon/available/:
    get:
      description:
        "Get available coupons for the current user\n\n        Returns\
        \ coupons that the current user can use for a specified shop\n        and\
        \ optionally for a specific service.\n\n        Query parameters:\n      \
        \      shop_id: ID of the shop (required)\n            service_id: ID of the\
        \ service (optional)\n\n        Returns:\n            Response: List of available\
        \ coupons\n\n        Status codes:\n            200: Coupons retrieved successfully\n\
        \            400: Missing shop_id parameter\n            404: Shop or service\
        \ not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get available coupons for the current user
      tags:
        - discountapp
  /api/temp/coupon/generate/:
    post:
      description:
        "Generate one or more coupons\n\n        Creates one or more coupons\
        \ for a shop with the specified parameters.\n        When quantity > 1, generates\
        \ multiple coupons with unique codes.\n\n        Request body:\n         \
        \   {\n                \"shop_id\": \"uuid\" (required),\n               \
        \ \"name\": \"Coupon Name\" (required),\n                \"discount_type\"\
        : \"percentage|fixed\" (required),\n                \"value\": float (required),\n\
        \                \"start_date\": \"YYYY-MM-DD\" (required),\n            \
        \    \"end_date\": \"YYYY-MM-DD\" (required),\n                \"quantity\"\
        : integer (optional, default: 1),\n                \"usage_limit\": integer\
        \ (optional, default: 0),\n                \"is_single_use\": boolean (optional,\
        \ default: false),\n                \"apply_to_all_services\": boolean (optional,\
        \ default: false),\n                \"service_ids\": [\"uuid\", ...] (optional),\n\
        \                \"category_ids\": [\"uuid\", ...] (optional)\n          \
        \  }\n\n        Returns:\n            Response: Created coupon(s)\n      \
        \          For single coupon:\n                    Coupon object\n       \
        \         For multiple coupons:\n                    {\n                 \
        \       \"count\": integer,\n                        \"coupons\": [Coupon\
        \ objects]\n                    }\n\n        Status codes:\n            201:\
        \ Coupon(s) created successfully\n            400: Invalid request data\n\
        \            403: User not authorized to manage coupons for this shop\n  \
        \          404: Shop not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Generate one or more coupons
      tags:
        - discountapp
  /api/temp/coupon/validate/:
    post:
      description:
        "Validate a coupon code\n\n        Checks if a coupon code is valid\
        \ for the current user, optionally\n        for a specific service and amount.\n\
        \n        Request body:\n            {\n                \"code\": \"COUPON123\"\
        \ (required),\n                \"service_id\": \"uuid\" (optional),\n    \
        \            \"amount\": float (optional)\n            }\n\n        Returns:\n\
        \            Response: Validation result with coupon details and discount\
        \ amount\n                {\n                    \"valid\": boolean,\n   \
        \                 \"message\": \"Error message\" (only if invalid),\n    \
        \                \"coupon\": {...} (only if valid),\n                    \"\
        discount_amount\": float (only if valid and amount provided)\n           \
        \     }\n\n        Status codes:\n            200: Validation processed successfully\n\
        \            400: Invalid request data"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Validate a coupon code
      tags:
        - discountapp
  /api/temp/customer/:
    get:
      description:
        "API endpoint for customer profile management\n\n    Provides CRUD\
        \ operations for customer profiles with different\n    permissions for customers\
        \ vs. administrators.\n\n    Endpoints:\n    - GET /api/customers/ - List\
        \ customers (admins can see all, customers see only their own)\n    - POST\
        \ /api/customers/ - Create a customer profile\n    - GET /api/customers/{id}/\
        \ - Get a specific customer profile\n    - PUT/PATCH /api/customers/{id}/\
        \ - Update a customer profile\n    - DELETE /api/customers/{id}/ - Delete\
        \ a customer profile\n    - GET /api/customers/me/ - Get current user's profile\n\
        \    - PATCH /api/customers/update_preferences/ - Update customer preferences\n\
        \    - GET /api/customers/recommended_content/ - Get personalized recommendations\n\
        \n    Permissions:\n    - Customer users can only access and modify their\
        \ own profiles\n    - Admin users can access and modify all customer profiles\n\
        \n    Filtering (admin only):\n    - city: Filter by city\n    - search: Search\
        \ by name or phone number"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for customer profile management
      tags:
        - customersapp
  /api/temp/customer/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for customer profile management\n\n    Provides CRUD\
        \ operations for customer profiles with different\n    permissions for customers\
        \ vs. administrators.\n\n    Endpoints:\n    - GET /api/customers/ - List\
        \ customers (admins can see all, customers see only their own)\n    - POST\
        \ /api/customers/ - Create a customer profile\n    - GET /api/customers/{id}/\
        \ - Get a specific customer profile\n    - PUT/PATCH /api/customers/{id}/\
        \ - Update a customer profile\n    - DELETE /api/customers/{id}/ - Delete\
        \ a customer profile\n    - GET /api/customers/me/ - Get current user's profile\n\
        \    - PATCH /api/customers/update_preferences/ - Update customer preferences\n\
        \    - GET /api/customers/recommended_content/ - Get personalized recommendations\n\
        \n    Permissions:\n    - Customer users can only access and modify their\
        \ own profiles\n    - Admin users can access and modify all customer profiles\n\
        \n    Filtering (admin only):\n    - city: Filter by city\n    - search: Search\
        \ by name or phone number"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for customer profile management
      tags:
        - customersapp
  /api/temp/customer/me/:
    get:
      description:
        "Get current user's profile\n\n        Returns the customer profile\
        \ for the authenticated user.\n        If the profile doesn't exist, it creates\
        \ one automatically.\n\n        Returns:\n            Response: Customer profile\
        \ data\n\n        Status codes:\n            200: Profile retrieved successfully\n\
        \            201: Profile created successfully\n            403: User is not\
        \ a customer"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get current user's profile
      tags:
        - customersapp
  /api/temp/customer/recommended_content/:
    get:
      description:
        "Get personalized recommended content\n\n        Returns personalized\
        \ recommendations based on the customer's\n        browsing history, preferences,\
        \ and past bookings.\n\n        Query parameters:\n            type (optional):\
        \ Type of content to recommend\n                  (all, shops, specialists,\
        \ services)\n\n        Returns:\n            Response: JSON object with recommended\
        \ content\n\n        Status codes:\n            200: Recommendations retrieved\
        \ successfully\n            403: User is not a customer\n            404:\
        \ Customer profile not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get personalized recommended content
      tags:
        - customersapp
  /api/temp/customer/update_preferences/:
    patch:
      description:
        "Update customer preferences\n\n        Updates specific preferences\
        \ for the customer such as:\n        - Notification settings\n        - Privacy\
        \ settings\n        - Display preferences\n        - Language/locale preferences\n\
        \n        Request body:\n            Key-value pairs of preferences to update\n\
        \n        Returns:\n            Response: Success message\n\n        Status\
        \ codes:\n            200: Preferences updated successfully\n            403:\
        \ User is not a customer\n            404: Customer profile not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Update customer preferences
      tags:
        - customersapp
  /api/temp/customerreel/:
    get:
      description:
        "API endpoint for customers to view and interact with reels.\n\n\
        \    Allows customers to browse, view, and interact with shop reels through\n\
        \    various actions like liking, commenting, and sharing.\n\n    Endpoints:\n\
        \    - GET /api/reels/ - List published reels\n    - GET /api/reels/{id}/\
        \ - View a specific reel\n    - GET /api/reels/feed/ - Get personalized feed\
        \ of reels\n    - POST /api/reels/{id}/like/ - Like/unlike a reel\n    - POST\
        \ /api/reels/{id}/comment/ - Comment on a reel\n    - POST /api/reels/{id}/share/\
        \ - Share a reel\n    - POST /api/reels/{id}/report/ - Report a reel\n   \
        \ - GET /api/reels/{id}/comments/ - Get comments for a reel\n    - DELETE\
        \ /api/reels/{id}/comments/{comment_id}/ - Delete own comment\n    - GET /api/reels/recommended/\
        \ - Get recommended reels\n\n    Permissions:\n    - Authentication required\
        \ for all actions\n\n    Filtering:\n    - Multiple filters are available\
        \ via ReelFilter\n\n    Search fields:\n    - title: Reel title\n    - caption:\
        \ Reel caption\n    - shop__name: Shop name\n\n    Ordering:\n    - created_at:\
        \ Creation date\n    - view_count: Number of views"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for customers to view and interact with reels.
      tags:
        - reelsapp
  /api/temp/customerreel/(?P<pk>[/.]+)/:
    get:
      description:
        "Retrieve a specific reel and record the view\n\n        Records\
        \ analytics data about the view, including watch duration,\n        and increments\
        \ the view counter.\n\n        Args:\n            request: The HTTP request\n\
        \n        Returns:\n            Response: Reel data"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Retrieve a specific reel and record the view
      tags:
        - reelsapp
  /api/temp/customerreel/(?P<pk>[/.]+)/comment/:
    post:
      description:
        "Add a comment to a reel\n\n        Creates a new comment on the\
        \ reel and records the engagement.\n\n        Request body:\n            {\n\
        \                \"content\": \"Comment text\" (required)\n            }\n\
        \n        Returns:\n            Response: Created comment data\n\n       \
        \ Status codes:\n            201: Comment created successfully\n         \
        \   400: Invalid request data"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Add a comment to a reel
      tags:
        - reelsapp
  /api/temp/customerreel/(?P<pk>[/.]+)/comments/:
    get:
      description:
        "Get comments for a reel\n\n        Returns a paginated list of\
        \ visible comments for the reel,\n        ordered by creation time (newest\
        \ first).\n\n        Returns:\n            Response: List of comments"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get comments for a reel
      tags:
        - reelsapp
  /api/temp/customerreel/(?P<pk>[/.]+)/comments/(?P<comment_id>[/.]+)/:
    delete:
      description:
        "Delete a comment by the comment author\n\n        Allows users\
        \ to delete their own comments on reels.\n\n        Path parameters:\n   \
        \         comment_id: ID of the comment to delete\n\n        Returns:\n  \
        \          Response: No content\n\n        Status codes:\n            204:\
        \ Comment deleted successfully\n            403: Not the comment author\n\
        \            404: Comment not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Delete a comment by the comment author
      tags:
        - reelsapp
  /api/temp/customerreel/(?P<pk>[/.]+)/like/:
    post:
      description:
        "Like or unlike a reel\n\n        Toggles the like status for a\
        \ reel. If already liked, unlikes it.\n        If not yet liked, likes it\
        \ and records the engagement.\n\n        Returns:\n            Response: Success\
        \ message\n\n        Status codes:\n            200: Reel unliked successfully\n\
        \            201: Reel liked successfully"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Like or unlike a reel
      tags:
        - reelsapp
  /api/temp/customerreel/(?P<pk>[/.]+)/report/:
    post:
      description:
        "Report a reel for inappropriate content\n\n        Creates a report\
        \ against a reel, which will be reviewed by moderators.\n        Users can\
        \ only report a reel once.\n\n        Request body:\n            {\n     \
        \           \"reason\": \"copyright|inappropriate|offensive|other\" (required),\n\
        \                \"description\": \"Detailed explanation\" (optional)\n  \
        \          }\n\n        Returns:\n            Response: Created report data\n\
        \n        Status codes:\n            201: Report created successfully\n  \
        \          400: Invalid request data or already reported"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Report a reel for inappropriate content
      tags:
        - reelsapp
  /api/temp/customerreel/(?P<pk>[/.]+)/share/:
    post:
      description:
        "Record a share of a reel\n\n        Creates a record of the user\
        \ sharing a reel and records the engagement.\n\n        Request body:\n  \
        \          {\n                \"share_type\": \"in_app|social|direct\" (optional,\
        \ default: \"in_app\")\n            }\n\n        Returns:\n            Response:\
        \ Created share record data\n\n        Status codes:\n            201: Share\
        \ recorded successfully\n            400: Invalid request data"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Record a share of a reel
      tags:
        - reelsapp
  /api/temp/customerreel/feed/:
    get:
      description:
        "Get personalized feed of reels\n\n        Returns a curated feed\
        \ of reels based on the requested feed type.\n\n        Query parameters:\n\
        \            type: Feed type (nearby, for_you, following, default: nearby)\n\
        \            lat: Latitude for location-based feed (optional)\n          \
        \  lng: Longitude for location-based feed (optional)\n\n        Feed types:\n\
        \        - nearby: Reels from shops in the same city, sorted by distance\n\
        \        - for_you: Personalized feed based on engagement and preferences\n\
        \        - following: Reels from shops the customer follows\n\n        Returns:\n\
        \            Response: List of reels for the feed\n\n        Status codes:\n\
        \            200: Feed retrieved successfully\n            400: Invalid feed\
        \ type"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get personalized feed of reels
      tags:
        - reelsapp
  /api/temp/customerreel/recommended/:
    get:
      description:
        "Get recommended reels based on user preferences and behavior\n\
        \n        Returns a personalized list of recommended reels, taking into account\n\
        \        the user's past interactions, preferences, and location.\n\n    \
        \    Returns:\n            Response: List of recommended reels"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get recommended reels based on user preferences and behavior
      tags:
        - reelsapp
  /api/temp/dashboard/platform_metrics/:
    get:
      description: Get platform-wide metrics for Queue Me admins
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get platform-wide metrics for Queue Me admins
      tags:
        - reportanalyticsapp
  /api/temp/dashboard/shop_metrics/:
    get:
      description: Get dashboard metrics for a shop
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get dashboard metrics for a shop
      tags:
        - reportanalyticsapp
  /api/temp/dashboard/specialist_metrics/:
    get:
      description: Get dashboard metrics for a specialist
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get dashboard metrics for a specialist
      tags:
        - reportanalyticsapp
  /api/temp/dashboarddata/:
    get:
      description: Get complete dashboard data
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get complete dashboard data
      tags:
        - shopDashboardApp
  /api/temp/dashboarddata/charts/:
    get:
      description: Get chart data
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get chart data
      tags:
        - shopDashboardApp
  /api/temp/dashboarddata/kpis/:
    get:
      description: Get only KPI data
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get only KPI data
      tags:
        - shopDashboardApp
  /api/temp/dashboarddata/tables/:
    get:
      description: Get table data
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get table data
      tags:
        - shopDashboardApp
  /api/temp/dashboardlayout/:
    get:
      description: API endpoint for managing dashboard layouts
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing dashboard layouts
      tags:
        - shopDashboardApp
  /api/temp/dashboardlayout/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing dashboard layouts
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing dashboard layouts
      tags:
        - shopDashboardApp
  /api/temp/dashboardlayout/(?P<pk>[/.]+)/duplicate/:
    post:
      description: Duplicate a layout
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Duplicate a layout
      tags:
        - shopDashboardApp
  /api/temp/dashboardlayout/(?P<pk>[/.]+)/set_default/:
    post:
      description: Set a layout as default
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Set a layout as default
      tags:
        - shopDashboardApp
  /api/temp/dashboardlayout/default/:
    get:
      description: Get default layout for a shop
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get default layout for a shop
      tags:
        - shopDashboardApp
  /api/temp/dashboardpreference/:
    get:
      description: API endpoint for managing user dashboard preferences
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing user dashboard preferences
      tags:
        - shopDashboardApp
  /api/temp/dashboardpreference/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing user dashboard preferences
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing user dashboard preferences
      tags:
        - shopDashboardApp
  /api/temp/dashboardpreference/current/:
    get:
      description: Get current user's dashboard preferences
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get current user's dashboard preferences
      tags:
        - shopDashboardApp
  /api/temp/dashboardpreference/set_favorite_kpis/:
    post:
      description: Set user's favorite KPIs
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Set user's favorite KPIs
      tags:
        - shopDashboardApp
  /api/temp/dashboardpreference/set_preferred_layout/:
    post:
      description: Set user's preferred dashboard layout
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Set user's preferred dashboard layout
      tags:
        - shopDashboardApp
  /api/temp/dashboardsettings/:
    get:
      description: API endpoint for managing dashboard settings
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing dashboard settings
      tags:
        - shopDashboardApp
  /api/temp/dashboardsettings/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing dashboard settings
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing dashboard settings
      tags:
        - shopDashboardApp
  /api/temp/dashboardsettings/for_shop/:
    get:
      description: Get settings for a specific shop
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get settings for a specific shop
      tags:
        - shopDashboardApp
  /api/temp/dashboardwidget/:
    get:
      description: API endpoint for managing dashboard widgets
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing dashboard widgets
      tags:
        - shopDashboardApp
  /api/temp/dashboardwidget/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing dashboard widgets
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing dashboard widgets
      tags:
        - shopDashboardApp
  /api/temp/devicetoken/:
    get:
      description: Get all device tokens for the current user
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get all device tokens for the current user
      tags:
        - notificationsapp
  /api/temp/devicetoken/(?P<pk>[/.]+)/:
    get:
      description: Get a specific device token
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get a specific device token
      tags:
        - notificationsapp
  /api/temp/devicetoken/delete_by_device_id/:
    delete:
      description: Delete device token by device ID
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Delete device token by device ID
      tags:
        - notificationsapp
  /api/temp/discountcalculation/calculate/:
    post:
      description:
        "Calculate discount for a price\n\n        Calculates the discounted\
        \ price for a given original price,\n        applying discounts from service\
        \ discounts, coupons, and promotions\n        as applicable.\n\n        Request\
        \ body:\n            {\n                \"shop_id\": \"uuid\" (required),\n\
        \                \"price\": float (required),\n                \"service_id\"\
        : \"uuid\" (optional),\n                \"coupon_code\": \"CODE123\" (optional),\n\
        \                \"combine_discounts\": boolean (optional, default: false)\n\
        \            }\n\n        Returns:\n            Response: Discount calculation\
        \ results\n\n            For combine_discounts=false:\n                {\n\
        \                    \"original_price\": float,\n                    \"discounted_price\"\
        : float,\n                    \"discount_amount\": float,\n              \
        \      \"discount_info\": {\n                        \"type\": \"service_discount|coupon|promotion\"\
        ,\n                        \"name\": \"Discount name\",\n                \
        \        ...\n                    }\n                }\n\n            For\
        \ combine_discounts=true:\n                {\n                    \"original_price\"\
        : float,\n                    \"discounted_price\": float,\n             \
        \       \"total_discount\": float,\n                    \"discount_breakdown\"\
        : [\n                        {\n                            \"type\": \"service_discount|coupon|promotion\"\
        ,\n                            \"name\": \"Discount name\",\n            \
        \                \"amount\": float,\n                            ...\n   \
        \                     },\n                        ...\n                  \
        \  ]\n                }\n\n        Status codes:\n            200: Calculation\
        \ performed successfully\n            400: Invalid request data\n        \
        \    404: Shop or service not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Calculate discount for a price
      tags:
        - discountapp
  /api/temp/employee/:
    get:
      description:
        "API endpoints for employee management\n\n    Provides CRUD operations\
        \ for shop employees with different serializers for\n    create, update, list,\
        \ and detail operations.\n\n    Endpoints:\n    - GET /api/employees/ - List\
        \ employees (filtered by permissions)\n    - POST /api/employees/ - Create\
        \ a new employee\n    - GET /api/employees/{id}/ - Get employee details\n\
        \    - PUT/PATCH /api/employees/{id}/ - Update employee details\n    - DELETE\
        \ /api/employees/{id}/ - Delete an employee\n    - GET /api/employees/me/\
        \ - Get current user's employee profile\n    - POST /api/employees/{id}/toggle_active/\
        \ - Toggle employee active status\n    - POST /api/employees/{id}/make_specialist/\
        \ - Convert employee to specialist\n    - GET /api/employees/{id}/schedule/\
        \ - Get employee's schedule\n\n    Permissions:\n    - User must be authenticated\n\
        \    - User must have proper permissions (admin, shop manager, or employee\
        \ themselves)\n\n    Filtering:\n    - shop: Filter by shop ID\n    - position:\
        \ Filter by position\n    - is_active: Filter by active status\n\n    Search\
        \ fields:\n    - first_name: Employee's first name\n    - last_name: Employee's\
        \ last name\n    - email: Employee's email\n    - phone_number: Employee's\
        \ phone number\n\n    Ordering:\n    - first_name: Employee's first name\n\
        \    - last_name: Employee's last name\n    - position: Employee's position\n\
        \    - hire_date: Date the employee was hired\n    - created_at: Date the\
        \ employee record was created"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoints for employee management
      tags:
        - employeeapp
  /api/temp/employee/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoints for employee management\n\n    Provides CRUD operations\
        \ for shop employees with different serializers for\n    create, update, list,\
        \ and detail operations.\n\n    Endpoints:\n    - GET /api/employees/ - List\
        \ employees (filtered by permissions)\n    - POST /api/employees/ - Create\
        \ a new employee\n    - GET /api/employees/{id}/ - Get employee details\n\
        \    - PUT/PATCH /api/employees/{id}/ - Update employee details\n    - DELETE\
        \ /api/employees/{id}/ - Delete an employee\n    - GET /api/employees/me/\
        \ - Get current user's employee profile\n    - POST /api/employees/{id}/toggle_active/\
        \ - Toggle employee active status\n    - POST /api/employees/{id}/make_specialist/\
        \ - Convert employee to specialist\n    - GET /api/employees/{id}/schedule/\
        \ - Get employee's schedule\n\n    Permissions:\n    - User must be authenticated\n\
        \    - User must have proper permissions (admin, shop manager, or employee\
        \ themselves)\n\n    Filtering:\n    - shop: Filter by shop ID\n    - position:\
        \ Filter by position\n    - is_active: Filter by active status\n\n    Search\
        \ fields:\n    - first_name: Employee's first name\n    - last_name: Employee's\
        \ last name\n    - email: Employee's email\n    - phone_number: Employee's\
        \ phone number\n\n    Ordering:\n    - first_name: Employee's first name\n\
        \    - last_name: Employee's last name\n    - position: Employee's position\n\
        \    - hire_date: Date the employee was hired\n    - created_at: Date the\
        \ employee record was created"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoints for employee management
      tags:
        - employeeapp
  /api/temp/employee/(?P<pk>[/.]+)/make_specialist/:
    post:
      description:
        "Convert employee to specialist\n\n        Transforms an employee\
        \ into a specialist, which allows them to provide services\n        and be\
        \ booked by customers.\n\n        Returns:\n            Response: Success\
        \ message and specialist ID\n                {\n                    \"detail\"\
        : \"Employee converted to specialist successfully.\",\n                  \
        \  \"specialist_id\": \"uuid\"\n                }\n\n        Status codes:\n\
        \            200: Conversion successful\n            400: Employee is already\
        \ a specialist\n            501: Specialist module not available"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Convert employee to specialist
      tags:
        - employeeapp
  /api/temp/employee/(?P<pk>[/.]+)/schedule/:
    get:
      description:
        "Get employee's schedule for a date range\n\n        Returns the\
        \ employee's schedule including working hours, appointments,\n        and\
        \ leaves for the specified date range.\n\n        Query parameters:\n    \
        \        start_date: Start date (YYYY-MM-DD, default: today)\n           \
        \ end_date: End date (YYYY-MM-DD, default: today + 6 days)\n\n        Returns:\n\
        \            Response: Schedule data grouped by date\n                {\n\
        \                    \"2023-01-01\": {\n                        \"working_hours\"\
        : [...],\n                        \"appointments\": [...],\n             \
        \           \"leaves\": [...]\n                    },\n                  \
        \  ...\n                }\n\n        Status codes:\n            200: Schedule\
        \ retrieved successfully\n            400: Invalid date format"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get employee's schedule for a date range
      tags:
        - employeeapp
  /api/temp/employee/(?P<pk>[/.]+)/toggle_active/:
    post:
      description:
        "Toggle employee active status\n\n        Changes an employee's\
        \ active status from active to inactive or vice versa.\n        This can be\
        \ used to temporarily disable an employee's account without deleting it.\n\
        \n        Returns:\n            Response: Success message and updated active\
        \ status\n                {\n                    \"status\": \"success\",\n\
        \                    \"is_active\": boolean\n                }"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Toggle employee active status
      tags:
        - employeeapp
  /api/temp/employee/me/:
    get:
      description:
        "Get current user's employee profile\n\n        Returns the employee\
        \ profile for the authenticated user.\n\n        Returns:\n            Response:\
        \ Employee profile data\n\n        Status codes:\n            200: Profile\
        \ retrieved successfully\n            404: Employee profile not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get current user's employee profile
      tags:
        - employeeapp
  /api/temp/employeeleave/:
    get:
      description:
        "API endpoints for employee leaves\n\n    Manages leave requests\
        \ and approvals for a specific employee,\n    including vacation, sick leave,\
        \ and other absence types.\n\n    Endpoints:\n    - GET /api/employees/{employee_id}/leaves/\
        \ - List employee leaves\n    - POST /api/employees/{employee_id}/leaves/\
        \ - Create leave request\n    - GET /api/employees/{employee_id}/leaves/{id}/\
        \ - Get specific leave\n    - PUT/PATCH /api/employees/{employee_id}/leaves/{id}/\
        \ - Update leave request\n    - DELETE /api/employees/{employee_id}/leaves/{id}/\
        \ - Delete leave request\n    - POST /api/employees/{employee_id}/leaves/{id}/approve/\
        \ - Approve leave request\n    - POST /api/employees/{employee_id}/leaves/{id}/reject/\
        \ - Reject leave request\n\n    Permissions:\n    - User must be authenticated\n\
        \    - User must have proper permissions to manage employee leaves\n\n   \
        \ Filtering:\n    - leave_type: Filter by leave type\n    - status: Filter\
        \ by leave status\n    - start_date: Filter by start date\n    - end_date:\
        \ Filter by end date"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoints for employee leaves
      tags:
        - employeeapp
  /api/temp/employeeleave/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoints for employee leaves\n\n    Manages leave requests\
        \ and approvals for a specific employee,\n    including vacation, sick leave,\
        \ and other absence types.\n\n    Endpoints:\n    - GET /api/employees/{employee_id}/leaves/\
        \ - List employee leaves\n    - POST /api/employees/{employee_id}/leaves/\
        \ - Create leave request\n    - GET /api/employees/{employee_id}/leaves/{id}/\
        \ - Get specific leave\n    - PUT/PATCH /api/employees/{employee_id}/leaves/{id}/\
        \ - Update leave request\n    - DELETE /api/employees/{employee_id}/leaves/{id}/\
        \ - Delete leave request\n    - POST /api/employees/{employee_id}/leaves/{id}/approve/\
        \ - Approve leave request\n    - POST /api/employees/{employee_id}/leaves/{id}/reject/\
        \ - Reject leave request\n\n    Permissions:\n    - User must be authenticated\n\
        \    - User must have proper permissions to manage employee leaves\n\n   \
        \ Filtering:\n    - leave_type: Filter by leave type\n    - status: Filter\
        \ by leave status\n    - start_date: Filter by start date\n    - end_date:\
        \ Filter by end date"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoints for employee leaves
      tags:
        - employeeapp
  /api/temp/employeeleave/(?P<pk>[/.]+)/approve/:
    post:
      description:
        "Approve a leave request\n\n        Changes a leave request's status\
        \ to approved.\n        Only shop managers and admins can approve leave requests.\n\
        \n        Returns:\n            Response: Success message\n              \
        \  {\n                    \"status\": \"success\",\n                    \"\
        detail\": \"Leave approved successfully.\"\n                }\n\n        Status\
        \ codes:\n            200: Leave approved successfully\n            403: Insufficient\
        \ permissions"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Approve a leave request
      tags:
        - employeeapp
  /api/temp/employeeleave/(?P<pk>[/.]+)/reject/:
    post:
      description:
        "Reject a leave request\n\n        Changes a leave request's status\
        \ to rejected.\n        Only shop managers and admins can reject leave requests.\n\
        \n        Returns:\n            Response: Success message\n              \
        \  {\n                    \"status\": \"success\",\n                    \"\
        detail\": \"Leave rejected successfully.\"\n                }\n\n        Status\
        \ codes:\n            200: Leave rejected successfully\n            403: Insufficient\
        \ permissions"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Reject a leave request
      tags:
        - employeeapp
  /api/temp/employeeskill/:
    get:
      description:
        "API endpoints for employee skills\n\n    Manages skills for a\
        \ specific employee, which can be used to match them\n    with appropriate\
        \ services and assignments.\n\n    Endpoints:\n    - GET /api/employees/{employee_id}/skills/\
        \ - List employee skills\n    - POST /api/employees/{employee_id}/skills/\
        \ - Add a skill to employee\n    - GET /api/employees/{employee_id}/skills/{id}/\
        \ - Get specific skill\n    - PUT/PATCH /api/employees/{employee_id}/skills/{id}/\
        \ - Update skill\n    - DELETE /api/employees/{employee_id}/skills/{id}/ -\
        \ Remove skill from employee\n\n    Permissions:\n    - User must be authenticated\n\
        \    - User must have proper permissions to manage employee skills"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoints for employee skills
      tags:
        - employeeapp
  /api/temp/employeeskill/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoints for employee skills\n\n    Manages skills for a\
        \ specific employee, which can be used to match them\n    with appropriate\
        \ services and assignments.\n\n    Endpoints:\n    - GET /api/employees/{employee_id}/skills/\
        \ - List employee skills\n    - POST /api/employees/{employee_id}/skills/\
        \ - Add a skill to employee\n    - GET /api/employees/{employee_id}/skills/{id}/\
        \ - Get specific skill\n    - PUT/PATCH /api/employees/{employee_id}/skills/{id}/\
        \ - Update skill\n    - DELETE /api/employees/{employee_id}/skills/{id}/ -\
        \ Remove skill from employee\n\n    Permissions:\n    - User must be authenticated\n\
        \    - User must have proper permissions to manage employee skills"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoints for employee skills
      tags:
        - employeeapp
  /api/temp/employeeworkinghours/:
    get:
      description:
        "API endpoints for employee working hours\n\n    Manages working\
        \ hours for a specific employee, including creation,\n    modification, and\
        \ deletion of working hour slots.\n\n    Endpoints:\n    - GET /api/employees/{employee_id}/working-hours/\
        \ - List working hours\n    - POST /api/employees/{employee_id}/working-hours/\
        \ - Create working hours\n    - GET /api/employees/{employee_id}/working-hours/{id}/\
        \ - Get specific working hours\n    - PUT/PATCH /api/employees/{employee_id}/working-hours/{id}/\
        \ - Update working hours\n    - DELETE /api/employees/{employee_id}/working-hours/{id}/\
        \ - Delete working hours\n    - POST /api/employees/{employee_id}/working-hours/bulk_update/\
        \ - Bulk update working hours\n\n    Permissions:\n    - User must be authenticated\n\
        \    - User must have proper permissions to manage employee working hours"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoints for employee working hours
      tags:
        - employeeapp
  /api/temp/employeeworkinghours/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoints for employee working hours\n\n    Manages working\
        \ hours for a specific employee, including creation,\n    modification, and\
        \ deletion of working hour slots.\n\n    Endpoints:\n    - GET /api/employees/{employee_id}/working-hours/\
        \ - List working hours\n    - POST /api/employees/{employee_id}/working-hours/\
        \ - Create working hours\n    - GET /api/employees/{employee_id}/working-hours/{id}/\
        \ - Get specific working hours\n    - PUT/PATCH /api/employees/{employee_id}/working-hours/{id}/\
        \ - Update working hours\n    - DELETE /api/employees/{employee_id}/working-hours/{id}/\
        \ - Delete working hours\n    - POST /api/employees/{employee_id}/working-hours/bulk_update/\
        \ - Bulk update working hours\n\n    Permissions:\n    - User must be authenticated\n\
        \    - User must have proper permissions to manage employee working hours"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoints for employee working hours
      tags:
        - employeeapp
  /api/temp/employeeworkinghours/bulk_update/:
    post:
      description:
        "Update all working hours for an employee\n\n        Allows batch\
        \ updating of an employee's working hours for efficiency.\n        This is\
        \ useful for setting a new weekly schedule all at once.\n\n        Request\
        \ body:\n            Array of working hours objects\n                [\n \
        \                   {\n                        \"day_of_week\": integer (0-6),\n\
        \                        \"start_time\": \"HH:MM:SS\",\n                 \
        \       \"end_time\": \"HH:MM:SS\",\n                        \"is_day_off\"\
        : boolean\n                    },\n                    ...\n             \
        \   ]\n\n        Returns:\n            Response: Updated working hours data\n\
        \n        Status codes:\n            200: Hours updated successfully\n   \
        \         400: Invalid data in request"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Update all working hours for an employee
      tags:
        - employeeapp
  /api/temp/favorites/add_service/:
    post:
      description:
        "Add a service to favorites\n\n        Adds the specified service\
        \ to the customer's favorites.\n        If the service is already in favorites,\
        \ returns success without duplication.\n\n        Request body:\n        \
        \    {\n                \"service_id\": \"uuid\" (required)\n            }\n\
        \n        Returns:\n            Response: Success message\n\n        Status\
        \ codes:\n            201: Service added to favorites\n            200: Service\
        \ already in favorites\n            400: Missing service_id parameter\n  \
        \          403: User is not a customer or profile not found\n            404:\
        \ Service not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Add a service to favorites
      tags:
        - customersapp
  /api/temp/favorites/add_shop/:
    post:
      description:
        "Add a shop to favorites\n\n        Adds the specified shop to\
        \ the customer's favorites.\n        If the shop is already in favorites,\
        \ returns success without duplication.\n\n        Request body:\n        \
        \    {\n                \"shop_id\": \"uuid\" (required)\n            }\n\n\
        \        Returns:\n            Response: Success message\n\n        Status\
        \ codes:\n            201: Shop added to favorites\n            200: Shop\
        \ already in favorites\n            400: Missing shop_id parameter\n     \
        \       403: User is not a customer or profile not found\n            404:\
        \ Shop not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Add a shop to favorites
      tags:
        - customersapp
  /api/temp/favorites/add_specialist/:
    post:
      description:
        "Add a specialist to favorites\n\n        Adds the specified specialist\
        \ to the customer's favorites.\n        If the specialist is already in favorites,\
        \ returns success without duplication.\n\n        Request body:\n        \
        \    {\n                \"specialist_id\": \"uuid\" (required)\n         \
        \   }\n\n        Returns:\n            Response: Success message\n\n     \
        \   Status codes:\n            201: Specialist added to favorites\n      \
        \      200: Specialist already in favorites\n            400: Missing specialist_id\
        \ parameter\n            403: User is not a customer or profile not found\n\
        \            404: Specialist not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Add a specialist to favorites
      tags:
        - customersapp
  /api/temp/favorites/remove_service/:
    post:
      description:
        "Remove a service from favorites\n\n        Removes the specified\
        \ service from the customer's favorites.\n\n        Request body:\n      \
        \      {\n                \"service_id\": \"uuid\" (required)\n          \
        \  }\n\n        Returns:\n            Response: Success message\n\n      \
        \  Status codes:\n            200: Service removed from favorites\n      \
        \      400: Missing service_id parameter\n            403: User is not a customer\
        \ or profile not found\n            404: Service not found in favorites"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Remove a service from favorites
      tags:
        - customersapp
  /api/temp/favorites/remove_shop/:
    post:
      description:
        "Remove a shop from favorites\n\n        Removes the specified\
        \ shop from the customer's favorites.\n\n        Request body:\n         \
        \   {\n                \"shop_id\": \"uuid\" (required)\n            }\n\n\
        \        Returns:\n            Response: Success message\n\n        Status\
        \ codes:\n            200: Shop removed from favorites\n            400: Missing\
        \ shop_id parameter\n            403: User is not a customer or profile not\
        \ found\n            404: Shop not found in favorites"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Remove a shop from favorites
      tags:
        - customersapp
  /api/temp/favorites/remove_specialist/:
    post:
      description:
        "Remove a specialist from favorites\n\n        Removes the specified\
        \ specialist from the customer's favorites.\n\n        Request body:\n   \
        \         {\n                \"specialist_id\": \"uuid\" (required)\n    \
        \        }\n\n        Returns:\n            Response: Success message\n\n\
        \        Status codes:\n            200: Specialist removed from favorites\n\
        \            400: Missing specialist_id parameter\n            403: User is\
        \ not a customer or profile not found\n            404: Specialist not found\
        \ in favorites"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Remove a specialist from favorites
      tags:
        - customersapp
  /api/temp/favorites/services/:
    get:
      description:
        "Get customer's favorite services\n\n        Returns a list of\
        \ services that the customer has marked as favorites.\n\n        Returns:\n\
        \            Response: List of favorite services\n\n        Status codes:\n\
        \            200: Services retrieved successfully\n            403: User is\
        \ not a customer or profile not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get customer's favorite services
      tags:
        - customersapp
  /api/temp/favorites/shops/:
    get:
      description:
        "Get customer's favorite shops\n\n        Returns a list of shops\
        \ that the customer has marked as favorites.\n\n        Returns:\n       \
        \     Response: List of favorite shops\n\n        Status codes:\n        \
        \    200: Shops retrieved successfully\n            403: User is not a customer\
        \ or profile not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get customer's favorite shops
      tags:
        - customersapp
  /api/temp/favorites/specialists/:
    get:
      description:
        "Get customer's favorite specialists\n\n        Returns a list\
        \ of specialists that the customer has marked as favorites.\n\n        Returns:\n\
        \            Response: List of favorite specialists\n\n        Status codes:\n\
        \            200: Specialists retrieved successfully\n            403: User\
        \ is not a customer or profile not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get customer's favorite specialists
      tags:
        - customersapp
  /api/temp/featureusage/:
    get:
      description:
        "ViewSet for feature usage monitoring\n\n    Provides read-only\
        \ access to feature usage data, allowing companies\n    to monitor their usage\
        \ of metered features within their subscription.\n\n    Endpoints:\n    -\
        \ GET /api/feature-usage/ - List feature usage records\n    - GET /api/feature-usage/{id}/\
        \ - Get feature usage details\n\n    Permissions:\n    - Users with CanViewSubscriptions\
        \ permission\n\n    Query parameters:\n    - subscription: Filter by subscription\
        \ ID\n    - company: Filter by company ID"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for feature usage monitoring
      tags:
        - subscriptionapp
  /api/temp/featureusage/(?P<pk>[/.]+)/:
    get:
      description:
        "ViewSet for feature usage monitoring\n\n    Provides read-only\
        \ access to feature usage data, allowing companies\n    to monitor their usage\
        \ of metered features within their subscription.\n\n    Endpoints:\n    -\
        \ GET /api/feature-usage/ - List feature usage records\n    - GET /api/feature-usage/{id}/\
        \ - Get feature usage details\n\n    Permissions:\n    - Users with CanViewSubscriptions\
        \ permission\n\n    Query parameters:\n    - subscription: Filter by subscription\
        \ ID\n    - company: Filter by company ID"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for feature usage monitoring
      tags:
        - subscriptionapp
  /api/temp/follow/:
    get:
      description:
        "API endpoint for managing shop follows.\n\n    Allows customers\
        \ to follow/unfollow shops and manage their following settings.\n    Customers\
        \ can only view and modify their own follows.\n\n    Endpoints:\n    - GET\
        \ /api/follows/ - List all shops the current user is following\n    - POST\
        \ /api/follows/ - Follow a shop\n    - GET /api/follows/{id}/ - Get details\
        \ of a specific follow relationship\n    - PUT/PATCH /api/follows/{id}/ -\
        \ Update follow notification settings\n    - DELETE /api/follows/{id}/ - Unfollow\
        \ a shop\n    - GET /api/follows/following/ - List all shops the user is following\n\
        \    - POST /api/follows/toggle/ - Toggle follow status for a shop\n    -\
        \ GET /api/follows/status/ - Check if user is following a specific shop\n\n\
        \    Permissions:\n    - All actions require authentication\n    - Retrieve/update/delete\
        \ operations require follow ownership"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop follows.
      tags:
        - followapp
  /api/temp/follow/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing shop follows.\n\n    Allows customers\
        \ to follow/unfollow shops and manage their following settings.\n    Customers\
        \ can only view and modify their own follows.\n\n    Endpoints:\n    - GET\
        \ /api/follows/ - List all shops the current user is following\n    - POST\
        \ /api/follows/ - Follow a shop\n    - GET /api/follows/{id}/ - Get details\
        \ of a specific follow relationship\n    - PUT/PATCH /api/follows/{id}/ -\
        \ Update follow notification settings\n    - DELETE /api/follows/{id}/ - Unfollow\
        \ a shop\n    - GET /api/follows/following/ - List all shops the user is following\n\
        \    - POST /api/follows/toggle/ - Toggle follow status for a shop\n    -\
        \ GET /api/follows/status/ - Check if user is following a specific shop\n\n\
        \    Permissions:\n    - All actions require authentication\n    - Retrieve/update/delete\
        \ operations require follow ownership"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop follows.
      tags:
        - followapp
  /api/temp/follow/following/:
    get:
      description:
        "Get all shops the current user is following\n\n        Returns\
        \ a paginated list of all the shops the authenticated user is following.\n\
        \n        Returns:\n            Response: List of follow relationships"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get all shops the current user is following
      tags:
        - followapp
  /api/temp/follow/status/:
    get:
      description:
        "Check if user is following a specific shop\n\n        Returns\
        \ whether the current user is following the specified shop\n        and the\
        \ total follower count for that shop.\n\n        Query parameters:\n     \
        \       shop_id: UUID of the shop (required)\n\n        Returns:\n       \
        \     Response: Follow status and follower count\n                {\n    \
        \                \"is_following\": boolean,\n                    \"follower_count\"\
        : integer\n                }\n\n        Status codes:\n            200: Status\
        \ retrieved successfully\n            400: Missing shop_id\n            404:\
        \ Shop not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Check if user is following a specific shop
      tags:
        - followapp
  /api/temp/follow/toggle/:
    post:
      description:
        "Toggle follow status for a shop\n\n        If the user is already\
        \ following the shop, they will unfollow it.\n        If the user is not following\
        \ the shop, they will follow it.\n\n        Request body:\n            {\n\
        \                \"shop_id\": \"uuid\" (required)\n            }\n\n     \
        \   Returns:\n            Response: Updated follow status\n              \
        \  {\n                    \"is_following\": boolean,\n                   \
        \ \"shop_id\": \"uuid\",\n                    \"follow_id\": \"uuid\" (only\
        \ if is_following is true)\n                }\n\n        Status codes:\n \
        \           200: Status toggled successfully\n            400: Missing shop_id\
        \ or city mismatch\n            404: Shop not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Toggle follow status for a shop
      tags:
        - followapp
  /api/temp/follower/:
    get:
      description:
        "API endpoint for managing shop followers.\n    \n\nAPI endpoints\
        \ for managing shop followers"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop followers.
      tags:
        - shopapp
  /api/temp/follower/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing shop followers.\n    \n\nAPI endpoints\
        \ for managing shop followers"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop followers.
      tags:
        - shopapp
  /api/temp/location/:
    get:
      description:
        "API endpoint for managing locations\n\n    Provides CRUD operations\
        \ for detailed location records, which can be\n    associated with shops,\
        \ companies, customer addresses, etc.\n\n    Endpoints:\n    - GET /api/locations/\
        \ - List all locations\n    - POST /api/locations/ - Create a new location\n\
        \    - GET /api/locations/{id}/ - Get location details\n    - PUT/PATCH /api/locations/{id}/\
        \ - Update a location\n    - DELETE /api/locations/{id}/ - Delete a location\n\
        \n    Permissions:\n    - Authentication required for all operations\n\n \
        \   Filtering:\n    - Multiple filters available via LocationFilter (city,\
        \ country, area, etc.)\n\n    Search fields:\n    - address_line1: Street\
        \ address\n    - postal_code: ZIP/Postal code\n    - place_name: Named place\
        \ or building\n\n    Ordering:\n    - created_at: Creation date (default,\
        \ descending)\n    - updated_at: Last updated date\n\n    Query parameters:\n\
        \    - format: Set to 'geojson' to receive response in GeoJSON format"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing locations
      tags:
        - geoapp
  /api/temp/location/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing locations\n\n    Provides CRUD operations\
        \ for detailed location records, which can be\n    associated with shops,\
        \ companies, customer addresses, etc.\n\n    Endpoints:\n    - GET /api/locations/\
        \ - List all locations\n    - POST /api/locations/ - Create a new location\n\
        \    - GET /api/locations/{id}/ - Get location details\n    - PUT/PATCH /api/locations/{id}/\
        \ - Update a location\n    - DELETE /api/locations/{id}/ - Delete a location\n\
        \n    Permissions:\n    - Authentication required for all operations\n\n \
        \   Filtering:\n    - Multiple filters available via LocationFilter (city,\
        \ country, area, etc.)\n\n    Search fields:\n    - address_line1: Street\
        \ address\n    - postal_code: ZIP/Postal code\n    - place_name: Named place\
        \ or building\n\n    Ordering:\n    - created_at: Creation date (default,\
        \ descending)\n    - updated_at: Last updated date\n\n    Query parameters:\n\
        \    - format: Set to 'geojson' to receive response in GeoJSON format"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing locations
      tags:
        - geoapp
  /api/temp/maintenanceschedule/:
    get:
      description: API endpoint for managing maintenance schedules.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing maintenance schedules.
      tags:
        - queueMeAdminApp
  /api/temp/maintenanceschedule/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing maintenance schedules.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing maintenance schedules.
      tags:
        - queueMeAdminApp
  /api/temp/maintenanceschedule/(?P<pk>[/.]+)/cancel/:
    post:
      description: Cancel a scheduled maintenance
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Cancel a scheduled maintenance
      tags:
        - queueMeAdminApp
  /api/temp/maintenanceschedule/upcoming/:
    get:
      description: Get all upcoming maintenance events
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get all upcoming maintenance events
      tags:
        - queueMeAdminApp
  /api/temp/message/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for chat messages (limited functionality)\n\n   \
        \ Provides read-only access to individual messages. Messages are automatically\n\
        \    filtered based on the user's role (customer sees messages in their conversations,\n\
        \    employees see messages for their shop).\n\n    Endpoints:\n    - GET\
        \ /api/messages/{id}/ - Get details for a specific message\n\n    Permissions:\n\
        \    - User must have access to the conversation containing the message"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for chat messages (limited functionality)
      tags:
        - chatapp
  /api/temp/multiservicebooking/:
    get:
      description:
        "API endpoint for managing multi-service bookings.\n\n    Provides\
        \ operations for:\n    - Creating multi-service bookings\n    - Retrieving\
        \ multi-service bookings\n    - Listing multi-service bookings\n    \n\nAPI\
        \ endpoints for managing bookings with multiple services"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing multi-service bookings.
      tags:
        - bookingapp
  /api/temp/multiservicebooking/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing multi-service bookings.\n\n    Provides\
        \ operations for:\n    - Creating multi-service bookings\n    - Retrieving\
        \ multi-service bookings\n    - Listing multi-service bookings\n    \n\nAPI\
        \ endpoints for managing bookings with multiple services"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing multi-service bookings.
      tags:
        - bookingapp
  /api/temp/multiservicebooking/suggest_sequence/:
    post:
      description: Suggest optimal sequence for multiple services
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Suggest optimal sequence for multiple services
      tags:
        - bookingapp
  /api/temp/notification/:
    get:
      description: Get all notifications for the authenticated user
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get all notifications for the authenticated user
      tags:
        - notificationsapp
  /api/temp/notification/(?P<pk>[/.]+)/:
    get:
      description: Get a specific notification
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get a specific notification
      tags:
        - notificationsapp
  /api/temp/notification/(?P<pk>[/.]+)/mark_read/:
    post:
      description: Mark a notification as read
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Mark a notification as read
      tags:
        - notificationsapp
  /api/temp/notification/count_unread/:
    get:
      description: Get count of unread notifications
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get count of unread notifications
      tags:
        - notificationsapp
  /api/temp/notification/mark_all_read/:
    post:
      description: Mark all notifications as read
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Mark all notifications as read
      tags:
        - notificationsapp
  /api/temp/notification/mark_multiple_read/:
    post:
      description: Mark multiple notifications as read based on provided IDs
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Mark multiple notifications as read based on provided IDs
      tags:
        - notificationsapp
  /api/temp/notification/unread/:
    get:
      description: Get unread notifications for the authenticated user
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get unread notifications for the authenticated user
      tags:
        - notificationsapp
  /api/temp/package/:
    get:
      description: Override to add documentation
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Override to add documentation
      tags:
        - packageapp
  /api/temp/package/(?P<pk>[/.]+)/:
    get:
      description: Override to add documentation
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Override to add documentation
      tags:
        - packageapp
  /api/temp/package/(?P<pk>[/.]+)/availability/:
    get:
      description:
        "Get available time slots for a package on a specific date.\n\n\
        \        Query Parameters:\n            date: The date to check availability\
        \ (YYYY-MM-DD)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get available time slots for a package on a specific date.
      tags:
        - packageapp
  /api/temp/package/popular/:
    get:
      description:
        "Get most popular packages based on booking frequency and ratings.\n\
        \n        Query Parameters:\n            shop_id: Optional shop ID to filter\
        \ by\n            category_id: Optional category ID to filter by\n       \
        \     limit: Maximum number of packages to return (default: 10)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get most popular packages based on booking frequency and ratings.
      tags:
        - packageapp
  /api/temp/package/recommended/:
    get:
      description:
        "Get personalized package recommendations for the current user.\n\
        \n        Uses customer preferences, booking history, and service interests\n\
        \        to recommend relevant packages."
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get personalized package recommendations for the current user.
      tags:
        - packageapp
  /api/temp/packagefaq/:
    get:
      description:
        "API endpoint for managing package FAQs.\n    \n\nAPI endpoints\
        \ for managing frequently asked questions for packages"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing package FAQs.
      tags:
        - packageapp
  /api/temp/packagefaq/(?P<pk>[/.]+)/:
    get:
      description: Override to add documentation
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Override to add documentation
      tags:
        - packageapp
  /api/temp/payment/(?P<pk>[/.]+)/check_payment_status/:
    get:
      description: Check the status of a payment transaction
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Check the status of a payment transaction
      tags:
        - payment
  /api/temp/payment/add_payment_method/:
    post:
      description: Add a new payment method
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Add a new payment method
      tags:
        - payment
  /api/temp/payment/create_payment/:
    post:
      description: Create a new payment transaction
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Create a new payment transaction
      tags:
        - payment
  /api/temp/payment/create_refund/:
    post:
      description: Create a refund for a transaction
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Create a refund for a transaction
      tags:
        - payment
  /api/temp/payment/moyasar_public_key/:
    get:
      description: Get the Moyasar public key for a transaction type
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get the Moyasar public key for a transaction type
      tags:
        - payment
  /api/temp/payment/payment_methods/:
    get:
      description: Get user's saved payment methods
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get user's saved payment methods
      tags:
        - payment
  /api/temp/payment/recommend_payment_method/:
    get:
      description: Get recommended payment method for user
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get recommended payment method for user
      tags:
        - payment
  /api/temp/payment/set_default_payment_method/:
    post:
      description: Set payment method as default
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Set payment method as default
      tags:
        - payment
  /api/temp/payment/transactions/:
    get:
      description: Get user's transactions
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get user's transactions
      tags:
        - payment
  /api/temp/paymentmethod/:
    get:
      description:
        "API endpoint for managing saved payment methods\n\n    Allows\
        \ customers to manage their saved payment methods for future bookings.\n \
        \   Integrates with Moyasar payment gateway for tokenization and secure storage.\n\
        \n    Endpoints:\n    - GET /api/payment-methods/ - List saved payment methods\n\
        \    - POST /api/payment-methods/ - Add a new payment method\n    - GET /api/payment-methods/{id}/\
        \ - Get a specific payment method\n    - PUT/PATCH /api/payment-methods/{id}/\
        \ - Update a payment method\n    - DELETE /api/payment-methods/{id}/ - Delete\
        \ a payment method\n    - POST /api/payment-methods/{id}/set_default/ - Set\
        \ a payment method as default\n\n    Permissions:\n    - User must be authenticated\
        \ as a customer\n    - Customers can only access their own payment methods"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing saved payment methods
      tags:
        - customersapp
  /api/temp/paymentmethod/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing saved payment methods\n\n    Allows\
        \ customers to manage their saved payment methods for future bookings.\n \
        \   Integrates with Moyasar payment gateway for tokenization and secure storage.\n\
        \n    Endpoints:\n    - GET /api/payment-methods/ - List saved payment methods\n\
        \    - POST /api/payment-methods/ - Add a new payment method\n    - GET /api/payment-methods/{id}/\
        \ - Get a specific payment method\n    - PUT/PATCH /api/payment-methods/{id}/\
        \ - Update a payment method\n    - DELETE /api/payment-methods/{id}/ - Delete\
        \ a payment method\n    - POST /api/payment-methods/{id}/set_default/ - Set\
        \ a payment method as default\n\n    Permissions:\n    - User must be authenticated\
        \ as a customer\n    - Customers can only access their own payment methods"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing saved payment methods
      tags:
        - customersapp
  /api/temp/paymentmethod/(?P<pk>[/.]+)/set_default/:
    post:
      description:
        "Set a payment method as default\n\n        Marks the specified\
        \ payment method as the default for future payments\n        and removes the\
        \ default status from all other payment methods.\n\n        Returns:\n   \
        \         Response: Success message\n\n        Status codes:\n           \
        \ 200: Payment method set as default\n            400: Error setting as default"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Set a payment method as default
      tags:
        - customersapp
  /api/temp/permission/:
    get:
      description:
        "API endpoint for system permissions\n\n    Permissions are read-only\
        \ as they are system-defined capabilities that users can be granted.\n   \
        \ Each permission represents a specific action on a specific resource.\n\n\
        \    Permissions:\n    - Requires authentication\n    - User must have 'view'\
        \ permission on the 'roles' resource\n\n    Filters:\n    - resource: Filter\
        \ by resource name\n    - action: Filter by action type (view, manage, etc.)\n\
        \n    Search:\n    - code_name: Permission code name\n    - description: Permission\
        \ description\n\n    Ordering:\n    - resource: Resource name\n    - action:\
        \ Action type\n    - code_name: Permission code name"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for system permissions
      tags:
        - rolesapp
  /api/temp/permission/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for system permissions\n\n    Permissions are read-only\
        \ as they are system-defined capabilities that users can be granted.\n   \
        \ Each permission represents a specific action on a specific resource.\n\n\
        \    Permissions:\n    - Requires authentication\n    - User must have 'view'\
        \ permission on the 'roles' resource\n\n    Filters:\n    - resource: Filter\
        \ by resource name\n    - action: Filter by action type (view, manage, etc.)\n\
        \n    Search:\n    - code_name: Permission code name\n    - description: Permission\
        \ description\n\n    Ordering:\n    - resource: Resource name\n    - action:\
        \ Action type\n    - code_name: Permission code name"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for system permissions
      tags:
        - rolesapp
  /api/temp/permission/grouped/:
    get:
      description:
        "Get permissions grouped by resource\n\n        Returns a list\
        \ of resources, each with its associated permissions.\n        This endpoint\
        \ is useful for UI representations of permissions where\n        they are\
        \ grouped by resource for easier management.\n\n        Returns:\n       \
        \     Response: JSON array of resource objects, each containing a list of\
        \ permissions"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get permissions grouped by resource
      tags:
        - rolesapp
  /api/temp/plan/:
    get:
      description:
        "ViewSet for subscription plans\n\n    Manages the available subscription\
        \ plans in the system, including pricing,\n    features, and limitations for\
        \ different service tiers.\n\n    Endpoints:\n    - GET /api/subscription/plans/\
        \ - List all subscription plans\n    - POST /api/subscription/plans/ - Create\
        \ a new plan (admin only)\n    - GET /api/subscription/plans/{id}/ - Get plan\
        \ details\n    - PUT/PATCH /api/subscription/plans/{id}/ - Update a plan (admin\
        \ only)\n    - DELETE /api/subscription/plans/{id}/ - Delete a plan (admin\
        \ only)\n    - GET /api/subscription/plans/{id}/features/ - Get features for\
        \ a plan\n    - GET /api/subscription/plans/compare/ - Compare multiple plans\n\
        \n    Permissions:\n    - View operations: Any authenticated user\n    - Modify\
        \ operations: Admin users only with CanManageSubscriptions permission"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for subscription plans
      tags:
        - subscriptionapp
  /api/temp/plan/(?P<pk>[/.]+)/:
    get:
      description:
        "ViewSet for subscription plans\n\n    Manages the available subscription\
        \ plans in the system, including pricing,\n    features, and limitations for\
        \ different service tiers.\n\n    Endpoints:\n    - GET /api/subscription/plans/\
        \ - List all subscription plans\n    - POST /api/subscription/plans/ - Create\
        \ a new plan (admin only)\n    - GET /api/subscription/plans/{id}/ - Get plan\
        \ details\n    - PUT/PATCH /api/subscription/plans/{id}/ - Update a plan (admin\
        \ only)\n    - DELETE /api/subscription/plans/{id}/ - Delete a plan (admin\
        \ only)\n    - GET /api/subscription/plans/{id}/features/ - Get features for\
        \ a plan\n    - GET /api/subscription/plans/compare/ - Compare multiple plans\n\
        \n    Permissions:\n    - View operations: Any authenticated user\n    - Modify\
        \ operations: Admin users only with CanManageSubscriptions permission"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for subscription plans
      tags:
        - subscriptionapp
  /api/temp/plan/(?P<pk>[/.]+)/features/:
    get:
      description:
        "Get features for a specific plan\n\n        Returns all features\
        \ included in the specified plan,\n        ordered by category and tier.\n\
        \n        Returns:\n            Response: List of plan features"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get features for a specific plan
      tags:
        - subscriptionapp
  /api/temp/plan/compare/:
    get:
      description:
        "Compare multiple plans side by side\n\n        Provides a detailed\
        \ comparison of selected plans,\n        showing differences in features and\
        \ limitations.\n\n        Query parameters:\n            plan_ids: List of\
        \ plan IDs to compare\n\n        Returns:\n            Response: Comparison\
        \ data for the selected plans\n                {\n                    \"plans\"\
        : [Plan objects],\n                    \"features\": {\n                 \
        \       \"category1\": [\n                            {\n                \
        \                \"name\": \"Feature name\",\n                           \
        \     \"values\": {\n                                    \"plan1_id\": \"\
        Value for plan 1\",\n                                    \"plan2_id\": \"\
        Value for plan 2\",\n                                    ...\n           \
        \                     }\n                            },\n                \
        \            ...\n                        ],\n                        ...\n\
        \                    }\n                }\n\n        Status codes:\n     \
        \       200: Comparison successful\n            400: No plan IDs provided"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Compare multiple plans side by side
      tags:
        - subscriptionapp
  /api/temp/platformreview/:
    get:
      description: "ViewSet for platform reviews by shops


        API endpoints for managing platform reviews by shops"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for platform reviews by shops
      tags:
        - reviewapp
  /api/temp/platformreview/(?P<pk>[/.]+)/:
    get:
      description: "ViewSet for platform reviews by shops


        API endpoints for managing platform reviews by shops"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for platform reviews by shops
      tags:
        - reviewapp
  /api/temp/platformreview/(?P<pk>[/.]+)/moderate/:
    post:
      description: Moderate a platform review (approve/reject)
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Moderate a platform review (approve/reject)
      tags:
        - reviewapp
  /api/temp/platformstatus/:
    get:
      description: API endpoint for managing platform component status.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing platform component status.
      tags:
        - queueMeAdminApp
  /api/temp/platformstatus/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing platform component status.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing platform component status.
      tags:
        - queueMeAdminApp
  /api/temp/platformstatus/overall/:
    get:
      description: Get overall platform status summary
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get overall platform status summary
      tags:
        - queueMeAdminApp
  /api/temp/platformstatus/refresh/:
    post:
      description: Trigger a refresh of component status checks
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Trigger a refresh of component status checks
      tags:
        - queueMeAdminApp
  /api/temp/promotionalcampaign/:
    get:
      description:
        "API endpoint for promotional campaigns\n\n    Allows shop managers\
        \ and administrators to create, retrieve, update,\n    and delete promotional\
        \ campaigns, which can generate coupons and other\n    promotional content\
        \ automatically.\n\n    Endpoints:\n    - GET /api/campaigns/ - List all campaigns\
        \ (filtered by user permissions)\n    - POST /api/campaigns/ - Create a new\
        \ campaign\n    - GET /api/campaigns/{id}/ - Get a specific campaign\n   \
        \ - PUT/PATCH /api/campaigns/{id}/ - Update a campaign\n    - DELETE /api/campaigns/{id}/\
        \ - Delete a campaign\n    - GET /api/campaigns/active/ - Get active campaigns\
        \ for a shop\n    - POST /api/campaigns/create_referral/ - Create or update\
        \ a referral campaign\n\n    Permissions:\n    - Authentication required for\
        \ all actions\n    - Shop managers can manage campaigns for their shops\n\
        \    - Admin users can manage all campaigns"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for promotional campaigns
      tags:
        - discountapp
  /api/temp/promotionalcampaign/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for promotional campaigns\n\n    Allows shop managers\
        \ and administrators to create, retrieve, update,\n    and delete promotional\
        \ campaigns, which can generate coupons and other\n    promotional content\
        \ automatically.\n\n    Endpoints:\n    - GET /api/campaigns/ - List all campaigns\
        \ (filtered by user permissions)\n    - POST /api/campaigns/ - Create a new\
        \ campaign\n    - GET /api/campaigns/{id}/ - Get a specific campaign\n   \
        \ - PUT/PATCH /api/campaigns/{id}/ - Update a campaign\n    - DELETE /api/campaigns/{id}/\
        \ - Delete a campaign\n    - GET /api/campaigns/active/ - Get active campaigns\
        \ for a shop\n    - POST /api/campaigns/create_referral/ - Create or update\
        \ a referral campaign\n\n    Permissions:\n    - Authentication required for\
        \ all actions\n    - Shop managers can manage campaigns for their shops\n\
        \    - Admin users can manage all campaigns"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for promotional campaigns
      tags:
        - discountapp
  /api/temp/promotionalcampaign/active/:
    get:
      description:
        "Get active campaigns\n\n        Returns currently active promotional\
        \ campaigns for a specified shop.\n\n        Query parameters:\n         \
        \   shop_id: ID of the shop (required)\n\n        Returns:\n            Response:\
        \ List of active campaigns\n\n        Status codes:\n            200: Campaigns\
        \ retrieved successfully\n            400: Missing shop_id parameter\n   \
        \         404: Shop not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get active campaigns
      tags:
        - discountapp
  /api/temp/promotionalcampaign/create_referral/:
    post:
      description:
        "Create or update referral campaign for a shop\n\n        Creates\
        \ or updates a referral promotional campaign for a shop,\n        which generates\
        \ referral coupons for customers to share.\n\n        Request body:\n    \
        \        {\n                \"shop_id\": \"uuid\" (required),\n          \
        \      \"discount_value\": float (optional, default: 10),\n              \
        \  \"days_valid\": integer (optional, default: 30)\n            }\n\n    \
        \    Returns:\n            Response: Created campaign and sample coupon\n\
        \                {\n                    \"campaign\": Campaign object,\n \
        \                   \"sample_coupon\": Coupon object\n                }\n\n\
        \        Status codes:\n            201: Campaign created successfully\n \
        \           400: Invalid request data\n            403: User not authorized\
        \ to manage campaigns for this shop\n            404: Shop not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Create or update referral campaign for a shop
      tags:
        - discountapp
  /api/temp/queue/:
    get:
      description: Override to add documentation
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Override to add documentation
      tags:
        - queueapp
  /api/temp/queue/(?P<pk>[/.]+)/:
    get:
      description: Override to add documentation
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Override to add documentation
      tags:
        - queueapp
  /api/temp/queueticket/:
    get:
      description: Override to add documentation
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Override to add documentation
      tags:
        - queueapp
  /api/temp/queueticket/(?P<pk>[/.]+)/:
    get:
      description: Override to add documentation
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Override to add documentation
      tags:
        - queueapp
  /api/temp/reel/:
    get:
      description:
        "API endpoint for shop reels management.\n\n    Allows shop owners\
        \ and managers to create, view, edit, and remove reels for their shop.\n \
        \   Reels can be in draft, published, or archived state. Video processing\
        \ happens automatically.\n\n    Endpoints:\n    - GET /api/shops/{shop_id}/reels/\
        \ - List reels for a shop\n    - POST /api/shops/{shop_id}/reels/ - Create\
        \ a new reel\n    - GET /api/shops/{shop_id}/reels/{id}/ - Get reel details\n\
        \    - PUT/PATCH /api/shops/{shop_id}/reels/{id}/ - Update a reel\n    - DELETE\
        \ /api/shops/{shop_id}/reels/{id}/ - Delete a reel\n    - POST /api/shops/{shop_id}/reels/{id}/publish/\
        \ - Publish a draft reel\n    - POST /api/shops/{shop_id}/reels/{id}/archive/\
        \ - Archive a published reel\n\n    Permissions:\n    - Authentication required\
        \ for all actions\n    - Special permission required for create/update/delete\
        \ actions\n\n    Filtering:\n    - status: Filter by reel status (draft, published,\
        \ archived)\n    - service: Filter by linked service\n    - package: Filter\
        \ by linked package\n    - created_at: Filter by creation date\n\n    Search\
        \ fields:\n    - title: Reel title\n    - caption: Reel caption\n\n    Ordering:\n\
        \    - created_at: Creation date\n    - view_count: Number of views"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for shop reels management.
      tags:
        - reelsapp
  /api/temp/reel/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for shop reels management.\n\n    Allows shop owners\
        \ and managers to create, view, edit, and remove reels for their shop.\n \
        \   Reels can be in draft, published, or archived state. Video processing\
        \ happens automatically.\n\n    Endpoints:\n    - GET /api/shops/{shop_id}/reels/\
        \ - List reels for a shop\n    - POST /api/shops/{shop_id}/reels/ - Create\
        \ a new reel\n    - GET /api/shops/{shop_id}/reels/{id}/ - Get reel details\n\
        \    - PUT/PATCH /api/shops/{shop_id}/reels/{id}/ - Update a reel\n    - DELETE\
        \ /api/shops/{shop_id}/reels/{id}/ - Delete a reel\n    - POST /api/shops/{shop_id}/reels/{id}/publish/\
        \ - Publish a draft reel\n    - POST /api/shops/{shop_id}/reels/{id}/archive/\
        \ - Archive a published reel\n\n    Permissions:\n    - Authentication required\
        \ for all actions\n    - Special permission required for create/update/delete\
        \ actions\n\n    Filtering:\n    - status: Filter by reel status (draft, published,\
        \ archived)\n    - service: Filter by linked service\n    - package: Filter\
        \ by linked package\n    - created_at: Filter by creation date\n\n    Search\
        \ fields:\n    - title: Reel title\n    - caption: Reel caption\n\n    Ordering:\n\
        \    - created_at: Creation date\n    - view_count: Number of views"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for shop reels management.
      tags:
        - reelsapp
  /api/temp/reel/(?P<pk>[/.]+)/archive/:
    post:
      description:
        "Archive a published reel\n\n        Changes a reel's status from\
        \ 'published' to 'archived', hiding it\n        from customers without deleting\
        \ it.\n\n        Returns:\n            Response: Updated reel data\n\n   \
        \     Status codes:\n            200: Reel archived successfully\n       \
        \     400: Reel can't be archived (not published)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Archive a published reel
      tags:
        - reelsapp
  /api/temp/reel/(?P<pk>[/.]+)/publish/:
    post:
      description:
        "Publish a draft reel\n\n        Changes a reel's status from 'draft'\
        \ to 'published', making it visible\n        to customers. Requires at least\
        \ one service or package to be linked.\n\n        Returns:\n            Response:\
        \ Updated reel data\n\n        Status codes:\n            200: Reel published\
        \ successfully\n            400: Reel can't be published (not draft or missing\
        \ linked services/packages)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Publish a draft reel
      tags:
        - reelsapp
  /api/temp/reportexecution/:
    get:
      description: Report execution API endpoints
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Report execution API endpoints
      tags:
        - reportanalyticsapp
  /api/temp/reportexecution/(?P<pk>[/.]+)/:
    get:
      description: Report execution API endpoints
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Report execution API endpoints
      tags:
        - reportanalyticsapp
  /api/temp/reportexecution/(?P<pk>[/.]+)/download/:
    get:
      description: Get download URL for report
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get download URL for report
      tags:
        - reportanalyticsapp
  /api/temp/review/:
    get:
      description: Return reviews based on the review_type parameter
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Return reviews based on the review_type parameter
      tags:
        - reviewapp
  /api/temp/reviewmetric/:
    get:
      description: "ViewSet for review metrics


        API endpoints for retrieving review metrics and statistics"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for review metrics
      tags:
        - reviewapp
  /api/temp/reviewmetric/(?P<pk>[/.]+)/:
    get:
      description: "ViewSet for review metrics


        API endpoints for retrieving review metrics and statistics"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for review metrics
      tags:
        - reviewapp
  /api/temp/reviewmetric/entity/:
    get:
      description: Get metrics for a specific entity
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get metrics for a specific entity
      tags:
        - reviewapp
  /api/temp/reviewmetric/recalculate/:
    post:
      description: Recalculate metrics for an entity
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Recalculate metrics for an entity
      tags:
        - reviewapp
  /api/temp/reviewreport/:
    get:
      description: "ViewSet for managing review reports


        API endpoints for managing reports of reviews"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for managing review reports
      tags:
        - reviewapp
  /api/temp/reviewreport/(?P<pk>[/.]+)/:
    get:
      description: "ViewSet for managing review reports


        API endpoints for managing reports of reviews"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for managing review reports
      tags:
        - reviewapp
  /api/temp/reviewreport/(?P<pk>[/.]+)/resolve/:
    post:
      description: Resolve a report
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Resolve a report
      tags:
        - reviewapp
  /api/temp/role/:
    get:
      description:
        "API endpoint for roles\n\n    Roles define sets of permissions\
        \ that can be assigned to users. Each role can\n    be associated with a specific\
        \ entity (like a shop or company) to provide\n    context-specific permissions.\n\
        \n    Permissions:\n    - Requires authentication\n    - 'view' permission\
        \ for listing and retrieving\n    - 'manage' permission for creating, updating\
        \ and deleting\n\n    Filters:\n    - role_type: Filter by role type (e.g.,\
        \ shop, company)\n    - is_active: Filter by active status\n    - is_system:\
        \ Filter by system role status\n\n    Search:\n    - name: Role name\n   \
        \ - description: Role description\n\n    Ordering:\n    - name: Role name\n\
        \    - weight: Role priority weight\n    - created_at: Role creation date"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for roles
      tags:
        - rolesapp
  /api/temp/role/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for roles\n\n    Roles define sets of permissions\
        \ that can be assigned to users. Each role can\n    be associated with a specific\
        \ entity (like a shop or company) to provide\n    context-specific permissions.\n\
        \n    Permissions:\n    - Requires authentication\n    - 'view' permission\
        \ for listing and retrieving\n    - 'manage' permission for creating, updating\
        \ and deleting\n\n    Filters:\n    - role_type: Filter by role type (e.g.,\
        \ shop, company)\n    - is_active: Filter by active status\n    - is_system:\
        \ Filter by system role status\n\n    Search:\n    - name: Role name\n   \
        \ - description: Role description\n\n    Ordering:\n    - name: Role name\n\
        \    - weight: Role priority weight\n    - created_at: Role creation date"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for roles
      tags:
        - rolesapp
  /api/temp/role/(?P<pk>[/.]+)/add_users/:
    post:
      description:
        "Add multiple users to a role\n\n        Request body:\n      \
        \      {\n                \"user_ids\": [\"uuid1\", \"uuid2\", ...] (required)\n\
        \            }\n\n        Returns:\n            Response: Success message\
        \ with the number of users added"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Add multiple users to a role
      tags:
        - rolesapp
  /api/temp/role/(?P<pk>[/.]+)/clone/:
    post:
      description:
        "Clone a role with its permissions\n\n        Creates a new role\
        \ with the same permissions as the source role,\n        but with a new name\
        \ and optionally a new description.\n\n        Request body:\n           \
        \ {\n                \"name\": \"New Role Name\", (required)\n           \
        \     \"description\": \"New role description\" (optional)\n            }\n\
        \n        Returns:\n            Response: The newly created role"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Clone a role with its permissions
      tags:
        - rolesapp
  /api/temp/role/(?P<pk>[/.]+)/transfer_users/:
    post:
      description:
        "Transfer users from this role to another role\n\n        Moves\
        \ all users from the current role to another role.\n\n        Request body:\n\
        \            {\n                \"to_role_id\": \"uuid\" (required)\n    \
        \        }\n\n        Returns:\n            Response: Success message with\
        \ the number of users transferred"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Transfer users from this role to another role
      tags:
        - rolesapp
  /api/temp/rolepermissionlog/:
    get:
      description:
        "API endpoint for role permission audit logs\n\n    These are read-only\
        \ records of changes to role permissions,\n    providing an audit trail of\
        \ who changed what permissions and when.\n\n    Permissions:\n    - Requires\
        \ authentication\n    - User must have 'view' permission on the 'roles' resource\n\
        \n    Filters:\n    - role: Filter by role ID\n    - permission: Filter by\
        \ permission ID\n    - action_type: Filter by action type (add, remove)\n\
        \    - performed_by: Filter by the user who performed the action\n\n    Search:\n\
        \    - role__name: Role name\n    - permission__code_name: Permission code\
        \ name\n\n    Ordering:\n    - timestamp: When the action occurred"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for role permission audit logs
      tags:
        - rolesapp
  /api/temp/rolepermissionlog/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for role permission audit logs\n\n    These are read-only\
        \ records of changes to role permissions,\n    providing an audit trail of\
        \ who changed what permissions and when.\n\n    Permissions:\n    - Requires\
        \ authentication\n    - User must have 'view' permission on the 'roles' resource\n\
        \n    Filters:\n    - role: Filter by role ID\n    - permission: Filter by\
        \ permission ID\n    - action_type: Filter by action type (add, remove)\n\
        \    - performed_by: Filter by the user who performed the action\n\n    Search:\n\
        \    - role__name: Role name\n    - permission__code_name: Permission code\
        \ name\n\n    Ordering:\n    - timestamp: When the action occurred"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for role permission audit logs
      tags:
        - rolesapp
  /api/temp/savedfilter/:
    get:
      description: API endpoint for managing saved dashboard filters
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing saved dashboard filters
      tags:
        - shopDashboardApp
  /api/temp/savedfilter/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing saved dashboard filters
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing saved dashboard filters
      tags:
        - shopDashboardApp
  /api/temp/savedfilter/(?P<pk>[/.]+)/toggle_favorite/:
    post:
      description: Toggle favorite status of a filter
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Toggle favorite status of a filter
      tags:
        - shopDashboardApp
  /api/temp/scheduledreport/:
    get:
      description: API endpoint for managing scheduled reports
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing scheduled reports
      tags:
        - shopDashboardApp
  /api/temp/scheduledreport/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing scheduled reports
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing scheduled reports
      tags:
        - shopDashboardApp
  /api/temp/scheduledreport/(?P<pk>[/.]+)/run_now/:
    post:
      description: Run a scheduled report immediately
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Run a scheduled report immediately
      tags:
        - reportanalyticsapp
  /api/temp/scheduledreport/(?P<pk>[/.]+)/send_now/:
    post:
      description: Manually send a report
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Manually send a report
      tags:
        - shopDashboardApp
  /api/temp/scheduledreport/templates/:
    get:
      description: Get report templates
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get report templates
      tags:
        - shopDashboardApp
  /api/temp/service/:
    get:
      description: "API endpoint for services


        API endpoints for managing services including availability, specialists, and
        service details"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for services
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/:
    get:
      description: "API endpoint for services


        API endpoints for managing services including availability, specialists, and
        service details"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for services
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/analyze_buffers/:
    get:
      description:
        "Analyze buffer times (before/after) to suggest optimizations\n\
        \n        This provides insights on whether buffer times should be adjusted\n\
        \        based on actual preparation and cleanup times."
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Analyze buffer times (before/after) to suggest optimizations
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/analyze_duration/:
    get:
      description:
        "Analyze historical service durations to suggest optimizations\n\
        \n        This provides insights on whether the service duration should be\
        \ adjusted\n        based on actual service delivery times."
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Analyze historical service durations to suggest optimizations
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/apply_recommended_buffers/:
    post:
      description: Apply recommended buffer times to the service
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Apply recommended buffer times to the service
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/apply_recommended_duration/:
    post:
      description: Apply a recommended duration to the service
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Apply a recommended duration to the service
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/assign-specialists/:
    post:
      description:
        "Assign specialists to a service\n\n        Body:\n        - specialist_ids:\
        \ List of specialist IDs to assign\n        - replace: Whether to replace\
        \ existing specialists (default False)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Assign specialists to a service
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/availability_slots/:
    get:
      description:
        "Get available time slots for a service on a specific date\n\n\
        \        Query parameters:\n        - date: Date to check (YYYY-MM-DD)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get available time slots for a service on a specific date
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/available-days/:
    get:
      description:
        "Get a list of dates when the service has at least one available\
        \ slot\n\n        Query parameters:\n        - start_date: Start date (YYYY-MM-DD,\
        \ default: today)\n        - end_date: End date (YYYY-MM-DD, default: 30 days\
        \ from start)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get a list of dates when the service has at least one available slot
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/available_specialists/:
    get:
      description:
        "Get available specialists for a service at a specific time\n\n\
        \        Query parameters:\n        - date: Date to check (YYYY-MM-DD)\n \
        \       - start_time: Start time (HH:MM)\n        - end_time: End time (HH:MM)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get available specialists for a service at a specific time
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/complementary_services/:
    get:
      description:
        "Get services that complement this service\n\n        These are\
        \ services that are frequently booked together or logically related"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get services that complement this service
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/duplicate/:
    post:
      description:
        "Duplicate a service with all its associated data\n\n        Query\
        \ parameters:\n        - new_name: Optional new name for the duplicate\n \
        \       - include_specialists: Whether to duplicate specialist assignments\
        \ (default True)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Duplicate a service with all its associated data
      tags:
        - serviceapp
  /api/temp/service/(?P<pk>[/.]+)/recommended_specialists/:
    get:
      description:
        "Get recommended specialists for a service, ranked by suitability\n\
        \n        Query parameters:\n        - date: Optional date for specific time\
        \ slot (YYYY-MM-DD)\n        - start_time: Optional start time (HH:MM)\n \
        \       - end_time: Optional end time (HH:MM)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get recommended specialists for a service, ranked by suitability
      tags:
        - serviceapp
  /api/temp/serviceaftercare/:
    get:
      description: "API endpoint for service aftercare tips


        API endpoints for managing service aftercare tips"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service aftercare tips
      tags:
        - serviceapp
  /api/temp/serviceaftercare/(?P<pk>[/.]+)/:
    get:
      description: "API endpoint for service aftercare tips


        API endpoints for managing service aftercare tips"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service aftercare tips
      tags:
        - serviceapp
  /api/temp/serviceaftercare/reorder/:
    post:
      description:
        "Reorder aftercare tips\n\n        Body:\n        - tip_order:\
        \ List of tip IDs in the desired order"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Reorder aftercare tips
      tags:
        - serviceapp
  /api/temp/serviceavailability/:
    get:
      description: "API endpoint for service availability


        API endpoints for managing service availability settings"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service availability
      tags:
        - serviceapp
  /api/temp/serviceavailability/(?P<pk>[/.]+)/:
    get:
      description: "API endpoint for service availability


        API endpoints for managing service availability settings"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service availability
      tags:
        - serviceapp
  /api/temp/servicediscount/:
    get:
      description:
        "API endpoint for service discounts\n\n    Allows shop managers\
        \ and administrators to create, retrieve, update,\n    and delete discounts\
        \ applied to specific services or categories.\n\n    Endpoints:\n    - GET\
        \ /api/service-discounts/ - List all discounts (filtered by user permissions)\n\
        \    - POST /api/service-discounts/ - Create a new service discount\n    -\
        \ GET /api/service-discounts/{id}/ - Get a specific discount\n    - PUT/PATCH\
        \ /api/service-discounts/{id}/ - Update a discount\n    - DELETE /api/service-discounts/{id}/\
        \ - Delete a discount\n    - GET /api/service-discounts/active/ - Get active\
        \ discounts for a shop/service\n\n    Permissions:\n    - Authentication required\
        \ for all actions\n    - Shop managers can manage discounts for their shops\n\
        \    - Admin users can manage all discounts\n    - Regular users can only\
        \ view discounts"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service discounts
      tags:
        - discountapp
  /api/temp/servicediscount/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for service discounts\n\n    Allows shop managers\
        \ and administrators to create, retrieve, update,\n    and delete discounts\
        \ applied to specific services or categories.\n\n    Endpoints:\n    - GET\
        \ /api/service-discounts/ - List all discounts (filtered by user permissions)\n\
        \    - POST /api/service-discounts/ - Create a new service discount\n    -\
        \ GET /api/service-discounts/{id}/ - Get a specific discount\n    - PUT/PATCH\
        \ /api/service-discounts/{id}/ - Update a discount\n    - DELETE /api/service-discounts/{id}/\
        \ - Delete a discount\n    - GET /api/service-discounts/active/ - Get active\
        \ discounts for a shop/service\n\n    Permissions:\n    - Authentication required\
        \ for all actions\n    - Shop managers can manage discounts for their shops\n\
        \    - Admin users can manage all discounts\n    - Regular users can only\
        \ view discounts"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service discounts
      tags:
        - discountapp
  /api/temp/servicediscount/active/:
    get:
      description:
        "Get active discounts\n\n        Returns currently active discounts\
        \ for a specified shop and\n        optionally a specific service.\n\n   \
        \     Query parameters:\n            shop_id: ID of the shop (required)\n\
        \            service_id: ID of the service (optional)\n\n        Returns:\n\
        \            Response: List of active discounts\n\n        Status codes:\n\
        \            200: Discounts retrieved successfully\n            400: Missing\
        \ shop_id parameter\n            404: Shop or service not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get active discounts
      tags:
        - discountapp
  /api/temp/serviceexception/:
    get:
      description: "API endpoint for service exceptions (holidays, special days)


        API endpoints for managing service exceptions like holidays and special days"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service exceptions (holidays, special days)
      tags:
        - serviceapp
  /api/temp/serviceexception/(?P<pk>[/.]+)/:
    get:
      description: "API endpoint for service exceptions (holidays, special days)


        API endpoints for managing service exceptions like holidays and special days"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service exceptions (holidays, special days)
      tags:
        - serviceapp
  /api/temp/servicefaq/:
    get:
      description: "API endpoint for service FAQs


        API endpoints for managing frequently asked questions for services"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service FAQs
      tags:
        - serviceapp
  /api/temp/servicefaq/(?P<pk>[/.]+)/:
    get:
      description: "API endpoint for service FAQs


        API endpoints for managing frequently asked questions for services"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service FAQs
      tags:
        - serviceapp
  /api/temp/servicefaq/reorder/:
    post:
      description:
        "Reorder FAQs\n\n        Body:\n        - faq_order: List of FAQ\
        \ IDs in the desired order"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Reorder FAQs
      tags:
        - serviceapp
  /api/temp/serviceoverview/:
    get:
      description: "API endpoint for service overviews


        API endpoints for managing service overview items"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service overviews
      tags:
        - serviceapp
  /api/temp/serviceoverview/(?P<pk>[/.]+)/:
    get:
      description: "API endpoint for service overviews


        API endpoints for managing service overview items"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service overviews
      tags:
        - serviceapp
  /api/temp/serviceoverview/reorder/:
    post:
      description:
        "Reorder overviews\n\n        Body:\n        - overview_order:\
        \ List of overview IDs in the desired order"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Reorder overviews
      tags:
        - serviceapp
  /api/temp/servicereview/:
    get:
      description: "ViewSet for service reviews


        API endpoints for managing service reviews"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for service reviews
      tags:
        - reviewapp
  /api/temp/servicereview/(?P<pk>[/.]+)/:
    get:
      description: "ViewSet for service reviews


        API endpoints for managing service reviews"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for service reviews
      tags:
        - reviewapp
  /api/temp/servicereview/(?P<pk>[/.]+)/helpful/:
    post:
      description: Mark review as helpful/not helpful
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Mark review as helpful/not helpful
      tags:
        - reviewapp
  /api/temp/servicereview/(?P<pk>[/.]+)/moderate/:
    post:
      description: Moderate a review (approve/reject)
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Moderate a review (approve/reject)
      tags:
        - reviewapp
  /api/temp/servicereview/(?P<pk>[/.]+)/report/:
    post:
      description: Report inappropriate review
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Report inappropriate review
      tags:
        - reviewapp
  /api/temp/servicestep/:
    get:
      description: "API endpoint for service steps (How It Works)


        API endpoints for managing service steps (How It Works)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service steps (How It Works)
      tags:
        - serviceapp
  /api/temp/servicestep/(?P<pk>[/.]+)/:
    get:
      description: "API endpoint for service steps (How It Works)


        API endpoints for managing service steps (How It Works)"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for service steps (How It Works)
      tags:
        - serviceapp
  /api/temp/servicestep/reorder/:
    post:
      description:
        "Reorder steps\n\n        Body:\n        - step_order: List of\
        \ step IDs in the desired order"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Reorder steps
      tags:
        - serviceapp
  /api/temp/shop/:
    get:
      description:
        "API endpoint for managing shops.\n    \n\nAPI endpoints for managing\
        \ shops, their settings, hours, and verifications"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shops.
      tags:
        - shopapp
  /api/temp/shop/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing shops.\n    \n\nAPI endpoints for managing\
        \ shops, their settings, hours, and verifications"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shops.
      tags:
        - shopapp
  /api/temp/shop/(?P<pk>[/.]+)/hours/:
    get:
      description: Get shop hours.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get shop hours.
      tags:
        - shopapp
  /api/temp/shop/(?P<pk>[/.]+)/request_verification/:
    post:
      description: Request verification for a shop.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Request verification for a shop.
      tags:
        - shopapp
  /api/temp/shop/(?P<pk>[/.]+)/settings/:
    get:
      description: Get shop settings.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get shop settings.
      tags:
        - shopapp
  /api/temp/shop/(?P<pk>[/.]+)/statistics/:
    get:
      description: Get shop statistics.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get shop statistics.
      tags:
        - shopapp
  /api/temp/shop/(?P<pk>[/.]+)/update_settings/:
    patch:
      description: Update shop settings.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Update shop settings.
      tags:
        - shopapp
  /api/temp/shopanalytics/:
    get:
      description: Shop analytics API endpoints
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Shop analytics API endpoints
      tags:
        - reportanalyticsapp
  /api/temp/shopanalytics/(?P<pk>[/.]+)/:
    get:
      description: Shop analytics API endpoints
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Shop analytics API endpoints
      tags:
        - reportanalyticsapp
  /api/temp/shopanalytics/booking_trends/:
    get:
      description: Get booking trends for a shop over time
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get booking trends for a shop over time
      tags:
        - reportanalyticsapp
  /api/temp/shopanalytics/revenue_summary/:
    get:
      description: Get revenue summary for a shop over time
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get revenue summary for a shop over time
      tags:
        - reportanalyticsapp
  /api/temp/shopfollowers/:
    get:
      description:
        "List all followers of a shop\n\n        Returns a paginated list\
        \ of all users following the specified shop.\n\n        Returns:\n       \
        \     Response: List of follow relationships"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: List all followers of a shop
      tags:
        - followapp
  /api/temp/shopfollowers/most_followed/:
    get:
      description:
        "Get most followed shops\n\n        Returns a list of shops with\
        \ the highest follower counts.\n        This endpoint is accessible to all\
        \ authenticated users.\n\n        Returns:\n            Response: List of\
        \ most followed shops with their follower counts\n                [\n    \
        \                {\n                        \"shop\": {shop_data},\n     \
        \                   \"follower_count\": integer\n                    },\n\
        \                    ...\n                ]"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get most followed shops
      tags:
        - followapp
  /api/temp/shopfollowers/stats/:
    get:
      description:
        "Get follower statistics for a shop\n\n        Returns detailed\
        \ statistics about a shop's followers, including:\n        - Total follower\
        \ count\n        - Weekly growth rate\n        - Monthly growth rate\n   \
        \     - Historical trend data\n\n        Returns:\n            Response: Follower\
        \ statistics and trends\n                {\n                    \"follower_count\"\
        : integer,\n                    \"weekly_growth\": float,\n              \
        \      \"monthly_growth\": float,\n                    \"trends\": {\n   \
        \                     \"daily\": [...],\n                        \"weekly\"\
        : [...],\n                        \"monthly\": [...]\n                   \
        \ }\n                }\n\n        Status codes:\n            200: Statistics\
        \ retrieved successfully\n            404: Shop not found"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get follower statistics for a shop
      tags:
        - followapp
  /api/temp/shophours/:
    get:
      description:
        "API endpoint for managing shop hours.\n    \n\nAPI endpoints for\
        \ managing shop operating hours"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop hours.
      tags:
        - shopapp
  /api/temp/shophours/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing shop hours.\n    \n\nAPI endpoints for\
        \ managing shop operating hours"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop hours.
      tags:
        - shopapp
  /api/temp/shoplocation/:
    get:
      description:
        "API endpoint for shop locations.\n    \n\nAPI endpoints for retrieving\
        \ shop locations"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for shop locations.
      tags:
        - shopapp
  /api/temp/shoplocation/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for shop locations.\n    \n\nAPI endpoints for retrieving\
        \ shop locations"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for shop locations.
      tags:
        - shopapp
  /api/temp/shopreview/:
    get:
      description: "ViewSet for shop reviews


        API endpoints for managing shop reviews"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for shop reviews
      tags:
        - reviewapp
  /api/temp/shopreview/(?P<pk>[/.]+)/:
    get:
      description: "ViewSet for shop reviews


        API endpoints for managing shop reviews"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for shop reviews
      tags:
        - reviewapp
  /api/temp/shopreview/(?P<pk>[/.]+)/helpful/:
    post:
      description: Mark review as helpful/not helpful
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Mark review as helpful/not helpful
      tags:
        - reviewapp
  /api/temp/shopreview/(?P<pk>[/.]+)/moderate/:
    post:
      description: Moderate a review (approve/reject)
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Moderate a review (approve/reject)
      tags:
        - reviewapp
  /api/temp/shopreview/(?P<pk>[/.]+)/report/:
    post:
      description: Report inappropriate review
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Report inappropriate review
      tags:
        - reviewapp
  /api/temp/shopsettings/:
    get:
      description:
        "API endpoint for managing shop settings.\n    \n\nAPI endpoints\
        \ for managing shop settings"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop settings.
      tags:
        - shopapp
  /api/temp/shopsettings/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing shop settings.\n    \n\nAPI endpoints\
        \ for managing shop settings"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop settings.
      tags:
        - shopapp
  /api/temp/shopverification/:
    get:
      description:
        "API endpoint for managing shop verifications.\n    \n\nAPI endpoints\
        \ for managing shop verification requests"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop verifications.
      tags:
        - shopapp
  /api/temp/shopverification/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for managing shop verifications.\n    \n\nAPI endpoints\
        \ for managing shop verification requests"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop verifications.
      tags:
        - shopapp
  /api/temp/shopverification/(?P<pk>[/.]+)/approve/:
    post:
      description: Approve shop verification.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Approve shop verification.
      tags:
        - shopapp
  /api/temp/shopverification/(?P<pk>[/.]+)/reject/:
    post:
      description: Reject shop verification.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Reject shop verification.
      tags:
        - shopapp
  /api/temp/specialist/:
    get:
      description:
        "ViewSet for specialists.\n\n    Provides CRUD operations for specialists,\
        \ who are shop employees that provide services\n    to customers. Specialists\
        \ have skills, working hours, and portfolio items.\n\n    Endpoints:\n   \
        \ - GET /api/specialists/ - List all specialists\n    - POST /api/specialists/\
        \ - Create a new specialist\n    - GET /api/specialists/{id}/ - Get a specific\
        \ specialist\n    - PUT/PATCH /api/specialists/{id}/ - Update a specialist\n\
        \    - DELETE /api/specialists/{id}/ - Delete a specialist\n\n    Permissions:\n\
        \    - List/Retrieve: Anyone can view specialists\n    - Create/Update/Delete:\
        \ Requires appropriate permissions to manage specialists\n\n    Filtering:\n\
        \    - Multiple filters available via SpecialistFilter\n\n    Search fields:\n\
        \    - employee__first_name: Specialist's first name\n    - employee__last_name:\
        \ Specialist's last name\n    - bio: Specialist's biography\n\n    Ordering:\n\
        \    - avg_rating: Average rating\n    - total_bookings: Total number of bookings\n\
        \    - experience_years: Years of experience\n    - created_at: Creation date"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for specialists.
      tags:
        - specialistsapp
  /api/temp/specialist/(?P<pk>[/.]+)/:
    get:
      description:
        "ViewSet for specialists.\n\n    Provides CRUD operations for specialists,\
        \ who are shop employees that provide services\n    to customers. Specialists\
        \ have skills, working hours, and portfolio items.\n\n    Endpoints:\n   \
        \ - GET /api/specialists/ - List all specialists\n    - POST /api/specialists/\
        \ - Create a new specialist\n    - GET /api/specialists/{id}/ - Get a specific\
        \ specialist\n    - PUT/PATCH /api/specialists/{id}/ - Update a specialist\n\
        \    - DELETE /api/specialists/{id}/ - Delete a specialist\n\n    Permissions:\n\
        \    - List/Retrieve: Anyone can view specialists\n    - Create/Update/Delete:\
        \ Requires appropriate permissions to manage specialists\n\n    Filtering:\n\
        \    - Multiple filters available via SpecialistFilter\n\n    Search fields:\n\
        \    - employee__first_name: Specialist's first name\n    - employee__last_name:\
        \ Specialist's last name\n    - bio: Specialist's biography\n\n    Ordering:\n\
        \    - avg_rating: Average rating\n    - total_bookings: Total number of bookings\n\
        \    - experience_years: Years of experience\n    - created_at: Creation date"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for specialists.
      tags:
        - specialistsapp
  /api/temp/specialistanalytics/:
    get:
      description: Specialist analytics API endpoints
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Specialist analytics API endpoints
      tags:
        - reportanalyticsapp
  /api/temp/specialistanalytics/(?P<pk>[/.]+)/:
    get:
      description: Specialist analytics API endpoints
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Specialist analytics API endpoints
      tags:
        - reportanalyticsapp
  /api/temp/specialistanalytics/performance_comparison/:
    get:
      description: Compare performance between specialists
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Compare performance between specialists
      tags:
        - reportanalyticsapp
  /api/temp/specialistreview/:
    get:
      description: "ViewSet for specialist reviews


        API endpoints for managing specialist reviews"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for specialist reviews
      tags:
        - reviewapp
  /api/temp/specialistreview/(?P<pk>[/.]+)/:
    get:
      description: "ViewSet for specialist reviews


        API endpoints for managing specialist reviews"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for specialist reviews
      tags:
        - reviewapp
  /api/temp/specialistreview/(?P<pk>[/.]+)/helpful/:
    post:
      description: Mark review as helpful/not helpful
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Mark review as helpful/not helpful
      tags:
        - reviewapp
  /api/temp/specialistreview/(?P<pk>[/.]+)/moderate/:
    post:
      description: Moderate a review (approve/reject)
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Moderate a review (approve/reject)
      tags:
        - reviewapp
  /api/temp/specialistreview/(?P<pk>[/.]+)/report/:
    post:
      description: Report inappropriate review
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Report inappropriate review
      tags:
        - reviewapp
  /api/temp/story/:
    get:
      description:
        "API endpoint for creating, retrieving, and managing stories.\n\
        \n    Handles all CRUD operations for shop stories, which automatically expire\n\
        \    after a specified time period (typically 24 hours). Stories can contain\n\
        \    images, video, or text content highlighting shop services and promotions.\n\
        \n    Endpoints:\n    - GET /api/stories/ - List stories (filtered based on\
        \ user role)\n    - POST /api/stories/ - Create a new story\n    - GET /api/stories/{id}/\
        \ - Get story details\n    - PUT/PATCH /api/stories/{id}/ - Update a story\n\
        \    - DELETE /api/stories/{id}/ - Delete a story\n    - GET /api/stories/home_feed/\
        \ - Get stories for customer home feed\n    - GET /api/stories/shop_feed/\
        \ - Get stories for a specific shop\n    - POST /api/stories/{id}/mark_viewed/\
        \ - Mark a story as viewed\n\n    Permissions:\n    - Authentication required\
        \ for all actions\n    - Shop staff can create/update/delete their shop's\
        \ stories\n    - Customers can only read/view stories\n\n    Filtering:\n\
        \    - shop: Filter by shop ID\n    - is_expired: Filter by expiry status\n\
        \    - is_viewed: Filter by viewed status (for current user)\n    - followed:\
        \ Filter by shops followed by the user\n\n    Ordering:\n    - created_at:\
        \ Creation date/time"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for creating, retrieving, and managing stories.
      tags:
        - storiesapp
  /api/temp/story/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for creating, retrieving, and managing stories.\n\
        \n    Handles all CRUD operations for shop stories, which automatically expire\n\
        \    after a specified time period (typically 24 hours). Stories can contain\n\
        \    images, video, or text content highlighting shop services and promotions.\n\
        \n    Endpoints:\n    - GET /api/stories/ - List stories (filtered based on\
        \ user role)\n    - POST /api/stories/ - Create a new story\n    - GET /api/stories/{id}/\
        \ - Get story details\n    - PUT/PATCH /api/stories/{id}/ - Update a story\n\
        \    - DELETE /api/stories/{id}/ - Delete a story\n    - GET /api/stories/home_feed/\
        \ - Get stories for customer home feed\n    - GET /api/stories/shop_feed/\
        \ - Get stories for a specific shop\n    - POST /api/stories/{id}/mark_viewed/\
        \ - Mark a story as viewed\n\n    Permissions:\n    - Authentication required\
        \ for all actions\n    - Shop staff can create/update/delete their shop's\
        \ stories\n    - Customers can only read/view stories\n\n    Filtering:\n\
        \    - shop: Filter by shop ID\n    - is_expired: Filter by expiry status\n\
        \    - is_viewed: Filter by viewed status (for current user)\n    - followed:\
        \ Filter by shops followed by the user\n\n    Ordering:\n    - created_at:\
        \ Creation date/time"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for creating, retrieving, and managing stories.
      tags:
        - storiesapp
  /api/temp/story/(?P<pk>[/.]+)/mark_viewed/:
    post:
      description:
        "Mark a story as viewed by the current user\n\n        Records\
        \ that the authenticated customer has viewed the story.\n        This affects\
        \ the story's view count and the user's feed.\n\n        Only available to\
        \ users with 'customer' type.\n\n        Returns:\n            Response: Success\
        \ message\n\n        Status codes:\n            200: Story marked as viewed\
        \ successfully\n            403: User is not a customer"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Mark a story as viewed by the current user
      tags:
        - storiesapp
  /api/temp/story/home_feed/:
    get:
      description:
        "Get stories for the customer home feed\n\n        Returns stories\
        \ from shops the customer follows, prioritized\n        and organized in a\
        \ personalized feed format.\n\n        Only available to users with 'customer'\
        \ type.\n\n        Returns:\n            Response: List of stories in feed\
        \ format\n\n        Status codes:\n            200: Feed retrieved successfully\n\
        \            403: User is not a customer"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get stories for the customer home feed
      tags:
        - storiesapp
  /api/temp/story/shop_feed/:
    get:
      description:
        "Get stories for a specific shop's screen\n\n        Returns all\
        \ active stories for a specific shop, organized\n        in chronological\
        \ order.\n\n        Query parameters:\n            shop_id: ID of the shop\
        \ (required)\n\n        Returns:\n            Response: List of stories for\
        \ the shop\n\n        Status codes:\n            200: Feed retrieved successfully\n\
        \            400: Missing shop_id parameter"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get stories for a specific shop's screen
      tags:
        - storiesapp
  /api/temp/subscription/:
    get:
      description:
        "ViewSet for subscriptions\n\n    Manages company subscriptions\
        \ to plans, including creation, updates,\n    renewals, cancellations, and\
        \ viewing invoices and usage.\n\n    Endpoints:\n    - GET /api/subscriptions/\
        \ - List all subscriptions\n    - POST /api/subscriptions/ - Create a new\
        \ subscription\n    - GET /api/subscriptions/{id}/ - Get subscription details\n\
        \    - PUT/PATCH /api/subscriptions/{id}/ - Update a subscription\n    - DELETE\
        \ /api/subscriptions/{id}/ - Delete a subscription\n    - GET /api/subscriptions/{id}/invoices/\
        \ - Get invoices for a subscription\n    - GET /api/subscriptions/{id}/usage/\
        \ - Get feature usage for a subscription\n    - POST /api/subscriptions/{id}/renew/\
        \ - Manually renew a subscription\n    - POST /api/subscriptions/{id}/cancel/\
        \ - Cancel a subscription\n    - POST /api/subscriptions/{id}/change_plan/\
        \ - Change subscription plan\n\n    Permissions:\n    - View operations: Users\
        \ with CanViewSubscriptions permission\n    - Modify operations: Users with\
        \ CanManageSubscriptions permission\n\n    Query parameters:\n    - status:\
        \ Filter by subscription status\n    - company: Filter by company ID\n   \
        \ - plan: Filter by plan ID"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for subscriptions
      tags:
        - subscriptionapp
  /api/temp/subscription/(?P<pk>[/.]+)/:
    get:
      description:
        "ViewSet for subscriptions\n\n    Manages company subscriptions\
        \ to plans, including creation, updates,\n    renewals, cancellations, and\
        \ viewing invoices and usage.\n\n    Endpoints:\n    - GET /api/subscriptions/\
        \ - List all subscriptions\n    - POST /api/subscriptions/ - Create a new\
        \ subscription\n    - GET /api/subscriptions/{id}/ - Get subscription details\n\
        \    - PUT/PATCH /api/subscriptions/{id}/ - Update a subscription\n    - DELETE\
        \ /api/subscriptions/{id}/ - Delete a subscription\n    - GET /api/subscriptions/{id}/invoices/\
        \ - Get invoices for a subscription\n    - GET /api/subscriptions/{id}/usage/\
        \ - Get feature usage for a subscription\n    - POST /api/subscriptions/{id}/renew/\
        \ - Manually renew a subscription\n    - POST /api/subscriptions/{id}/cancel/\
        \ - Cancel a subscription\n    - POST /api/subscriptions/{id}/change_plan/\
        \ - Change subscription plan\n\n    Permissions:\n    - View operations: Users\
        \ with CanViewSubscriptions permission\n    - Modify operations: Users with\
        \ CanManageSubscriptions permission\n\n    Query parameters:\n    - status:\
        \ Filter by subscription status\n    - company: Filter by company ID\n   \
        \ - plan: Filter by plan ID"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for subscriptions
      tags:
        - subscriptionapp
  /api/temp/subscription/(?P<pk>[/.]+)/cancel/:
    post:
      description:
        "Cancel a subscription\n\n        Cancels the subscription, setting\
        \ its status to 'canceled'\n        and recording the cancellation reason.\n\
        \n        Request body:\n            {\n                \"reason\": \"Cancellation\
        \ reason\" (optional)\n            }\n\n        Returns:\n            Response:\
        \ Success message\n                {\n                    \"detail\": \"Subscription\
        \ canceled successfully\"\n                }\n\n        Status codes:\n  \
        \          200: Subscription canceled successfully\n            400: Error\
        \ canceling subscription"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Cancel a subscription
      tags:
        - subscriptionapp
  /api/temp/subscription/(?P<pk>[/.]+)/change_plan/:
    post:
      description:
        "Change subscription plan\n\n        Changes the subscription to\
        \ a different plan, potentially\n        prorating charges for the remaining\
        \ subscription period.\n\n        Request body:\n            {\n         \
        \       \"plan_id\": \"uuid\" (required)\n            }\n\n        Returns:\n\
        \            Response: Success message\n                {\n              \
        \      \"detail\": \"Subscription plan changed successfully\"\n          \
        \      }\n\n        Status codes:\n            200: Plan changed successfully\n\
        \            400: Error changing plan or missing plan_id"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Change subscription plan
      tags:
        - subscriptionapp
  /api/temp/subscription/(?P<pk>[/.]+)/invoices/:
    get:
      description:
        "Get invoices for a specific subscription\n\n        Returns all\
        \ invoices for the subscription, ordered by issued date\n        (most recent\
        \ first) with pagination support.\n\n        Returns:\n            Response:\
        \ List of subscription invoices"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get invoices for a specific subscription
      tags:
        - subscriptionapp
  /api/temp/subscription/(?P<pk>[/.]+)/renew/:
    post:
      description:
        "Manually renew a subscription\n\n        Initiates the renewal\
        \ process for the subscription,\n        generating a new invoice if needed.\n\
        \n        Returns:\n            Response: Renewal status and payment URL if\
        \ applicable\n                {\n                    \"detail\": \"Renewal\
        \ initiated successfully\",\n                    \"payment_url\": \"https://payment.url\"\
        \ (optional)\n                }\n\n        Status codes:\n            200:\
        \ Renewal initiated successfully\n            400: Error initiating renewal"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Manually renew a subscription
      tags:
        - subscriptionapp
  /api/temp/subscription/(?P<pk>[/.]+)/usage/:
    get:
      description:
        "Get feature usage for a specific subscription\n\n        Returns\
        \ current usage data for all metered features\n        included in the subscription.\n\
        \n        Returns:\n            Response: List of feature usage records"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get feature usage for a specific subscription
      tags:
        - subscriptionapp
  /api/temp/subscriptioninvoice/:
    get:
      description:
        "ViewSet for subscription invoices\n\n    Provides read-only access\
        \ to subscription invoices, including\n    filtering, viewing details, and\
        \ downloading invoices as PDFs.\n\n    Endpoints:\n    - GET /api/subscription-invoices/\
        \ - List all invoices\n    - GET /api/subscription-invoices/{id}/ - Get invoice\
        \ details\n    - GET /api/subscription-invoices/{id}/download/ - Download\
        \ invoice as PDF\n\n    Permissions:\n    - Users with CanViewSubscriptions\
        \ permission\n\n    Query parameters:\n    - subscription: Filter by subscription\
        \ ID\n    - company: Filter by company ID\n    - status: Filter by invoice\
        \ status"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for subscription invoices
      tags:
        - subscriptionapp
  /api/temp/subscriptioninvoice/(?P<pk>[/.]+)/:
    get:
      description:
        "ViewSet for subscription invoices\n\n    Provides read-only access\
        \ to subscription invoices, including\n    filtering, viewing details, and\
        \ downloading invoices as PDFs.\n\n    Endpoints:\n    - GET /api/subscription-invoices/\
        \ - List all invoices\n    - GET /api/subscription-invoices/{id}/ - Get invoice\
        \ details\n    - GET /api/subscription-invoices/{id}/download/ - Download\
        \ invoice as PDF\n\n    Permissions:\n    - Users with CanViewSubscriptions\
        \ permission\n\n    Query parameters:\n    - subscription: Filter by subscription\
        \ ID\n    - company: Filter by company ID\n    - status: Filter by invoice\
        \ status"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: ViewSet for subscription invoices
      tags:
        - subscriptionapp
  /api/temp/subscriptioninvoice/(?P<pk>[/.]+)/download/:
    get:
      description:
        "Download invoice as PDF\n\n        Generates a PDF version of\
        \ the invoice for downloading.\n\n        Returns:\n            Response:\
        \ Success message with download URL\n                {\n                 \
        \   \"detail\": \"Invoice PDF generated successfully\",\n                \
        \    \"download_url\": \"/api/subscriptions/invoices/{id}/pdf/\"\n       \
        \         }\n\n        Status codes:\n            200: PDF generated successfully\n\
        \            400: Error generating PDF"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Download invoice as PDF
      tags:
        - subscriptionapp
  /api/temp/supportmessage/:
    get:
      description: API endpoint for managing support ticket messages.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing support ticket messages.
      tags:
        - queueMeAdminApp
  /api/temp/supportmessage/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing support ticket messages.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing support ticket messages.
      tags:
        - queueMeAdminApp
  /api/temp/supportticket/:
    get:
      description: API endpoint for managing support tickets.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing support tickets.
      tags:
        - queueMeAdminApp
  /api/temp/supportticket/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing support tickets.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing support tickets.
      tags:
        - queueMeAdminApp
  /api/temp/supportticket/(?P<pk>[/.]+)/assign/:
    post:
      description: Assign a ticket to a specific admin
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Assign a ticket to a specific admin
      tags:
        - queueMeAdminApp
  /api/temp/supportticket/(?P<pk>[/.]+)/change_status/:
    post:
      description: Change the status of a ticket
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Change the status of a ticket
      tags:
        - queueMeAdminApp
  /api/temp/supportticket/my_assigned/:
    get:
      description: Get tickets assigned to the current admin
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get tickets assigned to the current admin
      tags:
        - queueMeAdminApp
  /api/temp/supportticket/stats/:
    get:
      description: Get support ticket statistics
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get support ticket statistics
      tags:
        - queueMeAdminApp
  /api/temp/systemsetting/:
    get:
      description: API endpoint for managing system settings.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing system settings.
      tags:
        - queueMeAdminApp
  /api/temp/systemsetting/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing system settings.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing system settings.
      tags:
        - queueMeAdminApp
  /api/temp/systemsetting/public/:
    get:
      description: Get only public settings (available to all users)
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get only public settings (available to all users)
      tags:
        - queueMeAdminApp
  /api/temp/userprofile/(?P<pk>[/.]+)/:
    get:
      description: Override to add documentation
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Override to add documentation
      tags:
        - authapp
  /api/temp/userprofile/change_phone/:
    post:
      description: Request phone number change.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Request phone number change.
      tags:
        - authapp
  /api/temp/userprofile/verify_new_phone/:
    post:
      description: Verify new phone number with OTP.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Verify new phone number with OTP.
      tags:
        - authapp
  /api/temp/userrole/:
    get:
      description:
        "API endpoint for user role assignments\n\n    This manages the\
        \ many-to-many relationship between users and roles,\n    allowing users to\
        \ be assigned to roles and given specific permissions.\n\n    Permissions:\n\
        \    - Requires authentication\n    - 'view' permission for listing and retrieving\n\
        \    - 'manage' permission for creating, updating and deleting\n\n    Filters:\n\
        \    - user: Filter by user ID\n    - role: Filter by role ID\n    - is_primary:\
        \ Filter by primary role status\n\n    Search:\n    - user__phone_number:\
        \ User's phone number\n    - role__name: Role name\n\n    Ordering:\n    -\
        \ assigned_at: Assignment date\n    - is_primary: Primary role status"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for user role assignments
      tags:
        - rolesapp
  /api/temp/userrole/(?P<pk>[/.]+)/:
    get:
      description:
        "API endpoint for user role assignments\n\n    This manages the\
        \ many-to-many relationship between users and roles,\n    allowing users to\
        \ be assigned to roles and given specific permissions.\n\n    Permissions:\n\
        \    - Requires authentication\n    - 'view' permission for listing and retrieving\n\
        \    - 'manage' permission for creating, updating and deleting\n\n    Filters:\n\
        \    - user: Filter by user ID\n    - role: Filter by role ID\n    - is_primary:\
        \ Filter by primary role status\n\n    Search:\n    - user__phone_number:\
        \ User's phone number\n    - role__name: Role name\n\n    Ordering:\n    -\
        \ assigned_at: Assignment date\n    - is_primary: Primary role status"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for user role assignments
      tags:
        - rolesapp
  /api/temp/userrole/by_entity/:
    get:
      description:
        "Get roles for a specific entity (e.g., shop, company)\n\n    \
        \    Query parameters:\n            entity_type: Type of entity (e.g., 'shop',\
        \ 'company') (required)\n            entity_id: UUID of the entity (required)\n\
        \n        Returns:\n            Response: List of user role assignments for\
        \ the specified entity"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get roles for a specific entity (e.g., shop, company)
      tags:
        - rolesapp
  /api/temp/userrole/by_role/:
    get:
      description:
        "Get users for a specific role\n\n        Query parameters:\n \
        \           role_id: UUID of the role (required)\n\n        Returns:\n   \
        \         Response: List of user assignments for the specified role"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get users for a specific role
      tags:
        - rolesapp
  /api/temp/userrole/by_user/:
    get:
      description:
        "Get roles for a specific user\n\n        Query parameters:\n \
        \           user_id: UUID of the user (required)\n\n        Returns:\n   \
        \         Response: List of role assignments for the specified user"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get roles for a specific user
      tags:
        - rolesapp
  /api/temp/userrole/my_roles/:
    get:
      description:
        "Get roles for the current user\n\n        Returns all active roles\
        \ assigned to the current authenticated user.\n\n        Returns:\n      \
        \      Response: List of role assignments for the current user"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get roles for the current user
      tags:
        - rolesapp
  /api/temp/verificationrequest/:
    get:
      description: API endpoint for managing shop verification requests.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop verification requests.
      tags:
        - queueMeAdminApp
  /api/temp/verificationrequest/(?P<pk>[/.]+)/:
    get:
      description: API endpoint for managing shop verification requests.
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: API endpoint for managing shop verification requests.
      tags:
        - queueMeAdminApp
  /api/temp/verificationrequest/(?P<pk>[/.]+)/verify/:
    post:
      description: Approve or reject a verification request
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Approve or reject a verification request
      tags:
        - queueMeAdminApp
  /api/temp/verificationrequest/pending/:
    get:
      description: Get all pending verification requests
      responses:
        "200":
          description: Successful operation
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Server error
      summary: Get all pending verification requests
      tags:
        - queueMeAdminApp
security:
  - bearerAuth: []
servers:
  - description: Production API server
    url: https://api.queueme.net
  - description: Staging API server
    url: https://staging-api.queueme.net
  - description: Local development server
    url: http://localhost:8000
tags: []
